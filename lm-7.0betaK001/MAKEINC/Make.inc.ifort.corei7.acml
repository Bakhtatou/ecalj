# This is for core i7 with ifort ver.11
#

######################################################
#
# $lmdir, which is defined in Makefile in ./ and in other 
# directories, should point at this root directory.
#
######################################################

#### jump to target (keep this as it is) ###
target:	ALL


############################################
# Libraries BLAS LAPACK FFTW 
############################################
### For a case of ifort.
#eee = /home/takao/ecal
#LIBLOC = 
#  $(eee)/fftw-3.1.2/.libs/libfftw3.a \
#  $(eee)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#  $(eee)/BLASplusLAPACK/GotoBLAS/xerbla.o  \
#  $(eee)/BLASplusLAPACK/GotoBLAS/libgoto.a 

#LIBLOC= -static -lmkl_lapack64 /home/takao/GotoBLAS/libgoto.a -lguide -lfftw3

LIBLOC= /opt/acml4.2.0/ifort64_mp/lib/libacml_mp.a -lfftw3 -lguide 

#LIBLOC=-L/home/takao/MATHLIB/ATLAS/MyObj/lib -llapack -lcblas -lf77blas -latlas -lgfortran -lfftw3

### for a case of MPI
#eee = /home/takao/ecal
#LIBLOC = \
#  $(eee)/fftw-3.1.2/.libs/libfftw3.a \
#  /home/takao/SCALAPACK/scalapack.a \
#  /home/takao/BLACS/LIB/blacsF77init_MPI-LINUX-0.a \
#  /home/takao/BLACS/LIB/blacs_MPI-LINUX-0.a \
#  $(eee)/BLASplusLAPACK/LAPACK_A/lapack_a.a \
#  $(eee)/BLASplusLAPACK/GotoBLAS/xerbla.o  \
#  $(eee)/BLASplusLAPACK/GotoBLAS/libgoto.a -pthread 
##-lsvml
#
### kino's case
# LIBLOC= -L$(HOME)/kit/fftw/fftw-3.1.2/.libs/ -lfftw3 \
# $(HOME)/kit/numericallib/LAPACK/lapack_LinuxCore2.a \
# $(HOME)/kit/numericallib/LAPACK/blas_LinuxCore2.a \
# $(HOME)/kit/numericallib/LAPACK/tmglib_LinuxCore2.a 



############################################
# Fortran compiler and flags, and linker 
############################################
#FC = mpif90
#LK = mpif90
 FC = ifort
 LK = ifort
#FC = ifort -openmp
#LK = ifort -openmp
#
# where is modules?
moddir = $(lmdir)MODDIR/
module = -module $(moddir)
#
FFLAGS = -O3 -cm -WB  -cpp $(CPP_SW) $(module)
#FFLAGS = -O2 -cm -WB  -cpp $(CPP_SW) $(module)
#FFLAGS = -O1 -cm -WB  -cpp $(CPP_SW) $(module)
#FFLAGS = -O2 -cm -WB  -cpp $(CPP_SW) $(module)
#FFLAGS = -O0 -cm -WB  -cpp $(CPP_SW) $(module)
FFLAGS_LESS = -O2 -cm -WB  -cpp $(CPP_SW) $(module)
FFLAGS_LESS2 = -O1 -cm -WB -cpp $(CPP_SW) $(module)
FFLAGS_LESS3 = -O0 -cm -WB -cpp $(CPP_SW) $(module)
FFLAGS_NONE = -g -cm -WB   -cpp $(CPP_SW) $(module)
#
# safer option (debug)
#FFLAGS =      -g -cm -WB -cpp $(CPP_SW) $(module)
#FFLAGS_LESS = -g -cm -WB -cpp $(CPP_SW) $(module)
#FFLAGS_LESS2 = -g -cm -WB -cpp $(CPP_SW) $(module)
#FFLAGS_LESS3 = -g -cm -WB -cpp $(CPP_SW) $(module)
#FFLAGS_NONE = -g -cm -WB -cpp $(CPP_SW) $(module)


###################################################
# CPP switches (instead of old ccomp procedure
###################################################
CPP_SW=-DHASIARGC  -DHASGETARG  -DFDATE  -DHASGETTIMEOFDAY  -DHASGETENVQQ  -DHASSETENVQQ  -DHASIFPORT  
#
#MPI  case add  -UMPE -UMPIK -DMPI 
#
##MPIK case k-point parallelizaion in MPI add -UMPE -DMPIK -UMPI 




#$(SLATSM)(zhev.o): zhev.F
#	$(FC) $(FFLAGS_NONE) -c zhev.F
#	$(AR) $(ARFLAGS) $(SLATSM) zhev.o
#	rm -f zhev.o





############################################
### Patches for intel ifc ##################
#
# Note that $SLATSM... are defined below.
#
############################################
## ... patch section for ./slatsm/slatsm.a
$(SLATSM)(huntx.o): huntx.F
	$(FC) $(FFLAGS_LESS3) -c huntx.F
	$(AR) $(ARFLAGS) $(SLATSM) huntx.o
	rm -f huntx.o
 
$(SLATSM)(hunti.o): hunti.F
	$(FC) $(FFLAGS_LESS3) -c hunti.F
	$(AR) $(ARFLAGS) $(SLATSM) hunti.o
	rm -f hunti.o
 
$(SLATSM)(polcof.o): polcof.F
	$(FC) $(FFLAGS_LESS3) -c polcof.F
	$(AR) $(ARFLAGS) $(SLATSM) polcof.o
	rm -f polcof.o
 
$(SLATSM)(rdfiln.o): rdfiln.F
	$(FC) $(FFLAGS_LESS3) -c rdfiln.F
	$(AR) $(ARFLAGS) $(SLATSM) rdfiln.o
	rm -f rdfiln.o

## patch section for ./subs/subs.a
$(SUBS)(ropbes.o): $(lmdir)subs/ropbes.F
	$(FC) $(FFLAGS_LESS3) -c ropbes.F
	$(AR) $(ARFLAGS) $(SUBS) ropbes.o
	rm -f ropbes.o
 
$(SUBS)(ropyln.o): $(lmdir)subs/ropyln.F
	$(FC) $(FFLAGS_LESS3) -c ropyln.F
	$(AR) $(ARFLAGS) $(SUBS) ropyln.o
	rm -f ropyln.o
 
$(SUBS)(spcgrp.o): $(lmdir)subs/spcgrp.F
	$(FC) $(FFLAGS_LESS) -c spcgrp.F
	$(AR) $(ARFLAGS) $(SUBS) spcgrp.o
	rm -f spcgrp.o


### these modules requies no optimization ---> safer.
$(SUBS)(m_toksw.o) $(moddir)m_toksw.mod $(moddir)m_gtv.mod:	m_toksw.F
	$(FC) $(FFLAGS_NONE) -c m_toksw.F
	$(AR) $(ARFLAGS) $(SUBS) m_toksw.o
	rm -f m_toksw.o

$(SUBS)(m_rdctrl.o) $(moddir)m_rdctrl.mod:	$(lmdir)subs/m_rdctrl.F
	$(FC) $(FFLAGS_NONE) -c m_rdctrl.F
	$(AR) $(ARFLAGS) $(SUBS) m_rdctrl.o
	rm -f m_rdctrl.o

$(SUBS)(m_rdctrlchk.o) $(moddir)m_rdctrlchk.mod:	$(lmdir)subs/m_rdctrlchk.F
	$(FC) $(FFLAGS_NONE) -c m_rdctrlchk.F
	$(AR) $(ARFLAGS) $(SUBS) m_rdctrlchk.o
	rm -f m_rdctrlchk.o

## ... patch section for ./fp/subs.a
$(FP)(rhogkl.o): rhogkl.F
	$(FC) $(FFLAGS_LESS) -c rhogkl.F
	$(AR) $(ARFLAGS) $(FP) rhogkl.o
	rm -f rhogkl.o



################################################
# module dependency (fixed). What *.F contains what modules.
################################################
$(SUBS)(m_rdctrl.o):	$(moddir)m_gtv.mod $(moddir)m_toksw.mod
$(SUBS)(m_rdctrlchk.o):	$(moddir)m_gtv.mod $(moddir)m_toksw.mod
$(SUBS)(rdctrl2.o):	$(moddir)m_gtv.mod $(moddir)m_rdctrl.mod
$(SUBS)(rdctrlchk.o):	$(moddir)m_gtv.mod $(moddir)m_rdctrlchk.mod
$(FP)(bndfp.o):	$(moddir)m_rdctrl.mod
$(GWD)(bndfp.o):	$(moddir)m_rdctrl.mod



################################################
# --- Make rules ---(fixed).
################################################
.F.o: 
	$(FC) $(FFLAGS) -c $<
 
#.F.a: 
#	$(FC) $(FFLAGS) -c $<
#	$(AR) $(ARFLAGS) $@ $%
#	rm -f $%


################################################
# archiver (maybe fixed).
################################################
AR = ar
ARFLAGS = rv
RANLIB = ranlib


################################################
# program and libraries (choose one of sections; normal, MPI, or MPIK)
################################################
programs = lmf lmfa lmfgw lmdos lmchk lmf2gw lm67 rdcmd
SUBS   = libsubs.a
FP     = libfp.a
GWD    = libgwd.a
SLATSM = slatsm.a
#NC     = libnc.a
#TB     = libtb.a
#
### MPI case #####
#programs = lmf-MPI lmfgw-MPI
#SUBS   = libsubs-MPI.a
#FP     = libfp-MPI.a
#GWD    = libgwd-MPI.a
#SLATSM = slatsm-MPI.a
#
##### MPIK case ##
#programs = lmf-MPIK lmfgw-MPIK
#SUBS   = libsubs-MPIK.a 
#FP     = libfp-MPIK.a
#GWD    = libgwd-MPIK.a
#SLATSM = slatsm-MPI.a  #slatsm-MPI = slatsm-MPIK


### path to libraries (fixed) #########
LIBSUBS = $(lmdir)/subs/$(SUBS)
LIBFP   = $(lmdir)/fp/$(FP)
LIBGWD  = $(lmdir)/gwd/$(GWD)
LIBSLA  = $(lmdir)/slatsm/$(SLATSM)
#LIBNC   = $(lmdir)/nc/$(NC)
#LIBTB   = $(lmdir)/tb/$(TB)
LIBES = $(LIBSLA) $(LIBLOC)
