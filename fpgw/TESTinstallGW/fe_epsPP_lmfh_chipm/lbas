 --- Input normal(=0); coremode(=3); ptest(=4); Excore(=5); for core-valence Ex(=6); val-val Ex(7);  normal+<rho_spin|B> (8); version(-9999) ?
hbasfp0: VerNum= 033a5: 02May2009
  ### usual mode use occ and unocc for core and <rho_spin |B(I)> ### 
  goto lmto
  divisions along reciprocal base vectors G1 G2 G3=           2           2
           2
 readin nout=           1
 readin nout=           1
 readin nout=           1
 readin nout=           1
 readin nout=           1
  --- Freq ---
     dw   =  5.000000000000000E-004
     niw  =           6
     delta= -1.000000000000000E-008
     esmr =  3.000000000000000E-003
  goto prod
 readin nout=           1
 readin nout=           1
 <... > 
 lx=  0 readin tolerance=  0.100D-02
 lx=  1 readin tolerance=  0.100D-02
 lx=  2 readin tolerance=  0.100D-02
 lx=  3 readin tolerance=  0.100D-02
 lx=  4 readin tolerance=  0.100D-02
 lx=  5 readin tolerance=  0.100D-02
 lx=  6 readin tolerance=  0.100D-02
 lx=  7 readin tolerance=  0.100D-02
 lx=  8 readin tolerance=  0.100D-02
  --- prod section: tolbas lcutmx=  1.000000000000000E-003
  1.000000000000000E-003  1.000000000000000E-003  1.000000000000000E-003
  1.000000000000000E-003  1.000000000000000E-003  1.000000000000000E-003
  1.000000000000000E-003  1.000000000000000E-003           1
  --- valence product basis section
  1  0  1  1  1
  1  0  2  0  0
  1  1  1  1  1
  1  1  2  0  0
  1  2  1  1  1
  1  2  2  0  0
  1  2  3  0  0
  1  3  1  0  1
  1  3  2  0  0
  1  4  1  0  0
  1  4  2  0  0
  --- core product basis section
  1  0  1  0  0  0  0
  1  0  2  0  0  0  0
  1  0  3  0  0  0  0
  1  1  1  0  0  0  0
  1  1  2  0  0  0  0
  ### Use unocc occ ForX0 for core
 end of rgwinf
 readin nout=           1
 readin nout=           1
 lcutmxa=  1
  --- end of reindx ---
  --- read PHIVC of ibas=           1
           ---  isp nrad ncore(ic)=           1          11           5
           ---  isp nrad ncore(ic)=           2          11           5
  ANFcond exist? = F
  basnfp_v2: ********** start ******** nrofi=        4925
 norm check for phi=  0  1 0.991284D+00
 norm check for phi=  0  2 0.998402D+00
 norm check for phi=  0  3 0.999648D+00
 norm check for phi=  0  4 0.999898D+00
 norm check for phi=  0  5 0.123111D-01
 norm check for phi=  1  1 0.998430D+00
 norm check for phi=  1  2 0.999686D+00
 norm check for phi=  1  3 0.999855D+00
 norm check for phi=  1  4 0.132038D-01
 norm check for phi=  2  1 0.992865D+00
 norm check for phi=  2  2 0.450621D+00
 norm check for phi=  2  3 0.318252D+01
 norm check for phi=  3  1 0.999932D+00
 norm check for phi=  3  2 0.442055D-02
 norm check for phi=  4  1 0.999896D+00
 norm check for phi=  4  2 0.198768D-02
 ---  lx l1 l2 n1 n2 iprad=     0    0    0    4    4    1
 ---  lx l1 l2 n1 n2 iprad=     1    0    1    4    3    2
 ---  lx l1 l2 n1 n2 iprad=     0    1    1    3    3    5
 ---  lx l1 l2 n1 n2 iprad=     1    1    2    3    1    6
 ---  lx l1 l2 n1 n2 iprad=     0    2    2    1    1    8
 ---  lx l1 l2 n1 n2 iprad=     1    2    3    1    1    9
  number of radial basis: nprad=          10
lx nx number ipx=   0   1   1   1
lx nx number ipx=   0   2   1   5
lx nx number ipx=   0   3   1   8
lx nx number ipx=   0   4   1  10
lx nx number ipx=   1   1   3   2
lx nx number ipx=   1   2   3   6
lx nx number ipx=   1   3   3   9
  *** total number of product basis nprod=          13
 
    ib eb=    4 0.457827D+01  ecut= 0.100000D-02
    ib eb=    3 0.595826D+00  ecut= 0.100000D-02
    ib eb=    2 0.230073D+00  ecut= 0.100000D-02
    ib eb=    1 0.446770D-01  ecut= 0.100000D-02
    Diag ibx ovv=  1 0.9999999999999978D+00 eb=   0.4578268046D+01 nod=   0
    Diag ibx ovv=  2 0.1000000000000009D+01 eb=   0.5958260957D+00 nod=   2
    Diag ibx ovv=  3 0.1000000000000002D+01 eb=   0.2300731755D+00 nod=   4
    Diag ibx ovv=  4 0.1000000000000001D+01 eb=   0.4467701493D-01 nod=   5
  *** lx  *** Used nb =           0           4
 
    ib eb=    3 0.485462D+00  ecut= 0.100000D-02
    ib eb=    2 0.343105D+00  ecut= 0.100000D-02
    ib eb=    1 0.236426D-01  ecut= 0.100000D-02
    Diag ibx ovv=  1 0.1000000000000001D+01 eb=   0.4854622276D+00 nod=   5
    Diag ibx ovv=  2 0.9999999999999999D+00 eb=   0.3431051180D+00 nod=   5
    Diag ibx ovv=  3 0.1000000000000005D+01 eb=   0.2364257799D-01 nod=   4
  *** lx  *** Used nb =           1           3
  reserve rprodx...
  read rprodx...
 basnfp: BASFP... kmx nblocha=    7   13
  Calculate radial matrix elements...
  rho1 xxx=         383          50           0           0           2
 charge: ilm charge=    1     4.470437     2.241347
ttt:     1     1  0.4101701361731095D+00    4.4704368111  2.2413471003  0.6713528069092362D+01 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     1     2 -0.6405668589805301D+00    4.4704368111  2.2413471003  0.8548360814080557D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     1     3  0.4194242883193931D-01    4.4704368111  2.2413471003  0.5700428414819635D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     1     4  0.1525336016050564D-01    4.4704368111  2.2413471003 -0.6086063727821693D-01 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
 charge: ilm charge=    2     0.000000     0.000000
ttt:     2     1  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     2     2  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     2     3  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
 charge: ilm charge=    3     0.000000     0.000000
ttt:     3     1  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     3     2  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     3     3  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
 charge: ilm charge=    4     0.000000     0.000000
ttt:     4     1  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     4     2  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
ttt:     4     3  0.0000000000000000D+00    0.0000000000  0.0000000000  0.0000000000000000D+00 ! I=(ilm, nx), <spin|B(I)>, intrho(1:nsp) <1|B(I)>
  basnfp_v2: end  
