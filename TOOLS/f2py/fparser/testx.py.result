Not implemented: Defined_Binary_Op
Not implemented: Defined_Binary_Op
Defined_Operator not defined used by Generic_Spec
[        Subroutine
          args=['nbas', 'nsp', 'nlibu', 'lmaxu', 'lldau', 'ssite', 'sspec', 'slat', 'sctrl', 'sham', 'spot', 'sbz', 'sstrn', 'ndham', 'leks', 'lrout', 'lfrce', 'lpnu', 'dmxp', 'iter', 'maxit', 'evl', 'frc', 'dmatu', 'vorb']
          item=Line('subroutine bndfp(nbas,nsp,nlibu,lmaxu,lldau,  ssite,sspec,slat,sctrl,sham,spot,sbz,sstrn,  ndham,leks,lrout,lfrce,lpnu,dmxp,iter,maxit,evl,frc,  dmatu,vorb)',(1, 4),'')
          a=AttributeHolder:
      variables=<dict with keys ['nbx', 'dmatu', 'lrout', 'slat', 'sspec', 'lmaxu', 'maxit', 'lgors', 'nsp', 'vorb', 'leks', 'frc', 'lpnu', 'mlog', 'cmdopt', 'lldau', 'k3', 'k2', 'k1', 'ssite', 'master', 'lfrce', 'sham', 'strn', 'nab', 'dmxp', 'sbz', 'ltet', 'spot', 'sspecv', 'sctrl', 'procid', 'evl', 'nlibu', 'iter', 'sstrn', 'nppn', 'lwndow', 'n0', 'nbas', 'ndham']>
      variable_names=<16-list>
          content:
            Use
              item=Line('use m_rdctrl, only: ncutovl',(5, 5),'')
            Use
              item=Line('use m_hamindex',(6, 6),'')
            Use
              item=Line('use m_struc_def',(7, 171),'')
            CommentBlock
              item=Comment("C- One band pass, full-potential hamiltonian\nC ----------------------------------------------------------------------\nCi Inputs\nCi   nbas  :size of basis\nCi   nsp   : number of spins\nCi   nlibu : total number of LDA+U blocks (used to dimension dmatu and vorb)\nCi   lmaxu : lmax for U used to dimension vorb and dmatu\nCi   lldau :lldau(ib)=0 => no U on this site otherwise\nCi         :U on site ib with dmat in dmats(*,lldau(ib))\nCi\nCi   ssite :struct for site-specific information; see routine usite\nCi     Elts read: *\nCi     Stored:    *\nCi     Passed to: dfaugm mkpot dfqkkl suclst surho sumlst hambl mullmf\nCi                makusq mkpdos addrbl mshn3p mchan vcdmel dfratm\nCi                mkrout symrho pnunew dfrce mkekin totfrc mixrho\nCi\nCi   sspec :struct for species-specific information; see routine uspec\nCi     Elts read: *\nCi     Stored:    *\nCi     Passed to: dfaugm mkpot dfqkkl suclst surho sumlst hambl mullmf\nCi                makusq mkpdos addrbl mshn3p mchan vcdmel dfratm\nCi                mkrout symrho pnunew dfrce mkekin mixrho\nCi\nCi   slat  :struct for lattice information; see routine ulat\nCi     Elts read: plat qlat nabc vol nsgrp\nCi     Stored:    *\nCi     Passed to: mkpot hambl makusq addrbl vcdmel mkrout symrho dfrce\nCi                mkekin totfrc mixrho\nCi\nCi   sctrl :struct for program flow parameters; see routine uctrl\nCi     Elts read: ldos,1 zbak nl\nCi     Stored:    *\nCi     Passed to: vcdmel dfrce\nCi\nCi   sham  :struct for parameters defining hamiltonian; see routine uham\nCi     Elts read: elind oindxo\nCi     Stored:    eterms ehf ehk\nCi     Passed to: mkpot hambl makusq addrbl mkrout mkehkf mkekin\nCi\nCi   spot  :struct for information about the potential; see routine upot\nCi     Elts read: oorhat osmrho osmpot osoptc nlml nlma\nCo     Stored:    oorhat osmrho osmpot\nCi     Passed to: mkpot\nCi\nCi   sbz   :struct for the Brillouin Zone; see routine ubz\nCi     Elts read: nkabc nkp ntet oidtet lmet n w nevmx efmax fsmom ndos\nCi                dosw ef def oqp owtkp\nCi     Stored:    ndos dosw ef def\nCi     Passed to: *\nCi\nCi   sstrn :struct for global strings\nCi     Elts read: mix\nCi     Stored:    *\nCi     Passed to: *\nCi\nCi   ndham :dimensioning parameter, at least as large as largest\nCi         :hamiltonian dimension\nCi   leks  :>0 make the Hohnberg-Kohn-Sham energy\nCi         :>1 use the HKS forces\nCi   lrout :>0 generate output density and attendant quantities\nCi   lfrce : 0 suppress generation of forces\nCi   lpnu  : 1 make new pnu's\nCi   dmxp  :vector of mixing parameters; see mixrho.f for dmxp(1..25)\nCi         :Additionally:\nCi         :dmxp(33)  is the Lindhard parameter\nCi   iter  :current iteration number\nCi   maxit :maximum number of iterations\nCi   evl   :work array holding band eigenvalues for current spin, qp\nCio LDA+U inputs and outputs\nCio  dmatu :density matrix for LDA+U (changed upon output)\nCio  vorb  :orbital dependent LDA+U potential\nCo Outputs\nCo   frc   :forces.  Only calculated if lfrce>0.\nCo         :If leks<2, forces are HF  forces\nCo         :If leks>1, forces are HKS forces\nCl Local variables\nCl   k1,k2,k3: dimensions smrho,smpot\nCl   lpdiag:0 use standard diagonalization (zhev)\nCl         :1 use parallel diagonalization (pzhev)\nCl         :2 diagonalization done internally\nCl   lwndow:T if to make density in a specified energy window\nCl   lcplxp:0 if ppi is real; 1 if ppi is complex\nCl   jsp   :current spin index.\nCl         :In the collinear case, jsp and isp are equivalent\nCl         :In the noncollinear case, isp loops 1..2 for the\nCl         :purpose of assembling the hamiltonian.\nCl         :Once assembled, isp should not be used; and jsp=1\nCl   ispc  :2 when working on (2,2) block of noncollinear hamiltonian;\nCl         :otherwise 1\nCl   nspx: number of independent spin channels containing eigenvalues\nCl         and total DOS; nspx=nsp unless nspc=2, in which case nspx=1\nCl   onesp :do only one spin branch of isp loop (spec'd by onesp)\nCl         :also used when usual loop order (iq=1..nq, isp=1..2)\nCl         :needs to be reversed, as it does, e.g. when transforming\nCl         :sigma matrix.  Then onesp plays the role of spin index\nCl   lekkl :0 do not accumulate oeqkkl; 1 do accumulate oeqkkl\nCl   lwsig :special modes to handling reading/writing of sigma or evecs\nCl         :1  Rotates sigm to LDA basis; saves in file sigm2\nCl         :-1 reads sigm (assumed to be written in the LDA basis),\nCl         :   rotates it to orbital basis, stores the result in file sigm2\nCl         :   lwsig=-1 is the inverse operation of lwsig=1.\nCl         :2  Similar to lwsig=1, except\nCl         :   low- and high- energy blocks replaced by diagonal parts\nCl         :3  Writes evals,evecs of LDA hamiltonian to file,\nCl         :   saves in file 'evec'\nCl         :4  Writes evals,evecs of hamiltonian to file,\nCl         :   saves in file 'evec'\nCl         :5  Writes sigm as in lwsig=2 with low- and high- energy blocks\nCl         :   replaced by diagonal parts, but writes sigm in orbital bas.\nCl   nsmidb:smallest value of nmax encountered in truncating sigma\nCl         :   (only used for printout)\nCr Remarks\nCr   Band pass consists of:\nCr   (1) make the effective potential,\nCr   (2) generate eigenvalues (and eigenvectors if lrout)\nCr   (3) if lrout, assemble the output density by BZ integration\nCr   (4) evaluate hf (and KS, if leks) energy by BZ integration\nCr   (5) mix the output density to make a new input density.\nCu Updates\nCu   05 Jul 08 (T. Kotani) new PW basis\nCu             Option to accumulate energy-weighted output density\nCu   27 Jun 08 Redesigned transformation of sigma to new basis\nCu   09 Jul 07 MPIK enabled to plot bands\nCu   05 Jul 07 Enable onesp to be set as switch in --band:spin1\nCu   09 Jun 07 Fixed-spin-moment, noncollinear case\nCu   16 Jan 07 First cut at I/O of sigm transformed to,from LDA basis\nCu   26 May 07 Some preparation for rotation betw/ LDA, GW basis\nCu   17 Jul 06 Some MPI changes, fixes SO case\nCu   27 Jun 06 New constraints for floating pnu\nCu   08 Jun 06 Bug fix total DOS, noncollinear case;\nCu             Mulliken works for noncollinear case\nCu   02 Jan 06 better printout of magnetic moment\nCu   27 Nov 05 LDA+U => complex potential\nCu   09 Nov 05 (wrl) Convert dmat to complex form\nCu   06 Oct 05 (A. Chantis) bug fix dos when nspc=2\nCu   25 Jul 05 bug fix partial dos combined with LDA+U\nCu   01 Jul 05 handle sites with lmxa=-1 -> no augmentation\nCu   29 Jun 05 (MvS) extended LDA+U to local orbitals\nCu   27 Apr 05 LDA+U (Lambrecht)\nCu   14 Feb 05 fixes for band plot, contour mode\nCu   03 Feb 05 (A. Chantis) implemented spin-orbit coupling by L.S\nCu   11 Jan 05 double-counting term rho*sig subtracted from ehks.\nCu   23 Dec 04 Extended to spin-coupled case\nCu   18 Nov 04 Sampling integration properly handles Fermi distribtion\nCu   25 Sep 04 (ATP) some patches for MPI parallelization\nCu    1 Sep 04 Adapted to handle complex ppi. Spin-orbit folded into ppi\nCu   12 Aug 04 First implementation of extended local orbitals\nCu   29 Jun 04 (A Chantis) First implementation of spin-orbit coupling\nCu             (Lz.Sz only)\nCu   19 Sep 03 (ATP) Modifications of CLS spectroscopy\nCu   24 May 03 New --window switch for accumulating density\nCu             in a specific energy window\nCu   24 May 03 New interpolation mode for sigma\nCu   14 Aug 02 Added file input of self-energy addition to LDA\nCu   15 Feb 02 (ATP) Added MPI parallelization\nCu   24 Oct 01 Updated mixrho, dfrce\nCu   24 Aug 01 Extended to local orbitals.\nCu   22 Apr 01 Added driver for Kotani's GW\nCu   21 Mar 01 bug fix in call to makdos\nCu   20 Mar 01 (ATP) Added Mulliken analysis, CLS\nCu   15 Feb 01 eliminated smrho, smpot from passed arguments\nCu   23 Jan 01 bug fixes connected with lrout=0\nC ----------------------------------------------------------------------",(8, 171))
            Implicit
              item=Line('implicit none',(172, 174),'')
            CommentBlock
              item=Comment('C ... Passed parameters',(173, 173))
            Logical
              selector=('', '')
              entity_decls=['mlog']
              item=Line('logical mlog',(175, 175),'')
            Integer
              selector=('', '')
              entity_decls=['procid', 'master']
              item=Line('integer procid,master',(176, 176),'')
            Integer
              selector=('', '')
              entity_decls=['nbx', 'nbas', 'n0', 'nab', 'nppn', 'iter', 'maxit', 'ndham']
              item=Line('integer nbx,nbas,n0,nab,nppn,iter,maxit,ndham',(177, 177),'')
            Character
              selector=('*', '')
              entity_decls=['sstrn']
              item=Line('character*(*) sstrn',(178, 178),'')
            Parameter
              item=Line('parameter ( nbx=512, n0=10, nppn=12, nab=9)',(179, 179),'')
            Integer
              selector=('', '')
              entity_decls=['k1', 'k2', 'k3', 'leks', 'lrout', 'lfrce', 'lpnu']
              item=Line('integer k1,k2,k3,leks,lrout,lfrce,lpnu',(180, 180),'')
            Integer
              selector=('', '')
              entity_decls=['nlibu', 'lmaxu', 'lldau(nbas)']
              item=Line('integer nlibu,lmaxu,lldau(nbas)',(181, 181),'')
            Real
              selector=('', '8')
              entity_decls=['dmxp(33)', 'evl(ndham,2)', 'frc(3,nbas)']
              item=Line('real(8):: dmxp(33),evl(ndham,2),frc(3,nbas)',(182, 183),'')
            CommentBlock
              item=Comment('ctakao',(183, 183))
            DoublePrecision
              selector=('', '')
              entity_decls=['ssite(1)', 'sspec(1)']
              item=Line('double precision ssite(1),sspec(1)',(184, 187),'')
            CommentBlock
              item=Comment('c     .  spot(1),sbz(1),sham(1),slat(1),sctrl(1)\nc      double precision ssite(1),sspec(1)',(185, 187))
            Type
              selector=('', 's_ham')
              entity_decls=['sham']
              item=Line('type(s_ham):: sham',(188, 188),'')
            Type
              selector=('', 's_ctrl')
              entity_decls=['sctrl']
              item=Line('type(s_ctrl):: sctrl',(189, 189),'')
            Type
              selector=('', 's_lat')
              entity_decls=['slat']
              item=Line('type(s_lat)::  slat',(190, 190),'')
            Type
              selector=('', 's_pot')
              entity_decls=['spot']
              item=Line('type(s_pot)::  spot',(191, 191),'')
            Type
              selector=('', 's_bz')
              entity_decls=['sbz']
              item=Line('type(s_bz)  ::  sbz',(192, 193),'')
            CommentBlock
              item=Comment('c      type(s_site):: ssitev(nbas)',(193, 193))
            Type
              selector=('', 's_spec')
              attrspec=['allocatable']
              entity_decls=['sspecv(:)']
              item=Line('type(s_spec),allocatable:: sspecv(:)',(194, 197),'')
            CommentBlock
              item=Comment('C ... Local parameters',(197, 197))
            Logical
              selector=('', '')
              entity_decls=['lgors', 'ltet', 'cmdopt', 'lwndow']
              item=Line('logical lgors,ltet,cmdopt,lwndow',(198, 198),'')
            Character
              selector=('', '')
              entity_decls=['strn*120', 'plbopt*120', 'mulopt*120', 'clsopt*120', 'strn2*120', 'dc*1']
              item=Line('character strn*120,plbopt*120,mulopt*120,clsopt*120,strn2*120,dc*1',(199, 199),'')
            Integer
              selector=('', '')
              entity_decls=['ipr', 'iprint', 'ipl', 'isp', 'jsp', 'ispc', 'isum', 'nglob', 'i', 'iopq', 'iq', 'isqp', 'ismidb', 'nsmidb', 'ldos', 'lmet', 'nspc', 'lrep', 'lcplxp', 'lso', 'nkabc(3)', 'ndos', 'ndos0', 'nev', 'nevl', 'nkp', 'nsp', 'numq', 'n1', 'n2', 'n3', 'ntet', 'lwtkb', 'lswtk', 'nl', 'lgunit', 'igets', 'mpsord', 'nevmx', 'nvl', 'odos', 'ngabc(3)', 'isw', 'stdo', 'stdl', 'ifi', 'fxst', 'fopn', 'fopna', 'lfrzw', 'i1', 'i2', 'plbnd', 'nfilem', 'iobzwt', 'lnoxc', 'lrsig', 'lwsig', 'jobgw', 'nll', 'lpdiag', 'iv(10)', 'parg', 'ndhamx', 'nspx', 'nk1', 'nk2', 'nk3', 'lshft(3)', 'onesp', 'nfbn(2)', 'mpipid', 'ldham(8,2)', 'ldim', 'ndimh', 'ndimhx', 'lekkl']
              item=Line('integer ipr,iprint,ipl,isp,jsp,ispc,isum,nglob,i,iopq,iq,isqp,  ismidb,nsmidb,ldos,lmet,nspc,lrep,lcplxp,lso,nkabc(3),ndos,  ndos0,nev,nevl,nkp,nsp,numq,n1,n2,n3,ntet,lwtkb,lswtk,nl,lgunit,  igets,mpsord,nevmx,nvl,odos,ngabc(3),isw,stdo,stdl,ifi,fxst,  fopn,fopna,lfrzw,i1,i2,plbnd,nfilem,iobzwt,lnoxc,lrsig,lwsig,  jobgw,nll,lpdiag,iv(10),parg,ndhamx,nspx,nk1,nk2,nk3,lshft(3),  onesp,nfbn(2),mpipid,ldham(8,2),ldim,ndimh,ndimhx,lekkl',(200, 206),'')
            Integer
              selector=('', '')
              entity_decls=['oevl', 'ofh', 'ofes1', 'ofes2', 'ogpot0', 'oh', 'ohab', 'ohbyl', 'oppnl', 'oqbyl', 'oqmom', 'os', 'osab', 'osrout', 'ot', 'ovab', 'oidtet', 'owtkb', 'oswtk', 'owtkp', 'oqm1', 'oqm2', 'oorhat', 'osoptc', 'osmpot', 'osmrho', 'ovval', 'oww', 'oqp', 'oips', 'oorbtm', 'oifbls']
              item=Line('integer oevl,ofh,ofes1,ofes2,ogpot0,oh,ohab,ohbyl,oppnl,  oqbyl,oqmom,os,osab,osrout,ot,ovab,oidtet,owtkb,oswtk,owtkp,  oqm1,oqm2,oorhat,osoptc,osmpot,osmrho,ovval,oww,oqp,oips,oorbtm,  oifbls',(207, 210),'')
            Integer
              selector=('', '')
              entity_decls=['osig(3,nbx)', 'otau(3,nbx)', 'oppi(3,nbx)', 'oqkkl(3,nbx)', 'oeqkkl(3,nbx)', 'orhat1(3,nbx)']
              item=Line('integer osig(3,nbx),otau(3,nbx),oppi(3,nbx),oqkkl(3,nbx),  oeqkkl(3,nbx),orhat1(3,nbx)',(211, 212),'')
            Equivalence
              item=Line('equivalence (ldim,ldham(1,1))',(213, 214),'')
            DoublePrecision
              selector=('', '')
              entity_decls=['sigp(10)']
              item=Line('double precision sigp(10)',(215, 216),'')
            Equivalence
              item=Line('equivalence (n1,ngabc(1)),(n2,ngabc(2)),(n3,ngabc(3))',(217, 217),'')
            Equivalence
              item=Line('equivalence (nk1,nkabc(1)), (nk2,nkabc(2)), (nk3,nkabc(3))',(218, 218),'')
            DoublePrecision
              selector=('', '')
              entity_decls=['ef00', 'eferm', 'emax', 'emin', 'esmear', 'qval', 'qsc', 'sev', 'sev00', 'sev1', 'sumtv', 'alfa', 'vconst', 'qbg', 'ebot', 'pi', 'def', 'ef0', 'ehar', 'eks', 'dosw(2)', 'efmax', 'dgets', 'alat', 'plat(3,3)', 'qlat(3,3)', 'sumev(2,3)', 'sumqv(3,2)', 'qp(3)', 'shftqp(3)', 'eterms(20)', 'elind', 'vol', 'dum', 'del', 'evtop', 'ecbot', 'vrmt(nbx)', 'fsmom', 'rsrnge', 'xv(20)', 'dosrng', 'epsovl', 'eomin', 'dval']
              item=Line('double precision ef00,eferm,emax,emin,esmear,qval,qsc,sev,  sev00,sev1,sumtv,alfa,vconst,qbg,ebot,pi,def,ef0,ehar,eks,  dosw(2),efmax,dgets,alat,plat(3,3),qlat(3,3),sumev(2,3),  sumqv(3,2),qp(3),shftqp(3),eterms(20),elind,vol,dum,del,evtop,  ecbot,vrmt(nbx),fsmom,rsrnge,xv(20),dosrng,epsovl,eomin,dval',(219, 223),'')
            Equivalence
              item=Line('equivalence (emin,dosw(1)),(emax,dosw(2))',(224, 226),'')
            CommentBlock
              item=Comment('C     For now: PW basis',(226, 226))
            Integer
              selector=('', '')
              entity_decls=['oigv2', 'okv']
              item=Line('integer oigv2,okv',(227, 227),'')
            Integer
              selector=('', '')
              entity_decls=['pwmode', 'napw']
              item=Line('integer pwmode,napw',(228, 228),'')
            DoublePrecision
              selector=('', '')
              entity_decls=['pwemin', 'pwemax', 'pwgmin', 'pwgmax']
              item=Line('double precision pwemin,pwemax,pwgmin,pwgmax',(229, 232),'')
            CommentBlock
              item=Comment('C     real(8),allocatable :: qpe(:,:)',(231, 231))
            Logical
              selector=('', '')
              entity_decls=['t', 'f']
              item=Line('logical T, F',(233, 234),'')
            CommentBlock
              item=Comment('C     for spin-orbit',(234, 234))
            Integer
              selector=('', '')
              entity_decls=['oauso']
              item=Line('integer oauso',(235, 236),'')
            CommentBlock
              item=Comment('C     for partial dos',(236, 236))
            Integer
              selector=('', '')
              entity_decls=['oausp']
              item=Line('integer oausp',(237, 238),'')
            CommentBlock
              item=Comment('C     for CLS',(238, 238))
            Integer
              selector=('', '')
              entity_decls=['nsitmx']
              item=Line('integer nsitmx',(239, 239),'')
            Parameter
              item=Line('parameter (nsitmx = 256)',(240, 240),'')
            Integer
              selector=('', '')
              entity_decls=['nlmax', 'oausc', 'i1mach', 'icls', 'isite(nsitmx)', 'iclsl(nsitmx)', 'iclsn(nsitmx)']
              item=Line('integer nlmax,oausc,i1mach,icls,isite(nsitmx),iclsl(nsitmx),        iclsn(nsitmx)',(241, 243),'')
            CommentBlock
              item=Comment('C     for Mulliken',(243, 243))
            Integer
              selector=('', '')
              entity_decls=['oiprmb', 'odoswt', 'moddos', 'nsites', 'lsites(nbx)', 'nchan', 'ng', 'iomoms', 'nchmx', 'lmdim', 'ochan', 'lmxch']
              item=Line('integer oiprmb,odoswt,moddos,nsites,lsites(nbx),nchan,ng,iomoms,        nchmx,lmdim,ochan,lmxch',(244, 246),'')
            CommentBlock
              item=Comment('C     for pzhev',(246, 246))
            Integer
              selector=('', '')
              entity_decls=['nblk', 'nprow', 'npcol', 'nmx']
              item=Line('integer nblk,nprow,npcol,nmx',(247, 248),'')
            CommentBlock
              item=Comment('C     for LDA+U',(248, 248))
            Integer
              selector=('', '')
              entity_decls=['oausu']
              item=Line('integer oausu',(249, 249),'')
            DoubleComplex
              selector=('', '')
              entity_decls=['vorb(-lmaxu:lmaxu,-lmaxu:lmaxu,nsp,nlibu)', 'dmatu(-lmaxu:lmaxu,-lmaxu:lmaxu,nsp,nlibu)']
              item=Line('double complex vorb(-lmaxu:lmaxu,-lmaxu:lmaxu,nsp,nlibu),              dmatu(-lmaxu:lmaxu,-lmaxu:lmaxu,nsp,nlibu)',(250, 252),'')
            CommentBlock
              item=Comment('C ... Heap',(252, 252))
            Integer
              selector=('', '')
              entity_decls=['w(1)']
              item=Line('integer w(1)',(253, 253),'')
            Common
              item=Line('common /w/ w',(254, 262),'')
            CommentBlock
              item=Comment("C      for debugging and testing\nC      integer ocg,ojcg,oidxcg,ocy\nC      call upack('lat ocg ojcg oidxcg ocy',slat,ocg,ojcg,oidxcg,ocy,0)\nC      call thxpbl(slat,w(ocg),w(oidxcg),w(ojcg),w(ocy))\nC For self-energy",(257, 262))
            Integer
              selector=('', '')
              entity_decls=['nqsig']
              item=Line('integer nqsig',(263, 263),'')
            Integer
              selector=('', '')
              entity_decls=['oqsig']
              item=Line('integer oqsig',(264, 266),'')
            CommentBlock
              item=Comment('C     Data statements',(266, 266))
            Data
              item=Line('data T /.true./ F /.false./',(267, 269),'')
            Integer
              selector=('', '')
              attrspec=['allocatable']
              entity_decls=['nevls(:,:)']
              item=Line('integer,allocatable:: nevls(:,:)',(270, 272),'')
            CommentBlock
              item=Comment('ctakao',(272, 272))
            Integer
              selector=('', '')
              entity_decls=['ifiogw', 'ifiese', 'oag', 'og', 'ib', 'ig', 'iorb', 'is', 'nsgrp', 'uspec_size', 'nspec']
              item=Line('integer :: ifiogw,ifiese,oag,og,ib,ig,iorb,is,nsgrp,uspec_size,nspec',(273, 273),'')
            Logical
              selector=('', '')
              entity_decls=['nexist']
              item=Line('logical :: nexist',(274, 274),'')
            Character
              selector=('', '')
              entity_decls=['spid*8']
              item=Line('character spid*8',(275, 275),'')
            Integer
              selector=('', '')
              entity_decls=['sigswitch']
              item=Line('integer :: sigswitch',(276, 278),'')
            CommentBlock
              item=Comment('C     call wkfast(.false.)',(278, 278))
            If
              blocktype='if'
              name='__IF__'
              item=Line('if (maxit .eq. 0) return',(279, 281),'')
              content:
                Return
                  item=Line('return',(279, 281),'')
            CommentBlock
              item=Comment('C ... MPI setup',(281, 281))
            Assignment
              variable='procid'
              sign='='
              expr='mpipid(1)'
              item=Line('procid = mpipid(1)',(282, 282),'')
            Assignment
              variable='master'
              sign='='
              expr='0'
              item=Line('master = 0',(283, 283),'')
            Assignment
              variable='mlog'
              sign='='
              expr="cmdopt('--mlog',6,0,strn)"
              item=Line("mlog = cmdopt('--mlog',6,0,strn)",(284, 288),'')
            CommentBlock
              item=Comment('C --- Setup ---',(288, 288))
            Call
              item=Line("call tcn ('bndfp')",(289, 289),'')
            Assignment
              variable='napw'
              sign='='
              expr='0'
              item=Line('napw = 0',(290, 290),'')
            Assignment
              variable='ipr'
              sign='='
              expr='iprint()'
              item=Line('ipr  = iprint()',(291, 291),'')
            Assignment
              variable='ipl'
              sign='='
              expr='ipr'
              item=Line('ipl  = ipr',(292, 292),'')
            Assignment
              variable='nsp'
              sign='='
              expr="nglob('nsp')"
              item=Line("nsp  = nglob('nsp')",(293, 293),'')
            Assignment
              variable='nspc'
              sign='='
              expr="nglob('nspc')"
              item=Line("nspc = nglob('nspc')",(294, 295),'')
            CommentBlock
              item=Comment("C     npqn = nglob('npqn')",(295, 295))
            Assignment
              variable='lso'
              sign='='
              expr="isw(lgors('ctrl lncol,4',sctrl))    + 2*isw(lgors('ctrl lncol,32',sctrl))    + 3*isw(lgors('ctrl lncol,64',sctrl))"
              item=Line("lso =   isw(lgors('ctrl lncol,4',sctrl))    + 2*isw(lgors('ctrl lncol,32',sctrl))    + 3*isw(lgors('ctrl lncol,64',sctrl))",(296, 298),'')
            CommentBlock
              item=Comment('!why is this 3*isw? 4*isw? takao.',(298, 298))
            Assignment
              variable='lcplxp'
              sign='='
              expr='0'
              item=Line('lcplxp = 0',(299, 299),'')
            Assignment
              variable='lekkl'
              sign='='
              expr="igets('ctrl pfloat',sctrl)"
              item=Line("lekkl = igets('ctrl pfloat',sctrl)",(300, 300),'')
            Assignment
              variable='if(lso .ne. 0)lcplxp'
              sign='='
              expr='1'
              item=Line('if (lso .ne. 0) lcplxp = 1',(301, 301),'')
            Assignment
              variable='if(isum(nbas,lldau,1) .ne. 0)lcplxp'
              sign='='
              expr='1'
              item=Line('if (isum(nbas,lldau,1) .ne. 0) lcplxp = 1',(302, 302),'')
            Assignment
              variable='ndhamx'
              sign='='
              expr='ndham*nspc'
              item=Line('ndhamx = ndham*nspc',(303, 303),'')
            Assignment
              variable='nspx'
              sign='='
              expr='nsp / nspc'
              item=Line('nspx = nsp / nspc',(304, 304),'')
            Call
              item=Line("call upack4('ham ldham pwmode pwemin pwemax',sham,ldham,pwmode,  pwemin,pwemax)",(305, 306),'')
            Assignment
              variable='onesp'
              sign='='
              expr='0'
              item=Line('onesp = 0',(307, 307),'')
            Assignment
              variable='nfbn(1)'
              sign='='
              expr='0'
              item=Line('nfbn(1) = 0',(308, 308),'')
            Assignment
              variable='nfbn(2)'
              sign='='
              expr='0'
              item=Line('nfbn(2) = 0',(309, 309),'')
            Assignment
              variable='stdo'
              sign='='
              expr='lgunit(1)'
              item=Line('stdo = lgunit(1)',(310, 310),'')
            Assignment
              variable='stdl'
              sign='='
              expr='lgunit(2)'
              item=Line('stdl = lgunit(2)',(311, 313),'')
            CommentBlock
              item=Comment("ctakao's test for replacement.",(313, 313))
            Assignment
              variable='ldos'
              sign='='
              expr="igets('ctrl ldos,1',sctrl)"
              item=Line("ldos = igets('ctrl ldos,1',sctrl)",(314, 314),'')
            Assignment
              variable='lrsig'
              sign='='
              expr="igets('ham lsig',sham)"
              item=Line("lrsig= igets('ham lsig',sham)",(315, 315),'')
            Assignment
              variable='lfrzw'
              sign='='
              expr="isw(lgors('ctrl lbas,16',sctrl))"
              item=Line("lfrzw= isw(lgors('ctrl lbas,16',sctrl))",(316, 318),'')
            CommentBlock
              item=Comment("c      print *,'xxx' ,lfrzw,sctrl%lbas\nc      print *,'ttt1: lrsig,ldos,lfrzw=',lrsig,ldos,lfrzw",(317, 318))
            If
              blocktype='if'
              name='__IF__'
              item=Line("if(ldos - mod(sctrl%ldos/1, 2)/=0) stop 'ttt xxx111'",(319, 319),'')
              content:
                Stop
                  item=Line("stop '_F2PY_STRING_CONSTANT_11_'",(319, 319),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if(lfrzw- mod(sctrl%lbas/16,2)/=0) stop 'ttt xxx222'",(320, 320),'')
              content:
                Stop
                  item=Line("stop '_F2PY_STRING_CONSTANT_12_'",(320, 320),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if(lrsig- sham%lsig/=0) stop 'ttt xxx333'",(321, 321),'')
              content:
                Stop
                  item=Line("stop '_F2PY_STRING_CONSTANT_13_'",(321, 321),'')
            Print
              item=Line("print *,'ttt: lrsig,ldos,lfrzw=',lrsig,ldos,lfrzw",(322, 323),'')
            CommentBlock
              item=Comment('c$$$ctakao test',(323, 323))
            Assignment
              variable='nspec'
              sign='='
              expr='sctrl%nspec'
              item=Line('nspec= sctrl%nspec',(324, 326),'')
            CommentBlock
              item=Comment("ctakao\n!      allocate(sspecv(nspec+1)) ! I don't know why but nspec+1 is necessary to avoid run time error.",(325, 326))
            Allocate
              item=Line('allocate(sspecv(nspec+1))',(327, 327),'')
            CommentBlock
              item=Comment('!+1 makes it safer. (see below)\n!+1 makes it safer. (see below)',(327, 327))
            Do
              blocktype='do'
              item=Line('do i=1,nspec',(328, 331),'')
              content:
                CommentBlock
                  item=Comment('c Be careful for this procedure; the size uspec_size() is probably larger than the size of s_sspec.\nc Thus we needed to allocate it as sspecv(nspec+1).\nc Without this, deallocate(sspecv) caused a problem---this may mean memeory destruction.',(329, 331))
                Call
                  item=Line('call dcopy(uspec_size(),sspec(1+(i-1)*uspec_size()),1,sspecv(i),1)',(332, 332),'')
                Print
                  item=Line("print *,'ttt: sspecv%idmod=',i,sspecv(i)%nr,sspecv(i)%a",(333, 333),'')
            EndDo
              blocktype='do'
              item=Line('enddo',(334, 334),'')
            Deallocate
              item=Line('deallocate(sspecv)',(335, 340),'')
            CommentBlock
              item=Comment("c      stop 'xxxxxxxxxxxxxxx aaaaaaaaaaa'\nc      print *,'ttt fxstsigm=',fxst('sigm')",(336, 337))
            IfThen
              blocktype='ifthen'
              item=Line('if (procid .eq. master) then',(341, 341),'')
              content:
                IfThen
                  blocktype='ifthen'
                  item=Line("if (lrsig .ne. 0 .and. fxst('sigm') .ne. 1) then",(342, 343),'')
                  content:
                    CommentBlock
                      item=Comment("c      stop 'xxxxxxxxxxxxxxxxxxxxxxxxxx2222'",(343, 343))
                    Call
                      item=Line("call info0(1,1,0,' bndfp (warning): '//    'no sigm file found ... LDA calculation only')",(344, 345),'')
                    Call
                      item=Line("call pack1('ham lsig',sham,0)",(346, 346),'')
                    Assignment
                      variable='lrsig'
                      sign='='
                      expr='0'
                      item=Line('lrsig = 0',(347, 347),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(348, 348),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(349, 350),'')
            Call
              item=Line("call mpibc1(lrsig,1,2,mlog,'rdsigm','lrsig')",(351, 351),'')
            Assignment
              variable='jobgw'
              sign='='
              expr='-999'
              item=Line('jobgw= -999',(352, 352),'')
            Assignment
              variable='epsovl'
              sign='='
              expr="dgets('ham oveps',sham)"
              item=Line("epsovl = dgets('ham oveps',sham)",(353, 353),'')
            Assignment
              variable='lpdiag'
              sign='='
              expr="isw(cmdopt('--pdiag',7,0,strn))"
              item=Line("lpdiag = isw(cmdopt('--pdiag',7,0,strn))",(354, 359),'')
            Call
              item=Line("call upack('pot oorhat osmrho osmpot osoptc',spot,oorhat,osmrho,  osmpot,osoptc,0)",(360, 362),'')
            CommentBlock
              item=Comment("C     icls = igets('optic cls',w(osoptc))",(362, 362))
            Assignment
              variable='pi'
              sign='='
              expr='4d0*datan(1d0)'
              item=Line('pi = 4d0*datan(1d0)',(363, 363),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if (iprint() .ge. 20) call awrit2('%N --- BNDFP:  '//  'begin iteration %i of %i ---',' ',80,stdo,iter,maxit)",(364, 365),'')
              content:
                Call
                  item=Line('call awrit2(F2PY_EXPR_TUPLE_81)',(364, 365),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if (nbas.gt.nbx) call rxi('bndfp: nbx exceeded, need',nbas)",(366, 366),'')
              content:
                Call
                  item=Line('call rxi(F2PY_EXPR_TUPLE_83)',(366, 366),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if (ndham.le.0)  call rx('bndfp: hamiltonian matrix has zero dimension')",(367, 372),'')
              content:
                Call
                  item=Line('call rx(F2PY_EXPR_TUPLE_85)',(367, 372),'')
            Call
              item=Line('call dvset(eterms,1,20,-99d0)',(373, 373),'')
            Assignment
              variable='eterms(19)'
              sign='='
              expr='0d0'
              item=Line('eterms(19) = 0d0',(374, 374),'')
            Call
              item=Line("call pack1('ham eterms',sham,eterms)",(375, 375),'')
            Call
              item=Line("call upack2('pot nlml nlma',spot,nvl,nchan)",(376, 376),'')
            Assignment
              variable='eks'
              sign='='
              expr='0'
              item=Line('eks = 0',(377, 377),'')
            Call
              item=Line("call upack('lat alat plat qlat nabc',slat,alat,plat,qlat,ngabc,0)",(378, 378),'')
            Assignment
              variable='vol'
              sign='='
              expr="dgets('lat vol',slat)"
              item=Line("vol = dgets('lat vol',slat)",(379, 379),'')
            Call
              item=Line('call fftz30(n1,n2,n3,k1,k2,k3)',(380, 382),'')
            CommentBlock
              item=Comment('C ... for BZ integration',(382, 382))
            Call
              item=Line("call upack('bz nkabc nkp ntet oidtet lmet',sbz,nkabc,nkp,ntet,  oidtet,lmet)",(383, 384),'')
            Call
              item=Line("call upack('bz n w nevmx efmax fsmom',sbz,mpsord,esmear,nevmx,  efmax,fsmom)",(385, 386),'')
            Assignment
              variable='esmear'
              sign='='
              expr='esmear + iabs(mpsord)'
              item=Line('esmear = esmear + iabs(mpsord)',(387, 387),'')
            Assignment
              variable='if(mpsord .lt. 0)esmear'
              sign='='
              expr='-esmear'
              item=Line('if (mpsord .lt. 0) esmear = -esmear',(388, 388),'')
            Assignment
              variable='mpsord'
              sign='='
              expr='int(dabs(esmear))'
              item=Line('mpsord = int(dabs(esmear))',(389, 389),'')
            Assignment
              variable='if(esmear .lt. 0)mpsord'
              sign='='
              expr='-mpsord'
              item=Line('if (esmear .lt. 0) mpsord = -mpsord',(390, 391),'')
            Call
              item=Line("call upack('bz ndos dosw ef def',sbz,ndos,dosw,ef0,def,0)",(392, 392),'')
            Call
              item=Line("call upack('bz oqp owtkp',sbz,oqp,owtkp,0,0,0)",(393, 393),'')
            Assignment
              variable='ltet'
              sign='='
              expr='ntet .gt. 0'
              item=Line('ltet = ntet .gt. 0',(394, 394),'')
            Assignment
              variable='lwndow'
              sign='='
              expr="cmdopt('--window=',9,0,strn)"
              item=Line("lwndow = cmdopt('--window=',9,0,strn)",(395, 395),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lwndow) then',(396, 396),'')
              content:
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lmet .eq. 0) then',(397, 397),'')
                  content:
                    Call
                      item=Line("call rx(' bndfp: restart with METAL=2 for --window')",(398, 398),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(399, 399),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (.not. ltet) then',(400, 400),'')
                  content:
                    Call
                      item=Line("call rx(' bndfp: restart with TETRA=T for --window')",(401, 401),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(402, 402),'')
                Assignment
                  variable='iq'
                  sign='='
                  expr='0'
                  item=Line('iq = 0',(403, 403),'')
                Assignment
                  variable='i'
                  sign='='
                  expr="parg('window=',4,strn,iq,len(strn),', ',2,2,iv,dosw)"
                  item=Line("i = parg('window=',4,strn,iq,len(strn),', ',2,2,iv,dosw)",(404, 404),'')
                Call
                  item=Line("call info2(20,0,0,    ' BNDFP: generating density in energy window %2:1d',dosw,0)",(405, 406),'')
                Assignment
                  variable='lfrce'
                  sign='='
                  expr='0'
                  item=Line('lfrce = 0',(407, 407),'')
                Assignment
                  variable='lpnu'
                  sign='='
                  expr='0'
                  item=Line('lpnu = 0',(408, 408),'')
                Assignment
                  variable='efmax'
                  sign='='
                  expr='1d2'
                  item=Line('efmax = 1d2',(409, 409),'')
                Assignment
                  variable='nevmx'
                  sign='='
                  expr='ndham'
                  item=Line('nevmx = ndham',(410, 410),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lrout .eq. 0)    call rx('--window incompatible with no output density')",(411, 412),'')
                  content:
                    Call
                      item=Line('call rx(F2PY_EXPR_TUPLE_107)',(411, 412),'')
                Call
                  item=Line("call info0(20,0,0,' Delete band weights file ...')",(413, 413),'')
                Assignment
                  variable='ifi'
                  sign='='
                  expr="fopna('wkp',-1,4)"
                  item=Line("ifi = fopna('wkp',-1,4)",(414, 414),'')
                Call
                  item=Line('call dfclos(ifi)',(415, 415),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(416, 417),'')
            CommentBlock
              item=Comment('C     Always need DOS if just sampling',(417, 417))
            Assignment
              variable='if(lmet .ne. 0 .and. .not. ltet)ldos'
              sign='='
              expr='1'
              item=Line('if (lmet .ne. 0 .and. .not. ltet) ldos=1',(418, 418),'')
            Assignment
              variable='qbg'
              sign='='
              expr="dgets('ctrl zbak',sctrl)"
              item=Line("qbg = dgets('ctrl zbak',sctrl)",(419, 419),'')
            Assignment
              variable='alfa'
              sign='='
              expr='0'
              item=Line('alfa = 0',(420, 422),'')
            CommentBlock
              item=Comment('C     Switch to plot bands at specified qp',(422, 422))
            IfThen
              blocktype='ifthen'
              item=Line("if (cmdopt('--band',6,0,strn)) then",(423, 423),'')
              content:
                Assignment
                  variable='plbnd'
                  sign='='
                  expr='1'
                  item=Line('plbnd = 1',(424, 424),'')
                Assignment
                  variable='plbopt'
                  sign='='
                  expr='strn(7:)'
                  item=Line('plbopt = strn(7:)',(425, 425),'')
                Assignment
                  variable='lrout'
                  sign='='
                  expr='0'
                  item=Line('lrout = 0',(426, 426),'')
                Assignment
                  variable='lfrce'
                  sign='='
                  expr='0'
                  item=Line('lfrce = 0',(427, 427),'')
                Assignment
                  variable='nkp'
                  sign='='
                  expr='0'
                  item=Line('nkp = 0',(428, 428),'')
                Assignment
                  variable='numq'
                  sign='='
                  expr='1'
                  item=Line('numq = 1',(429, 429),'')
                Call
                  item=Line('call defi(oifbls, -ndham*nspc*2)',(430, 430),'')
                Else
                  item=Line('else',(431, 431),'')
                Assignment
                  variable='plbnd'
                  sign='='
                  expr='0'
                  item=Line('plbnd = 0',(432, 432),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(433, 435),'')
            CommentBlock
              item=Comment('C     Sanity checks',(435, 435))
            If
              blocktype='if'
              name='__IF__'
              item=Line("if (lmet .eq. 1) call rx('bndfp: lmet=1 not implemented')",(436, 436),'')
              content:
                Call
                  item=Line('call rx(F2PY_EXPR_TUPLE_116)',(436, 436),'')
            Call
              item=Line("call isanrg(lmet,0,4,'bndfp:','lmet', .true.)",(437, 440),'')
            CommentBlock
              item=Comment('C --- Define local arrays used in the generation of the potential ---\nC  10 continue',(439, 440))
            Assignment
              variable='lnoxc'
              sign='='
              expr='0'
              item=Line('lnoxc = 0',(441, 441),'')
            Assignment
              variable='if(jobgw .eq. 2)lnoxc'
              sign='='
              expr='1'
              item=Line('if (jobgw .eq. 2) lnoxc = 1',(442, 442),'')
            Call
              item=Line('call defrr (oqmom,  nvl)',(443, 443),'')
            Call
              item=Line('call defrr (ogpot0, nvl)',(444, 444),'')
            Call
              item=Line('call defrr (ovval,  nchan)',(445, 445),'')
            Call
              item=Line('call defrr (ohab,   nab*n0*nsp*nbas)',(446, 446),'')
            Call
              item=Line('call defrr (ovab,   nab*n0*nsp*nbas)',(447, 447),'')
            Call
              item=Line('call defrr (osab,   nab*n0*nsp*nbas)',(448, 448),'')
            Call
              item=Line('call defrr (oppnl,  nppn*n0*nsp*nbas)',(449, 449),'')
            Call
              item=Line('call defrr (ofes1,  3*nbas)',(450, 450),'')
            Call
              item=Line('call dfaugm(nbas,lcplxp,lso,ssite,sspec,osig,otau,oppi)',(451, 459),'')
            CommentBlock
              item=Comment('C --- Make the potential sans XC part ---\nc --- get index for hamiltonian for m_hamindex takao june2009',(453, 459))
            Write
              item=Line('write(6,*)',(460, 460),'')
            Write
              item=Line("write(6,*) ' --- Hamiltonian index ---'",(461, 461),'')
            Write
              item=Line("write(6,*) ' ib l  k offl(iorb)+1  offl(iorb)+2*l+1  trim(spec)'",(462, 462),'')
            Do
              blocktype='do'
              item=Line('do  iorb = 1, norbt',(463, 463),'')
              content:
                Assignment
                  variable='ib'
                  sign='='
                  expr='ibastab(iorb)'
                  item=Line('ib = ibastab(iorb)',(464, 464),'')
                Call
                  item=Line("call upack('site spec',ssite,ib,is,0,0,0)",(465, 465),'')
                Call
                  item=Line("call spacks(0,'spec name',sspec,spid,is,is)",(466, 466),'')
                Write
                  item=Line('write(6,"(3i3,2x,2i5,3x,a)")    ib,ltab(iorb),ktab(iorb),    offl(iorb)+1, offl(iorb)+2*ltab(iorb)+1, trim(spid)',(467, 469),'')
            EndDo
              blocktype='do'
              item=Line('enddo',(470, 470),'')
            Write
              item=Line('write(6,*) ngrp',(471, 471),'')
            Do
              blocktype='do'
              item=Line('do ig = 1, ngrp',(472, 472),'')
              content:
                Write
                  item=Line('write(6,*) ig',(473, 473),'')
                Do
                  blocktype='do'
                  item=Line('do i=1,3',(474, 474),'')
                  content:
                    Write
                      item=Line('write(6,"(3f13.5,3x,f13.5)") symops(i,1:3,ig),ag(i,ig)',(475, 475),'')
                EndDo
                  blocktype='do'
                  item=Line('enddo',(476, 476),'')
            EndDo
              blocktype='do'
              item=Line('enddo',(477, 479),'')
            CommentBlock
              item=Comment('c --- generate \\Sigma for q points on all the mesh points. takao',(479, 479))
            Assignment
              variable='lwsig'
              sign='='
              expr='0'
              item=Line('lwsig=0',(480, 481),'')
            CommentBlock
              item=Comment('c      if (.false.) then',(481, 481))
            IfThen
              blocktype='ifthen'
              item=Line('if(mod(lrsig,10) .ne. 0) then',(482, 482),'')
              content:
                CommentBlock
                  item=Comment("!rsrnge = dgets('ham rsrnge',sham) !Real-space range\n!rsrnge = dgets('ham rsrnge',sham) !Real-space range\n!print *,'rsrnge=',rsrnge\n!print *,'rsrnge=',rsrnge",(483, 484))
                Assignment
                  variable='rsrnge'
                  sign='='
                  expr='sham%rsrnge'
                  item=Line('rsrnge = sham%rsrnge',(485, 485),'')
                Print
                  item=Line("print *,'rsrnge=',rsrnge",(486, 486),'')
                Assignment
                  variable='ifi'
                  sign='='
                  expr='1'
                  item=Line('ifi = 1',(487, 487),'')
                Assignment
                  variable='if(procid .eq. master)ifi'
                  sign='='
                  expr="fopna('sigm',-1,4)"
                  item=Line("if (procid .eq. master) ifi = fopna('sigm',-1,4)",(488, 488),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (ldim .ne. ndham) then',(489, 489),'')
                  content:
                    CommentBlock
                      item=Comment('!june2009 takao\n!june2009 takao',(489, 489))
                    Write
                      item=Line('write(6,"(a,2i5)")" ldim(dim of lmto) = ",ldim,     " ndham(max of ham dimension)= ",ndham',(490, 491),'')
                    Write
                      item=Line('write(6,*)"go to rdsigm for PMT mode..."',(492, 492),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(493, 493),'')
                Print
                  item=Line("print *,'goto rdsigm2 lrsig lwsig=',lrsig,lwsig",(494, 494),'')
                Call
                  item=Line('call rdsigm2(nbas,nsp,ndham,slat,sham,sbz,ifi,rsrnge)',(495, 495),'')
                Call
                  item=Line('call fclose(ifi)',(496, 496),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(497, 499),'')
            IfThen
              blocktype='ifthen'
              item=Line('if(.false.) then',(500, 503),'')
              content:
                CommentBlock
                  item=Comment('c --- original\nC ... Read and store self-energy addition to LDA potential\nC     Read lwsig: special modes that write sig, Z to disk.',(501, 503))
                Assignment
                  variable='lwsig'
                  sign='='
                  expr='0'
                  item=Line('lwsig = 0',(504, 504),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (mod(lrsig,10) .ne. 0) then',(505, 506),'')
                  content:
                    CommentBlock
                      item=Comment('C       Real-space range',(506, 506))
                    Assignment
                      variable='rsrnge'
                      sign='='
                      expr="dgets('ham rsrnge',sham)"
                      item=Line("rsrnge = dgets('ham rsrnge',sham)",(507, 507),'')
                    Assignment
                      variable='ifi'
                      sign='='
                      expr='1'
                      item=Line('ifi = 1',(508, 508),'')
                    Assignment
                      variable='if(procid .eq. master)ifi'
                      sign='='
                      expr="fopna('sigm',-1,4)"
                      item=Line("if (procid .eq. master) ifi = fopna('sigm',-1,4)",(509, 509),'')
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (ldim .ne. ndham) then',(510, 510),'')
                      content:
                        CommentBlock
                          item=Comment('!june2009 takao\n!june2009 takao',(510, 510))
                        Write
                          item=Line('write(6,*)"ldim(dim of lmto)  ndham(max of ham dimension)=",ldim,ndham',(511, 511),'')
                        Write
                          item=Line('write(6,*)"go to rdsigm for PMT mode..."',(512, 512),'')
                        Call
                          item=Line("call rx('rdsigm not ready for PW basis')",(513, 513),'')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(514, 514),'')
                    Call
                      item=Line('call rdsigm(lrsig,nbas,nsp,ndham,slat,sham,sbz,ifi,rsrnge,lwsig)',(515, 515),'')
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (lwsig .ne. 0) then',(516, 516),'')
                      content:
                        Assignment
                          variable='lrout'
                          sign='='
                          expr='0'
                          item=Line('lrout = 0',(517, 517),'')
                        Assignment
                          variable='lfrce'
                          sign='='
                          expr='0'
                          item=Line('lfrce = 0',(518, 518),'')
                        Assignment
                          variable='lwtkb'
                          sign='='
                          expr='0'
                          item=Line('lwtkb = 0',(519, 519),'')
                        Call
                          item=Line("call rxx(plbnd.ne.0,'incompatible options, lwsig and plbnd')",(520, 520),'')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(521, 521),'')
                    Call
                      item=Line('call fclose(ifi)',(522, 522),'')
                    Call
                      item=Line('call phmbl3(1,0,0,0,0,0,0,0)',(523, 523),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(524, 524),'')
                Print
                  item=Line("print *,'lwsig=',lwsig",(525, 525),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(526, 528),'')
            CommentBlock
              item=Comment('C --- Make the potential and total energy terms ---',(528, 528))
            Assignment
              variable='i'
              sign='='
              expr='1 + 10*lfrzw + 100*lnoxc'
              item=Line('i = 1 + 10*lfrzw + 100*lnoxc',(529, 529),'')
            IfThen
              blocktype='ifthen'
              item=Line("if (cmdopt('--wrhomt',8,0,strn)) then",(530, 530),'')
              content:
                Assignment
                  variable='i'
                  sign='='
                  expr='i + 10000'
                  item=Line('i = i + 10000',(531, 531),'')
                ElseIf
                  item=Line("else if (cmdopt('--wpotmt',8,0,strn)) then",(532, 532),'')
                Assignment
                  variable='i'
                  sign='='
                  expr='i + 20000'
                  item=Line('i = i + 20000',(533, 533),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(534, 535),'')
            Call
              item=Line('call togpr()',(536, 536),'')
            Call
              item=Line('call mkpot(nbas,ssite,sspec,slat,sham,spot,lfrce,lcplxp,k1,k2,k3,  w(osmrho),w(oorhat),qbg,w(osmpot),w(oqmom),vconst,vrmt,osig,  otau,oppi,w(oppnl),w(ohab),w(ovab),w(osab),qval,qsc,  w(ogpot0),w(ovval),w(ofes1),i,vorb,nlibu,lmaxu,lldau)',(537, 540),'')
            Call
              item=Line('call togpr()',(541, 545),'')
            CommentBlock
              item=Comment('C     lwsig0 = isign(1,lwsig) * mod(iabs(lwsig),10)\nC     lwsig1 = iabs(lwsig/10)',(544, 545))
            IfThen
              blocktype='ifthen'
              item=Line("if (cmdopt('--evec',6,0,strn)) then",(546, 546),'')
              content:
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lwsig .ne. 0) call rxi('bandfp: --evec not allowed with '      //'--wsig:trans=',i)",(547, 548),'')
                  content:
                    Call
                      item=Line('call rxi(F2PY_EXPR_TUPLE_166)',(547, 548),'')
                Assignment
                  variable='strn2'
                  sign='='
                  expr='strn(7:)'
                  item=Line('strn2 = strn(7:)',(549, 549),'')
                Assignment
                  variable='dc'
                  sign='='
                  expr='strn2(1:1)'
                  item=Line('dc = strn2(1:1)',(550, 550),'')
                Call
                  item=Line('call evcflg(dc,strn2,i,shftqp)',(551, 551),'')
                Assignment
                  variable='if(i .gt. 10)lwsig'
                  sign='='
                  expr='2 + mod(i,10)'
                  item=Line('if (i .gt. 10) lwsig = 2 + mod(i,10)',(552, 552),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(553, 556),'')
            CommentBlock
              item=Comment('C     Transformation modes: read qp and jump to start',(556, 556))
            IfThen
              blocktype='ifthen'
              item=Line('if (lwsig .ne. 0) then',(557, 557),'')
              content:
                Call
                  item=Line("call isanrg(lwsig,-1,5,'BNDFP:','lwsig',.true.)",(558, 558),'')
                Assignment
                  variable='onesp'
                  sign='='
                  expr='0'
                  item=Line('onesp = 0',(559, 559),'')
                Assignment
                  variable='lwtkb'
                  sign='='
                  expr='0'
                  item=Line('lwtkb = 0',(560, 561),'')
                Assignment
                  variable='ifi'
                  sign='='
                  expr="fopna('qpts',-1,0)"
                  item=Line("ifi = fopna('qpts',-1,0)",(562, 562),'')
                Call
                  item=Line('call getqp(0,ifi,nkp,nkabc,lshft,i,w,w,w)',(563, 563),'')
                Call
                  item=Line('call defrr(oqp,3*nkp)',(564, 564),'')
                Call
                  item=Line('call getqp(1,ifi,nkp,nkabc,lshft,i,w(oqp),w,w)',(565, 566),'')
                Goto
                  item=Line('goto 50',(567, 567),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(568, 569),'')
            Assignment
              variable='elind'
              sign='='
              expr="dgets('ham elind',sham)"
              item=Line("elind = dgets('ham elind',sham)",(570, 570),'')
            Assignment
              variable='if(elind .lt. 0d0)elind'
              sign='='
              expr='-(3*pi**2*(qval-qsc-qbg)/vol)**.66666d0*elind'
              item=Line('if (elind .lt. 0d0)  elind=-(3*pi**2*(qval-qsc-qbg)/vol)**.66666d0*elind',(571, 572),'')
            Assignment
              variable='dmxp(33)'
              sign='='
              expr='elind'
              item=Line('dmxp(33) = elind',(573, 575),'')
            CommentBlock
              item=Comment('C --- Setup for BZ integration ---',(575, 575))
            IfThen
              blocktype='ifthen'
              item=Line('if (plbnd .eq. 0) then',(576, 576),'')
              content:
                Call
                  item=Line('call subzi(lmet,ltet,lrout.gt.0,ndham,nsp,nspc,nkp,qval-qbg,    nevmx,lwtkb,eferm,oevl,owtkb,numq,lswtk,oswtk,ef0,def,mpsord,    dabs(esmear-mpsord))',(577, 579),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lwtkb .eq. -1)    call info(20,0,0,' Start first of two band passes ...',0,0)",(580, 581),'')
                  content:
                    Call
                      item=Line('call info(F2PY_EXPR_TUPLE_185)',(580, 581),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lwtkb .eq. 1) then',(582, 582),'')
                  content:
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (ef0 .ne. eferm)    call info(20,0,1,'%8pReplace ef0 with file ef=%;6d',eferm,0)",(583, 584),'')
                      content:
                        Call
                          item=Line('call info(F2PY_EXPR_TUPLE_188)',(583, 584),'')
                    Assignment
                      variable='ef0'
                      sign='='
                      expr='eferm'
                      item=Line('ef0 = eferm',(585, 585),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(586, 587),'')
                Else
                  item=Line('else',(588, 588),'')
                Assignment
                  variable='nkp'
                  sign='='
                  expr='0'
                  item=Line('nkp = 0',(589, 589),'')
                Assignment
                  variable='ldos'
                  sign='='
                  expr='0'
                  item=Line('ldos = 0',(590, 590),'')
                Assignment
                  variable='lwtkb'
                  sign='='
                  expr='-1'
                  item=Line('lwtkb = -1',(591, 591),'')
                Assignment
                  variable='icls'
                  sign='='
                  expr='0'
                  item=Line('icls = 0',(592, 592),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(593, 596),'')
            CommentBlock
              item=Comment('C ... Set switch to write file sigii',(595, 595))
            IfThen
              blocktype='ifthen'
              item=Line('if (lrsig .ne. 0 .and. plbnd .eq. 0 .and. procid .eq. master) then',(597, 597),'')
              content:
                Assignment
                  variable='i'
                  sign='='
                  expr="fopna('sigii',-1,0)"
                  item=Line("i = fopna('sigii',-1,0)",(598, 598),'')
                Rewind
                  item=Line('rewind i',(599, 599),'')
                Call
                  item=Line("call pack1('ham sigp:9.9',sham,1d0)",(600, 600),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(601, 604),'')
            CommentBlock
              item=Comment('C --- More k-point independent local arrays ---',(604, 604))
            Assignment
              variable='if(ldos .eq. 0 .and. lmet .eq. 0)ndos'
              sign='='
              expr='1'
              item=Line('if (ldos .eq. 0 .and. lmet .eq. 0) ndos = 1',(605, 605),'')
            Assignment
              variable='if(ndos .lt. 0)ndos'
              sign='='
              expr='-ndos'
              item=Line('if (ndos .lt. 0) ndos = -ndos',(606, 606),'')
            Call
              item=Line('call defrr (odos, ndos*2*nsp)',(607, 607),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lrout .ne. 0) then',(608, 608),'')
              content:
                Call
                  item=Line('call dfqkkl(nbas,ssite,sspec,numq,oqkkl)',(609, 609),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (lekkl .eq. 1)  call dfqkkl(nbas,ssite,sspec,numq,oeqkkl)',(610, 611),'')
                  content:
                    Call
                      item=Line('call dfqkkl(F2PY_EXPR_TUPLE_198)',(610, 611),'')
                Call
                  item=Line('call defcc(osrout,  k1*k2*k3*numq*nsp)',(612, 612),'')
                Call
                  item=Line('call defrr (ofh,    3*nbas)',(613, 613),'')
                Call
                  item=Line('call defrr (ofes2,  3*nbas)',(614, 614),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(615, 615),'')
            Call
              item=Line('call suham2(sctrl,slat,sspec,ssite,sham,spot,sstrn)',(616, 619),'')
            CommentBlock
              item=Comment('C --- Options for core level specta (CLS) ---\nC     Allocate aus for all qp',(618, 619))
            IfThen
              blocktype='ifthen'
              item=Line("if (cmdopt('--cls',5,0,strn)) then",(620, 620),'')
              content:
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lmet .gt. 0 .and. (lmet .ne. 2 .and. lmet .ne. 3))    call rx('For CLS restart with METAL=2 or 3')",(621, 622),'')
                  content:
                    Call
                      item=Line('call rx(F2PY_EXPR_TUPLE_205)',(621, 622),'')
                Assignment
                  variable='icls'
                  sign='='
                  expr='1'
                  item=Line('icls = 1',(623, 623),'')
                Assignment
                  variable='clsopt'
                  sign='='
                  expr='strn(6:)'
                  item=Line('clsopt = strn(6:)',(624, 624),'')
                Assignment
                  variable='efmax'
                  sign='='
                  expr='1d3'
                  item=Line('efmax = 1d3',(625, 625),'')
                Assignment
                  variable='nevmx'
                  sign='='
                  expr='ndhamx'
                  item=Line('nevmx = ndhamx',(626, 626),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lrout .eq. 0) call rx('bndfp: need output density for cls')",(627, 627),'')
                  content:
                    Call
                      item=Line('call rx(F2PY_EXPR_TUPLE_208)',(627, 627),'')
                Call
                  item=Line('call suclst(nsitmx,nbas,nsp,ssite,sspec,clsopt,              isite,iclsl,iclsn,nsites)',(628, 629),'')
                Assignment
                  variable='efmax'
                  sign='='
                  expr='1d3'
                  item=Line('efmax = 1d3',(630, 630),'')
                Assignment
                  variable='nevmx'
                  sign='='
                  expr='ndhamx'
                  item=Line('nevmx = ndhamx',(631, 631),'')
                Assignment
                  variable='nlmax'
                  sign='='
                  expr="nglob('mxorb') / nglob('nkaph')"
                  item=Line("nlmax = nglob('mxorb') / nglob('nkaph')",(632, 632),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (16*3*nlmax*ndham*nbas*nsp*nkp/1000000 .gt. 24 .and. procid                                                     .eq. master)  call awrit6(' CLS: %iMb memory for aus: nlmax=%i ndham=%i '//              'nsistes=%i nsp=%i nkp=%i',' ',120,             i1mach(2),16*3*nlmax*ndham*nsites*nsp*nkp/1000000,             nlmax,ndham,nsites,nsp,nkp)",(633, 638),'')
                  content:
                    Call
                      item=Line('call awrit6(F2PY_EXPR_TUPLE_213)',(633, 638),'')
                Call
                  item=Line('call defcc(oausc,-3*nlmax*ndham*nsites*nsp*nkp)',(639, 639),'')
                Else
                  item=Line('else',(640, 640),'')
                Assignment
                  variable='icls'
                  sign='='
                  expr='0'
                  item=Line('icls = 0',(641, 641),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(642, 644),'')
            CommentBlock
              item=Comment('ctakaox june2009',(644, 644))
            Assignment
              variable='ifiogw'
              sign='='
              expr='9038'
              item=Line('ifiogw=9038',(645, 645),'')
            Inquire
              item=Line('inquire(unit=ifiogw,opened=nexist)',(646, 646),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line("if(nexist)  stop 'bndfp: I assumed ifio=9038 is not used(too sloppy)'",(647, 648),'')
              content:
                Stop
                  item=Line("stop '_F2PY_STRING_CONSTANT_118_'",(647, 648),'')
            Open
              item=Line("open(ifiogw,file='NBANDGW')",(649, 649),'')
            IfThen
              blocktype='ifthen'
              item=Line('if(lrsig/=0) then',(650, 650),'')
              content:
                Assignment
                  variable='ifiese'
                  sign='='
                  expr='9039'
                  item=Line('ifiese=9039',(651, 651),'')
                Inquire
                  item=Line('inquire(unit=ifiese,opened=nexist)',(652, 652),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if(nexist)    stop 'bndfp: I assumed ifio=9039 is not used(too sloppy)'",(653, 654),'')
                  content:
                    Stop
                      item=Line("stop '_F2PY_STRING_CONSTANT_119_'",(653, 654),'')
                Open
                  item=Line("open(ifiese,file='ESEAVR',status='old')",(655, 655),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(656, 664),'')
            CommentBlock
              item=Comment('C --- Start loop over k points; also, re-entry for second band pass ---',(664, 664))
   99       Continue
   99         item=Line('continue',(665, 665),'99')
            Assignment
              variable='ebot'
              sign='='
              expr='1000d0'
              item=Line('ebot = 1000d0',(666, 666),'')
            Call
              item=Line('call surho(nbas,ssite,sspec,lmet,ldos,lrout,lekkl,numq,  oqkkl,oeqkkl,k1,k2,k3,w(osrout),ndos,w(odos),sumev,sumqv)',(667, 668),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lfrce .gt. 0) then',(669, 669),'')
              content:
                Call
                  item=Line('call dpzero(frc, 3*nbas*numq)',(670, 670),'')
                Call
                  item=Line('call dpzero(w(ofh),3*nbas)',(671, 671),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(672, 673),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lswtk .eq. 1) then',(674, 674),'')
              content:
                Assignment
                  variable='efmax'
                  sign='='
                  expr='1d3'
                  item=Line('efmax = 1d3',(675, 675),'')
                Assignment
                  variable='nevmx'
                  sign='='
                  expr='ndhamx'
                  item=Line('nevmx = ndhamx',(676, 676),'')
                Call
                  item=Line('call dpzero(w(oswtk),ndhamx*nkp)',(677, 677),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(678, 681),'')
            CommentBlock
              item=Comment('C --- Setup moments file : write header ---',(681, 681))
            Assignment
              variable='nl'
              sign='='
              expr="igets('ctrl nl',sctrl)"
              item=Line("nl = igets('ctrl nl',sctrl)",(682, 682),'')
            Assignment
              variable='nfilem'
              sign='='
              expr='0'
              item=Line('nfilem = 0',(683, 683),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (procid .eq. master) then',(684, 684),'')
              content:
                Assignment
                  variable='nfilem'
                  sign='='
                  expr="fopna('moms',-1,4)"
                  item=Line("nfilem = fopna('moms',-1,4)",(685, 685),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(686, 688),'')
            CommentBlock
              item=Comment("C     if (cmdopt('--mull',6,0,strn)) nfilem = fopna('moms',-1,4)\nC     if (cmdopt('--pdos',6,0,strn)) nfilem = fopna('moms',-1,4)",(687, 688))
            IfThen
              blocktype='ifthen'
              item=Line('if (nfilem .gt. 0) then',(689, 689),'')
              content:
                Rewind
                  item=Line('rewind nfilem',(690, 690),'')
                Assignment
                  variable='i'
                  sign='='
                  expr='1'
                  item=Line('i = 1',(691, 692),'')
                CommentBlock
                  item=Comment("C   ... If switch '--mull'; get sites, number of channels",(692, 692))
                IfThen
                  blocktype='ifthen'
                  item=Line("if (cmdopt('--mull',6,0,strn)) then",(693, 693),'')
                  content:
                    Assignment
                      variable='mulopt'
                      sign='='
                      expr='strn(7:)'
                      item=Line('mulopt = strn(7:)',(694, 694),'')
                    Call
                      item=Line("call upack('lat nsgrp',slat,ng,0,0,0,0)",(695, 695),'')
                    Assignment
                      variable='efmax'
                      sign='='
                      expr='1d3'
                      item=Line('efmax = 1d3',(696, 696),'')
                    Assignment
                      variable='nevmx'
                      sign='='
                      expr='ndhamx'
                      item=Line('nevmx = ndhamx',(697, 697),'')
                    Assignment
                      variable='nchmx'
                      sign='='
                      expr='min(1024,nbas*nl**2)'
                      item=Line('nchmx = min(1024,nbas*nl**2)',(698, 698),'')
                    Call
                      item=Line('call defi(ochan,nchmx)',(699, 699),'')
                    Call
                      item=Line('call sumlst(1,nchmx,nbas,ng,ssite,sspec,mulopt,moddos,      nsites,lsites,lmxch,nchan,w(ochan),0)',(700, 701),'')
                    Call
                      item=Line('call redfi(ochan,nchan)',(702, 702),'')
                    Call
                      item=Line('call iomomn(.true.,2,.false.,1,nspc,1,1,i)',(703, 703),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(704, 705),'')
                CommentBlock
                  item=Comment("C   ... If switch '--pdos'; get sites, number of channels",(705, 705))
                IfThen
                  blocktype='ifthen'
                  item=Line("if (cmdopt('--pdos',6,0,strn)) then",(706, 706),'')
                  content:
                    Assignment
                      variable='mulopt'
                      sign='='
                      expr='strn(7:)'
                      item=Line('mulopt = strn(7:)',(707, 707),'')
                    Call
                      item=Line("call upack('lat nsgrp',slat,ng,0,0,0,0)",(708, 708),'')
                    Assignment
                      variable='nchmx'
                      sign='='
                      expr='min(1024,nbas*nl**2)'
                      item=Line('nchmx = min(1024,nbas*nl**2)',(709, 709),'')
                    Call
                      item=Line('call defi(ochan,nchmx)',(710, 710),'')
                    Assignment
                      variable='nll'
                      sign='='
                      expr='0'
                      item=Line('nll = 0',(711, 711),'')
                    Call
                      item=Line('call sumlst(0,nchmx,nbas,ng,ssite,sspec,mulopt,moddos,      nsites,lsites,lmxch,nchan,w,nll)',(712, 713),'')
                    Assignment
                      variable='nlmax'
                      sign='='
                      expr='(lmxch+1)**2'
                      item=Line('nlmax = (lmxch+1)**2',(714, 714),'')
                    Assignment
                      variable='i'
                      sign='='
                      expr='nlmax*ndham*3*nsp*nbas'
                      item=Line('i = nlmax*ndham*3*nsp*nbas',(715, 715),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (16*i*nkp/1000000 .gt. 24 .and. procid .eq. master)    call info(20,0,0,' PDOS: %iMb memory for aus: nlmax=%i',      i/1000000,nlmax)",(716, 718),'')
                      content:
                        Call
                          item=Line('call info(F2PY_EXPR_TUPLE_246)',(716, 718),'')
                    Call
                      item=Line('call defcc(oausp,i)',(719, 719),'')
                    Call
                      item=Line('call rlse(oausp)',(720, 720),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (cmdopt('--mull',6,0,strn))      call rx('--pdos and --mull not allowed in conjunction')",(721, 722),'')
                      content:
                        Call
                          item=Line('call rx(F2PY_EXPR_TUPLE_249)',(721, 722),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (cmdopt('--cls',5,0,strn))      call rx('--pdos and --cls not allowed in conjunction')",(723, 724),'')
                      content:
                        Call
                          item=Line('call rx(F2PY_EXPR_TUPLE_251)',(723, 724),'')
                    Call
                      item=Line('call iomomn(.true.,2,.false.,1,nspc,1,1,i)',(725, 725),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(726, 726),'')
                Assignment
                  variable='if(procid .eq. master)i'
                  sign='='
                  expr='iomoms(-nfilem,nl,nsp,nspc,nkp,    ndham,i,1,0,1,0,0,0,0,0,0d0,0d0,0d0,0d0,0d0,0d0)'
                  item=Line('if (procid .eq. master) i = iomoms(-nfilem,nl,nsp,nspc,nkp,    ndham,i,1,0,1,0,0,0,0,0,0d0,0d0,0d0,0d0,0d0,0d0)',(727, 728),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(729, 731),'')
            CommentBlock
              item=Comment('C ... Case only generate bands at supplied qp: setup',(731, 731))
            IfThen
              blocktype='ifthen'
              item=Line('if (plbnd .ne. 0) then',(732, 733),'')
              content:
                CommentBlock
                  item=Comment('C       Try and read Fermi level from file',(733, 733))
                IfThen
                  blocktype='ifthen'
                  item=Line('if (procid .eq. master) then',(734, 734),'')
                  content:
                    Assignment
                      variable='ifi'
                      sign='='
                      expr="fopna('wkp',-1,4)"
                      item=Line("ifi = fopna('wkp',-1,4)",(735, 735),'')
                    Call
                      item=Line('call getef(ifi,0,ef0)',(736, 736),'')
                    Call
                      item=Line("call fclr('wkp',ifi)",(737, 737),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(738, 739),'')
                Call
                  item=Line("call mpibc1(ef0,1,4,.false.,'bndfp','ef0')",(740, 740),'')
                Assignment
                  variable='iopq'
                  sign='='
                  expr='0'
                  item=Line('iopq = 0',(741, 743),'')
                CommentBlock
                  item=Comment('C       suqlst in MPIK mode; returns cumulative number of k-points',(742, 742))
                Assignment
                  variable="if(cmdopt('--onesp',7,0,strn) .and. nspc .eq. 1)onesp"
                  sign='='
                  expr='1'
                  item=Line("if (cmdopt('--onesp',7,0,strn) .and. nspc .eq. 1) onesp = 1",(744, 744),'')
                Assignment
                  variable='i'
                  sign='='
                  expr='nsp'
                  item=Line('i = nsp',(745, 745),'')
                Assignment
                  variable='if(onesp .ne. 0 .or. nspc .eq. 2)i'
                  sign='='
                  expr='1'
                  item=Line('if (onesp .ne. 0 .or. nspc .eq. 2) i = 1',(746, 747),'')
                CommentBlock
                  item=Comment('C       In parallel mode, suqlst call only serves to generate nkp',(747, 747))
                IfThen
                  blocktype='ifthen'
                  item=Line('if (procid .eq. master) then',(748, 748),'')
                  content:
                    Call
                      item=Line('call suqlst(plbopt,iopq,ndhamx,ef0,i,w,nfbn,w(oifbls),nkp,qp,      onesp)',(749, 750),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(751, 751),'')
                Call
                  item=Line("call mpibc1(nkp,1,2,mlog,'bndfp','nkp')",(752, 752),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (nkp .le. 0) call rx0('bndfp')",(753, 753),'')
                  content:
                    Call
                      item=Line('call rx0(F2PY_EXPR_TUPLE_267)',(753, 753),'')
                Call
                  item=Line("call mpibc1(nfbn,2,2,mlog,'bndfp','nfbn')",(754, 754),'')
                Call
                  item=Line("call mpibc1(onesp,1,2,mlog,'bndfp','onesp')",(755, 758),'')
                CommentBlock
                  item=Comment('C MPIK: Setup to assemble all k-points into single list with qp table',(757, 757))
            EndIfThen
              blocktype='if'
              item=Line('endif',(759, 761),'')
            CommentBlock
              item=Comment('C ... For insulator, valence band top and conduction band bottom',(761, 761))
            Assignment
              variable='evtop'
              sign='='
              expr='-99999'
              item=Line('evtop = -99999',(762, 762),'')
            Assignment
              variable='ecbot'
              sign='='
              expr='-evtop'
              item=Line('ecbot = -evtop',(763, 765),'')
            CommentBlock
              item=Comment('C ... Setup for spin-orbit coupling',(765, 765))
            IfThen
              blocktype='ifthen'
              item=Line('if (lso .ne. 0) then',(766, 768),'')
              content:
                CommentBlock
                  item=Comment('C        call sumlst(10,nchmx,nbas,ng,ssite,sspec,mulopt,moddos,\nC     .    nsites,lsites,lmxch,nchan,w,nll)',(767, 768))
                Assignment
                  variable='nlmax'
                  sign='='
                  expr="nglob('nlmax')"
                  item=Line("nlmax = nglob('nlmax')",(769, 769),'')
                Call
                  item=Line('call defrr(oorbtm, -nl*nsp*nbas)',(770, 770),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(771, 779),'')
            CommentBlock
              item=Comment('C ... Setup for case sigma or evecs written to disk.\nC     No integrated quantities accumulated.  qp read from file\nC     Also sigma must be written in (iq,isp) order, opposite to the\nC     order in which they would be generated here.\nC     Requires second loop over (iq,isp) and filtering of isp\nC     First pass should have onesp=0 and lwtkb=0\nC     Next line is re-entry point for 2nd spin when writing sigma',(773, 779))
   50       Continue
   50         item=Line('continue',(780, 780),'50')
            IfThen
              blocktype='ifthen'
              item=Line('if (lwsig .ne. 0) then',(781, 781),'')
              content:
                Assignment
                  variable='onesp'
                  sign='='
                  expr='onesp + 1'
                  item=Line('onesp = onesp + 1',(782, 783),'')
                Call
                  item=Line("call info5(20,1,0,' BNDFP:  '//    '%?#(n==4)#Write evals,evecs to file##%-1j'//    '%?#(n==3)#Write LDA evals,evecs to file##%-1j'//    '%?#(n==1|n==2)#Write sigm(LDA)##%-1j'//    '%?#(n==5)#Write sigm(orb)##%-1j'//    '%?#(n==-1)#Rotate sigm back to orbital basis##%-1j'//    '%j for %i qp%?#n==2#, spin 2##',    lwsig,nkp,onesp,0,0)",(784, 793),'')
                CommentBlock
                  item=Comment('C       endif',(793, 793))
            EndIfThen
              blocktype='if'
              item=Line('endif',(794, 797),'')
            CommentBlock
              item=Comment('C --- do loop for iq and isp ---------------\nctakao',(796, 797))
            If
              blocktype='if'
              name='__IF__'
              item=Line('if(allocated(nevls)) deallocate(nevls)',(798, 798),'')
              content:
                Deallocate
                  item=Line('deallocate(nevls)',(798, 798),'')
            Allocate
              item=Line('allocate(nevls(nkp,nsp))',(799, 799),'')
            Assignment
              variable='nevls'
              sign='='
              expr='0'
              item=Line('nevls=0',(800, 806),'')
            CommentBlock
              item=Comment('C Start k and isp loop (first loop in parallel mode)\nC     h,s,evecs are dimensioned ndimh in this loop (may be q dependent)\nC     evl is dimensioned evl(ndham,2)\nC     w(oevl), w(owtkb), w(oswtk) are dimensioned (ndham,nsp,nkp)',(801, 804))
            Assignment
              variable='nsmidb'
              sign='='
              expr='ndham'
              item=Line('nsmidb = ndham',(807, 807),'')
            Do
              blocktype='do'
              item=Line('do  iq = 1, nkp',(808, 809),'')
              content:
                Assignment
                  variable='isqp'
                  sign='='
                  expr='nsp*(iq-1)'
                  item=Line('isqp = nsp*(iq-1)',(810, 812),'')
                CommentBlock
                  item=Comment('C       Get qp either from qp list or read from suqlst',(811, 811))
                IfThen
                  blocktype='ifthen'
                  item=Line('if (plbnd .ne. 0) then',(813, 813),'')
                  content:
                    Assignment
                      variable='i'
                      sign='='
                      expr='nsp'
                      item=Line('i = nsp',(814, 814),'')
                    Assignment
                      variable='if(onesp .ne. 0 .or. nspc .eq. 2)i'
                      sign='='
                      expr='1'
                      item=Line('if (onesp .ne. 0 .or. nspc .eq. 2) i = 1',(815, 815),'')
                    Call
                      item=Line('call suqlst(plbopt,0,ndhamx,ef0,i,w,nfbn,w(oifbls),nkp,qp,      onesp)',(816, 817),'')
                    Else
                      item=Line('else',(818, 818),'')
                    Call
                      item=Line('call dpscop(w(oqp),qp,3,3*iq-2,1,1d0)',(819, 819),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(820, 825),'')
                CommentBlock
                  item=Comment('C   ... Loop over majority, minority spins\nC       In the SO case, still a loop isp=1..2\nC       isp=1 generates just the 11 block',(823, 825))
                Call
                  item=Line('call defrr(oh,-ndhamx**2*2)',(826, 826),'')
                Call
                  item=Line('call defrr(os,-ndhamx**2*2)',(827, 833),'')
                CommentBlock
                  item=Comment('cccccccccc\nctakaox\nc        call defrr(oss,-ndhamx**2*2)\ncccccccccccc',(829, 832))
                Do
                  blocktype='do'
                  item=Line('do  isp = 1, nsp',(834, 834),'')
                  content:
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (onesp .eq. 0 .or. isp .eq. onesp) then',(835, 835),'')
                      content:
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (isp .eq. 1 .or. isp .eq. onesp) call shorbz(qp,qp,qlat,plat)',(836, 838),'')
                          content:
                            Call
                              item=Line('call shorbz(F2PY_EXPR_TUPLE_288)',(836, 838),'')
                        CommentBlock
                          item=Comment('C   ... For this qp, G vectors for PW basis and hamiltonian dimension',(838, 838))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (pwemax .gt. 0 .and. mod(pwmode,10) .gt. 0) then',(839, 839),'')
                          content:
                            Assignment
                              variable='pwgmin'
                              sign='='
                              expr='dsqrt(pwemin)'
                              item=Line('pwgmin = dsqrt(pwemin)',(840, 840),'')
                            Assignment
                              variable='pwgmax'
                              sign='='
                              expr='dsqrt(pwemax)'
                              item=Line('pwgmax = dsqrt(pwemax)',(841, 841),'')
                            Call
                              item=Line('call pshpr(1)',(842, 842),'')
                            Call
                              item=Line('call dpzero(xv,3)',(843, 843),'')
                            If
                              blocktype='if'
                              name='__IF__'
                              item=Line('if (mod(pwmode/10,10) .eq. 1) call dpcopy(qp,xv,1,3,1d0)',(844, 844),'')
                              content:
                                Call
                                  item=Line('call dpcopy(F2PY_EXPR_TUPLE_292)',(844, 844),'')
                            Call
                              item=Line('call gvlst2(alat,plat,xv,0,0,0,pwgmin,pwgmax,0,      0,0,napw,dum,dum,dum,dum)',(845, 846),'')
                            Call
                              item=Line('call poppr',(847, 847),'')
                            Call
                              item=Line('call defi(oigv2,3*napw)',(848, 848),'')
                            Call
                              item=Line('call defi(okv,3*napw)',(849, 849),'')
                            Call
                              item=Line('call pshpr(iprint()-10)',(850, 850),'')
                            Call
                              item=Line('call gvlst2(alat,plat,xv,0,0,0,pwgmin,pwgmax,0,      2,0,napw,w(okv),dum,dum,w(oigv2))',(851, 852),'')
                            Call
                              item=Line('call rlse(okv)',(853, 853),'')
                            Call
                              item=Line('call poppr',(854, 854),'')
                            Assignment
                              variable='ndimh'
                              sign='='
                              expr='ldim + napw'
                              item=Line('ndimh = ldim + napw',(855, 855),'')
                            Assignment
                              variable='if(mod(pwmode,10) .eq. 2)ndimh'
                              sign='='
                              expr='napw'
                              item=Line('if (mod(pwmode,10) .eq. 2) ndimh = napw',(856, 856),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (ndimh .gt. ndham) then',(857, 857),'')
                              content:
                                Call
                                  item=Line("call fexit2(-1,111,'%N Exit -1 : BNDFP: '//        'ndimh=%i exceeds ndham=%i.  Try increasing '//        'input NPWPAD',ndimh,ndham)",(858, 860),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(861, 861),'')
                            Else
                              item=Line('else',(862, 862),'')
                            Assignment
                              variable='ndimh'
                              sign='='
                              expr='ldim'
                              item=Line('ndimh = ldim',(863, 863),'')
                            Assignment
                              variable='oigv2'
                              sign='='
                              expr='1'
                              item=Line('oigv2 = 1',(864, 864),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(865, 865),'')
                        Assignment
                          variable='ndimhx'
                          sign='='
                          expr='ndimh*nspc'
                          item=Line('ndimhx = ndimh*nspc',(866, 868),'')
                        CommentBlock
                          item=Comment('C   ... Make Hamiltonian and overlap matrices',(868, 868))
                        Call
                          item=Line("call upack2('ham nqsig oqsig',sham,nqsig,oqsig)",(869, 869),'')
                        Assignment
                          variable='if(oqsig .eq. 0)oqsig'
                          sign='='
                          expr='1'
                          item=Line('if (oqsig .eq. 0) oqsig = 1',(870, 871),'')
                        Assignment
                          variable='ispc'
                          sign='='
                          expr='min(isp,nspc)'
                          item=Line('ispc = min(isp,nspc)',(872, 872),'')
                        Assignment
                          variable='i'
                          sign='='
                          expr='lrsig*10'
                          item=Line('i = lrsig*10',(873, 881),'')
                        CommentBlock
                          item=Comment('C       lwsig=-1: sigm LDA -> orbital basis\nC       lwsig= 1: sigm orbital -> LDA basis\nC       lwsig= 2: sigm orbital -> LDA basis, high energy parts replaced\nC       lwsig= 3: Write evecs of LDA hamiltonian to file\nC       lwsig= 4: Write evecs of hamiltonian to file\nC       lwsig= 5: sigm orbital -> orbital, high energy parts replaced\nC       hambls returns with evecs,evals of the LDA hamiltonian in s,h\nC       Transform sigm to LDA basis: hambls returns sigm(LDA) in h',(874, 881))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (lwsig .eq. 1) then',(882, 882),'')
                          content:
                            Assignment
                              variable='i'
                              sign='='
                              expr='i + 3000'
                              item=Line('i = i + 3000',(883, 883),'')
                            ElseIf
                              item=Line('elseif (lwsig .eq. 2) then',(884, 884),'')
                            Assignment
                              variable='i'
                              sign='='
                              expr='i + 4000'
                              item=Line('i = i + 4000',(885, 885),'')
                            ElseIf
                              item=Line('elseif (lwsig .eq. -1 .or. lwsig .eq. 3) then',(886, 886),'')
                            Assignment
                              variable='i'
                              sign='='
                              expr='i + 1000'
                              item=Line('i = i + 1000',(887, 887),'')
                            If
                              blocktype='if'
                              name='__IF__'
                              item=Line("if (nspc .eq. 2)      call rx('transform sigm not implemented in noncoll case')",(888, 889),'')
                              content:
                                Call
                                  item=Line('call rx(F2PY_EXPR_TUPLE_308)',(888, 889),'')
                            ElseIf
                              item=Line('elseif (lwsig .eq. -1 .or. lwsig .eq. 4) then',(890, 890),'')
                            Assignment
                              variable='i'
                              sign='='
                              expr='i + 6000'
                              item=Line('i = i + 6000',(891, 891),'')
                            ElseIf
                              item=Line('elseif (lwsig .eq. 5) then',(892, 892),'')
                            Assignment
                              variable='i'
                              sign='='
                              expr='i + 5000'
                              item=Line('i = i + 5000',(893, 893),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(894, 904),'')
                        CommentBlock
                          item=Comment("cccccccccccccccccccccc\nctakaox\nc        if(iq==1) then\nc              ifio = fopna('ovlmat',-1,4)\nc        endif\nc        call dpdump(w(oss),ndimh**2*2,ifio)\nccccccccccccccccccccc",(896, 902))
                        Call
                          item=Line('call hambls(i,nbas,ssite,sspec,slat,sham,isp,ispc,qp,k1,k2,k3,    w(oqsig),nqsig,w(osmpot),vconst,osig,otau,oppi,lcplxp,lso,    alfa,ndimh,napw,w(oigv2),w(oh),w(os),ismidb)',(905, 907),'')
                        Assignment
                          variable='nsmidb'
                          sign='='
                          expr='min(nsmidb,ismidb)'
                          item=Line('nsmidb = min(nsmidb,ismidb)',(908, 921),'')
                        CommentBlock
                          item=Comment("C       call zprm('evec, LDA',2,w(os),ndimh,ndimh,ndimh)\ncccccccccccccccccc\nctakaox test\nc        if(iq==1) then\nc              ifio = fopna('ovlmat',-1,4)\nc        endif\nc        call dpdump(w(os),ndimh**2*2,-ifio)\nccccccccccccccccc\nC   ... Mode to write sigma or evecs to file",(910, 921))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (lwsig .ne. 0) then',(922, 923),'')
                          content:
                            CommentBlock
                              item=Comment('C         Write header information',(923, 923))
                            Call
                              item=Line("call upack('bz lshft',sbz,lshft,0,0,0,0)",(924, 924),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (iq .eq. 1 .and. isp .eq. 1) then',(925, 925),'')
                              content:
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (lwsig .eq. 1 .or. lwsig .eq. 2 .or. lwsig .eq. 5) then',(926, 926),'')
                                  content:
                                    Assignment
                                      variable='ifi'
                                      sign='='
                                      expr="fopna('sigm2',-1,4)"
                                      item=Line("ifi = fopna('sigm2',-1,4)",(927, 927),'')
                                    ElseIf
                                      item=Line('elseif (lwsig .eq. 3 .or. lwsig .eq. 4) then',(928, 928),'')
                                    Assignment
                                      variable='ifi'
                                      sign='='
                                      expr="fopna('evec',-1,4)"
                                      item=Line("ifi = fopna('evec',-1,4)",(929, 929),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(930, 930),'')
                                Rewind
                                  item=Line('rewind ifi',(931, 931),'')
                                Call
                                  item=Line('call iosigh(0,lwsig,nsp,ndimh,nk1,nk2,nk3,nkp,        lshft(1),lshft(2),lshft(3),-ifi)',(932, 933),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(934, 938),'')
                            CommentBlock
                              item=Comment('C         lwsig=1,2 : dump sigma(LDA basis) into file sigm2\nC         lwsig=3,4 : dump LDA eigenvectors into file evec\nC         lwsig=5   : dump sigma(orb basis) into file sigm2',(936, 938))
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (lwsig .ge. 1 .and. lwsig .le. 5) then',(939, 939),'')
                              content:
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (lwsig .eq. 1 .or. lwsig .eq. 2 .or. lwsig .eq. 5) then',(940, 940),'')
                                  content:
                                    Assignment
                                      variable='ifi'
                                      sign='='
                                      expr="fopna('sigm2',-1,4)"
                                      item=Line("ifi = fopna('sigm2',-1,4)",(941, 941),'')
                                    Else
                                      item=Line('else',(942, 942),'')
                                    Assignment
                                      variable='ifi'
                                      sign='='
                                      expr="fopna('evec',-1,4)"
                                      item=Line("ifi = fopna('evec',-1,4)",(943, 943),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(944, 944),'')
                                Write
                                  item=Line('write(ifi) qp',(945, 945),'')
                                Call
                                  item=Line('call dpdump(w(oh),ndimh,-ifi)',(946, 946),'')
                                Call
                                  item=Line('call dpdump(w(os),ndimh**2*2,-ifi)',(947, 948),'')
                                ElseIf
                                  item=Line('elseif (lwsig .ne. 0) then',(949, 949),'')
                                Call
                                  item=Line("call rxi('BNDFP: band mode lwsig=',lwsig)",(950, 950),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(951, 951),'')
                            Goto
                              item=Line('goto 30',(952, 952),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(953, 960),'')
                        CommentBlock
                          item=Comment('C   ... In the noncollinear case, this marks the end of looping over\nC       separate spins.\nC       For the rest of the isp loop,\nC       jsp=isp in the collinear case; jsp=1 in the noncollinear\nC       Thus jsp should be used in place of isp\nC       isp serves as a flag for the noncollinear case',(955, 960))
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (ispc .ne. nspc) goto 30',(961, 961),'')
                          content:
                            Goto
                              item=Line('goto 30',(961, 961),'')
                        Assignment
                          variable='jsp'
                          sign='='
                          expr='isp'
                          item=Line('jsp = isp',(962, 962),'')
                        Assignment
                          variable='if(ispc .eq. 2)jsp'
                          sign='='
                          expr='1'
                          item=Line('if (ispc .eq. 2) jsp = 1',(963, 964),'')
                        Assignment
                          variable='if(i .eq. -1)lpdiag'
                          sign='='
                          expr='2'
                          item=Line('if (i .eq. -1) lpdiag = 2',(965, 970),'')
                        CommentBlock
                          item=Comment('C   ... debugging ... test of trotwf\nC   ... Diagonalize and add to density',(967, 970))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (lpdiag .eq. 0) then',(971, 971),'')
                          content:
                            Call
                              item=Line('call defcc (ot,ndimhx**2)',(972, 972),'')
                            ElseIf
                              item=Line('elseif (lpdiag .eq. 2) then',(973, 973),'')
                            Assignment
                              variable='ot'
                              sign='='
                              expr='os'
                              item=Line('ot  = os',(974, 974),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(975, 975),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (mod(iq,10) .ne. 1) call pshpr(iprint()-6)',(976, 977),'')
                          content:
                            Call
                              item=Line('call pshpr(F2PY_EXPR_TUPLE_336)',(976, 977),'')
                        Call
                          item=Line("call info5(30,0,0,' bndfp:  kpt %i of %i, k=%3:2,5;5d'//    '%?#n#   ndimh = %i##',    iq,nkp,qp,mod(pwmode/10,10),ndimh)",(978, 981),'')
                        Assignment
                          variable='nmx'
                          sign='='
                          expr='min(nevmx,ndimhx)'
                          item=Line('nmx = min(nevmx,ndimhx)',(982, 982),'')
                        Assignment
                          variable='if(lwtkb .eq. -1)nmx'
                          sign='='
                          expr='-1'
                          item=Line('if (lwtkb .eq. -1) nmx = -1',(983, 984),'')
                        CommentBlock
                          item=Comment("C       Need all eigenvalues if 'fat bands' plotting mode",(984, 984))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (nfbn(1) .gt. 0) then',(985, 985),'')
                          content:
                            Assignment
                              variable='nmx'
                              sign='='
                              expr='ndimhx'
                              item=Line('nmx = ndimhx',(986, 986),'')
                            Assignment
                              variable='efmax'
                              sign='='
                              expr='99999'
                              item=Line('efmax = 99999',(987, 987),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(988, 990),'')
                        CommentBlock
                          item=Comment('ctakao',(990, 990))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if(napw/=0.and.ncutovl/=0) then',(991, 991),'')
                          content:
                            IfThen
                              blocktype='ifthen'
                              item=Line('if(lpdiag ==1 .or. lpdiag==2) then',(992, 992),'')
                              content:
                                Stop
                                  item=Line("stop 'bndfp: lpdiag-PW mode with OVNCUT/=0 is not yet'",(993, 993),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(994, 994),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(995, 996),'')
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (lpdiag .eq. 1) then',(997, 997),'')
                          content:
                            Call
                              item=Line("call rxx(nspc.ne.1,'parallel diag not implemented for noncol')",(998, 999),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (iq .eq. 1) then',(1000, 1000),'')
                              content:
                                Call
                                  item=Line("call info0(20,0,0,' bndfp:  diagonalise with SCALALPACK ..')",(1001, 1001),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1002, 1002),'')
                            Call
                              item=Line('call pzhev(T,ndimh,oh,os,nblk,nprow,npcol,efmax,nmx,nev,               evl(1,jsp),ot)',(1003, 1004),'')
                            Assignment
                              variable='nevl'
                              sign='='
                              expr='ndimh'
                              item=Line('nevl = ndimh',(1005, 1006),'')
                            ElseIf
                              item=Line('elseif (lpdiag .eq. 2) then',(1007, 1007),'')
                            Assignment
                              variable='nev'
                              sign='='
                              expr='ndimhx'
                              item=Line('nev = ndimhx',(1008, 1008),'')
                            Assignment
                              variable='nmx'
                              sign='='
                              expr='ndimhx'
                              item=Line('nmx = ndimhx',(1009, 1009),'')
                            Assignment
                              variable='nevl'
                              sign='='
                              expr='ndimhx'
                              item=Line('nevl = ndimhx',(1010, 1010),'')
                            Call
                              item=Line('call phmbls(2,ndimhx,evl(1,jsp),w,w,w,w,w,w(oh))',(1011, 1011),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (lwtkb .ne. -1) then',(1012, 1012),'')
                              content:
                                Call
                                  item=Line('call defrr(oww,  ndimhx**2*2)',(1013, 1013),'')
                                If
                                  blocktype='if'
                                  name='__IF__'
                                  item=Line("if (ldim .ne. ndham) call        rx('blsig needs separate dim for wtkp,evec')",(1014, 1015),'')
                                  content:
                                    Call
                                      item=Line('call        rx(F2PY_EXPR_TUPLE_356)',(1014, 1015),'')
                                Call
                                  item=Line('call blsig(1+lrsig*10,nbas,sham,isp,nsp,nspc,plat,qp,        lwtkb,qval-qbg,iq,w(owtkp),w(owtkb),ndimh,w(ot),w(oww))',(1016, 1017),'')
                                Call
                                  item=Line('call rlse(oww)',(1018, 1018),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1019, 1020),'')
                            Else
                              item=Line('else',(1021, 1021),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (nspc .eq. 2) then',(1022, 1022),'')
                              content:
                                Call
                                  item=Line('call defrr(oww,  ndimhx**2)',(1023, 1023),'')
                                Call
                                  item=Line('call sopert(0,ndimh,nspc,w(oww),w(oh),w(oh))',(1024, 1024),'')
                                Call
                                  item=Line('call sopert(0,ndimh,nspc,w(oww),w(os),w(os))',(1025, 1025),'')
                                Call
                                  item=Line('call rlse(oww)',(1026, 1026),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1027, 1027),'')
                            Call
                              item=Line('call defrr(oww,  11*ndimhx)',(1028, 1030),'')
                            CommentBlock
                              item=Comment('c takao\nc          if (epsovl .eq. 0) then',(1029, 1030))
                            IfThen
                              blocktype='ifthen'
                              item=Line('if(napw == 0) then',(1031, 1031),'')
                              content:
                                Call
                                  item=Line('call zhev(ndimhx,w(oh),w(os),T,T,nmx,efmax,nev,w(oww),F,-1,        evl(1,jsp),w(ot))',(1032, 1033),'')
                                Assignment
                                  variable='nevl'
                                  sign='='
                                  expr='ndimhx'
                                  item=Line('nevl = ndimhx',(1034, 1034),'')
                                Else
                                  item=Line('else',(1035, 1035),'')
                                Assignment
                                  variable='nevl'
                                  sign='='
                                  expr='-1'
                                  item=Line('nevl = -1',(1036, 1036),'')
                                Call
                                  item=Line('call dvset(w(oww),1,1,99999d0)',(1037, 1040),'')
                                CommentBlock
                                  item=Comment('c            call zhevo(ndimhx,ndimhx,w(oh),w(os),T,nmx,efmax,epsovl,\nc     .        nevl,nev,evl(1,jsp),w(oww),ndimhx,w(ot))\nc takao version. Not in lm-7.0beta',(1038, 1040))
                                Call
                                  item=Line('call zhev_tk(ndimhx-napw,ndimhx,w(oh),w(os),nmx,epsovl,        ncutovl,nevl,nev,evl(1,jsp),w(oww),ndimhx,w(ot),iq==1)',(1041, 1042),'')
                                Assignment
                                  variable='eomin'
                                  sign='='
                                  expr='dval(w(oww),1)'
                                  item=Line('eomin = dval(w(oww),1)',(1043, 1043),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1044, 1044),'')
                            Call
                              item=Line('call rlse(oww)',(1045, 1045),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1046, 1048),'')
                        CommentBlock
                          item=Comment('C       Pad evals between ndimh and ndham with a large positive number\nC       to avoid mixing up integration routines',(1047, 1048))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (ndhamx .gt. nevl .and. nspc .eq. 2) then',(1049, 1049),'')
                          content:
                            Call
                              item=Line('call dvset(evl,1+nevl,ndhamx,99999d0)',(1050, 1050),'')
                            ElseIf
                              item=Line('elseif (ndham*nspc .gt. nevl) then',(1051, 1051),'')
                            Call
                              item=Line('call dvset(evl(1,jsp),1+nevl,ndham,99999d0)',(1052, 1052),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1053, 1054),'')
                        CommentBlock
                          item=Comment('ctakao',(1054, 1054))
                        Assignment
                          variable='nevls(iq,isp)'
                          sign='='
                          expr='nevl'
                          item=Line('nevls(iq,isp)=nevl',(1055, 1058),'')
                        CommentBlock
                          item=Comment("c        print *,'iq isp nevls=',iq,isp,nevls(iq,isp)",(1056, 1056))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (epsovl .ne. 0) then',(1059, 1059),'')
                          content:
                            Call
                              item=Line("call info5(30,0,0,' Overlap''s smallest eigenvalue: %;3g.  '//    '%?#(n>0)#H dim reduced from %i to %i#H dim not reduced#',      eomin,ndimhx-nevl,ndimhx,nevl,0)",(1060, 1062),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1063, 1063),'')
                        Call
                          item=Line('call prtev(w(ot),nevl,evl(1,jsp),nmx,efmax,nev)',(1064, 1064),'')
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (iprint() .ge. 110) then',(1065, 1065),'')
                          content:
                            Call
                              item=Line("call yprm('evals',1,evl(1,jsp),1,ndhamx,nevl,1)",(1066, 1066),'')
                            If
                              blocktype='if'
                              name='__IF__'
                              item=Line("if (nev .gt. 0) call zprm('evecs',2,w(ot),ndimhx,ndimhx,nev)",(1067, 1067),'')
                              content:
                                Call
                                  item=Line('call zprm(F2PY_EXPR_TUPLE_384)',(1067, 1067),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1068, 1069),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (mod(iq,10) .ne. 1) call poppr',(1070, 1073),'')
                          content:
                            Call
                              item=Line('call poppr',(1070, 1073),'')
                        CommentBlock
                          item=Comment('C ...  In k-parallel mode, defer this section until all qp available',(1072, 1072))
                        Assignment
                          variable='ebot'
                          sign='='
                          expr='dmin1(ebot,evl(1,jsp))'
                          item=Line('ebot = dmin1(ebot,evl(1,jsp))',(1074, 1074),'')
                        Assignment
                          variable='i'
                          sign='='
                          expr='max(1,nint(qval-qbg)/(3-nspc))'
                          item=Line('i = max(1,nint(qval-qbg)/(3-nspc))',(1075, 1075),'')
                        Assignment
                          variable='evtop'
                          sign='='
                          expr='max(evtop,evl(i,jsp))'
                          item=Line('evtop = max(evtop,evl(i,jsp))',(1076, 1076),'')
                        Assignment
                          variable='ecbot'
                          sign='='
                          expr='min(ecbot,evl(i+1,jsp))'
                          item=Line('ecbot = min(ecbot,evl(i+1,jsp))',(1077, 1077),'')
                        Assignment
                          variable='if(lmet .eq. 0 .and. iq .eq. 1 .and. jsp .eq. 1)ef0'
                          sign='='
                          expr='evtop'
                          item=Line('if (lmet .eq. 0 .and. iq .eq. 1 .and. jsp .eq. 1) ef0 = evtop',(1078, 1078),'')
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (plbnd .eq. 0) then',(1079, 1080),'')
                          content:
                            If
                              blocktype='if'
                              name='__IF__'
                              item=Line('if (ipr.ge.10 .and. iq.eq.1 .and. ipl.gt.0)  write (stdl,712) (evl(i,jsp),i=1,nev)',(1081, 1082),'')
                              content:
                                Write
                                  item=Line('write (F2PY_EXPR_TUPLE_393) (F2PY_EXPR_TUPLE_394)',(1081, 1082),'')
           712              Format
           712                item=Line("format('fp evl',8f8.4)",(1083, 1084),'712')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (lwtkb .ne. -1 .and. .not.lwndow) then',(1085, 1085),'')
                              content:
                                IfThen
                                  blocktype='ifthen'
                                  item=Line("if (iq .eq. 1 .and. jsp .eq. nsp .and.      .not. cmdopt('--no-fixef0',11,0,strn)) then",(1086, 1087),'')
                                  content:
                                    Assignment
                                      variable='ef00'
                                      sign='='
                                      expr='ef0'
                                      item=Line('ef00 = ef0',(1088, 1088),'')
                                    Call
                                      item=Line('call fixef0(qval-qbg,jsp,1,nevl,ndham,evl,dosw,ef0)',(1089, 1089),'')
                                    IfThen
                                      blocktype='ifthen'
                                      item=Line('if (jsp .eq. 2 .and. ef00 .ne. ef0 .and.        lwtkb .eq. 0 .and. lmet .gt. 0 .and. lrout .ne. 0) then',(1090, 1091),'')
                                      content:
                                        If
                                          blocktype='if'
                                          name='__IF__'
                                          item=Line("if (procid .eq. master)          call info0(10,1,1,          ' ... Fermi level reset in second spin'//          ' channel ... restart band pass')",(1092, 1095),'')
                                          content:
                                            Call
                                              item=Line('call info0(F2PY_EXPR_TUPLE_401)',(1092, 1095),'')
                                        Goto
                                          item=Line('goto 99',(1096, 1096),'')
                                    EndIfThen
                                      blocktype='if'
                                      item=Line('endif',(1097, 1097),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(1098, 1099),'')
                                CommentBlock
                                  item=Comment('C         Check for cases when nevmx is too small : i=2 => fatal error',(1099, 1099))
                                Assignment
                                  variable='i'
                                  sign='='
                                  expr='0'
                                  item=Line('i = 0',(1100, 1100),'')
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (nevmx.ge.0 .and. lmet .ne. 0) then',(1101, 1101),'')
                                  content:
                                    Assignment
                                      variable='dum'
                                      sign='='
                                      expr='evl(max(nev,1),jsp)'
                                      item=Line('dum = evl(max(nev,1),jsp)',(1102, 1103),'')
                                    CommentBlock
                                      item=Comment('C           if (ef0 .ge. dum) i = 2',(1103, 1103))
                                    Assignment
                                      variable='if(.not. ltet .and. ef0+5*dabs(esmear-mpsord) .gt. dum)i'
                                      sign='='
                                      expr='2'
                                      item=Line('if (.not. ltet .and. ef0+5*dabs(esmear-mpsord) .gt. dum) i=2',(1104, 1104),'')
                                    Assignment
                                      variable='if(lmet.eq.4 .and. ef0+def+5*dabs(esmear-mpsord).gt.dum)i'
                                      sign='='
                                      expr='2'
                                      item=Line('if (lmet.eq.4 .and. ef0+def+5*dabs(esmear-mpsord).gt.dum)i=2',(1105, 1105),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(1106, 1106),'')
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (i .eq. 2) then',(1107, 1107),'')
                                  content:
                                    If
                                      blocktype='if'
                                      name='__IF__'
                                      item=Line("if (iprint() .gt. 0)        call awrit3('%N evl(nev=%i)=%;3d but '//        'ef0=%;3d ... restart with larger efmax or nevmx',        ' ',80,stdo,nev,evl(max(nev,1),jsp),ef0)",(1108, 1111),'')
                                      content:
                                        Call
                                          item=Line('call awrit3(F2PY_EXPR_TUPLE_408)',(1108, 1111),'')
                                    Call
                                      item=Line("call rx('bndfp')",(1112, 1112),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(1113, 1113),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1114, 1114),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1115, 1119),'')
                        CommentBlock
                          item=Comment('c##### !MPIK\nC   ... Save data for this qp to moments file',(1117, 1119))
                        IfThen
                          blocktype='ifthen'
                          item=Line('if (plbnd .eq. 0) then',(1120, 1121),'')
                          content:
                            CommentBlock
                              item=Comment('C   ... Copy eigenvalues into array containing ev for all qp',(1121, 1121))
                            Call
                              item=Line('call dpscop(evl(1,jsp),w(oevl),ndhamx,              1,1+ndham*(jsp-1+isqp),1d0)',(1122, 1129),'')
                            CommentBlock
                              item=Comment("C        call prmx('ev',w(oevl),ndham,ndham,isqp+2)\nC        call prmx('ev',w(oevl),ndham,ndham,nkp*nsp)\nC   --- Orbital magnetic moment (requires lso) ---",(1126, 1129))
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (lso .ne. 0 .and. lwtkb .ne. -1) then',(1130, 1130),'')
                              content:
                                If
                                  blocktype='if'
                                  name='__IF__'
                                  item=Line("if (lwtkb .eq. 0) call      rx('metal weights required for orb. moment calculation')",(1131, 1132),'')
                                  content:
                                    Call
                                      item=Line('call      rx(F2PY_EXPR_TUPLE_416)',(1131, 1132),'')
                                Call
                                  item=Line('call defcc(oauso,-nlmax*ndhamx*3*nsp*nbas)',(1133, 1133),'')
                                Call
                                  item=Line('call makusq(0,ssite,sspec,slat,sham,nbas,nbas,0,nlmax,ndham,      ndimh,napw,w(oigv2),nev,nsp,nspc,jsp,1,qp,w(ot),w(oppnl),      w(oauso))',(1134, 1136),'')
                                Call
                                  item=Line('call mkorbm(ssite,sspec,jsp,nsp,nspc,nlmax,ndham,nev,w(owtkb),      iq,nbas,w(oppnl),w(oauso),nl,nkp,w(oorbtm))',(1137, 1138),'')
                                Call
                                  item=Line('call rlse(oauso)',(1139, 1139),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1140, 1142),'')
                            CommentBlock
                              item=Comment('C   --- Mulliken analysis and partial DOS ---',(1142, 1142))
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (lwtkb .ne. -1) then',(1143, 1143),'')
                              content:
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (procid .eq. master) then',(1144, 1144),'')
                                  content:
                                    IfThen
                                      blocktype='ifthen'
                                      item=Line("if (cmdopt('--mull',6,0,strn)) then",(1145, 1146),'')
                                      content:
                                        Call
                                          item=Line("call rxx(nev.ne.ndimhx,'Mulliken requires all eigenvectors')",(1147, 1147),'')
                                        Call
                                          item=Line("call rxx(nevmx.ne.ndhamx,'Mulliken requires nevmx=nhdamx')",(1148, 1148),'')
                                        Call
                                          item=Line('call defrr(odoswt,-nchan*nevmx*nspc)',(1149, 1149),'')
                                        Call
                                          item=Line("call upack('ham oindxo',sham,oiprmb,0,0,0,0)",(1150, 1150),'')
                                        Call
                                          item=Line('call mullmf(nbas,ssite,sspec,w(oiprmb),w(ot),ndimh,nspc,                iq,jsp,moddos,nsites,lsites,lmxch,nchan,w(ochan),                lmdim,ndham,w(odoswt))',(1151, 1153),'')
                                        Call
                                          item=Line('call iomomn(.true.,2,.false.,1,nspc,1,1,i)',(1154, 1154),'')
                                        Assignment
                                          variable='i1'
                                          sign='='
                                          expr='iomoms(-nfilem,nl,nsp,nspc,nkp,ndimh,i,nspc,1,1,ndhamx,      nevmx,nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,0d0,0d0)'
                                          item=Line('i1 = iomoms(-nfilem,nl,nsp,nspc,nkp,ndimh,i,nspc,1,1,ndhamx,      nevmx,nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,0d0,0d0)',(1155, 1156),'')
                                        Call
                                          item=Line('call rlse(odoswt)',(1157, 1157),'')
                                        ElseIf
                                          item=Line("elseif (cmdopt('--pdos',6,0,strn)) then",(1158, 1159),'')
                                        Call
                                          item=Line("call rxx(nspc.ne.1,'pdos not implemented in noncoll case')",(1160, 1160),'')
                                        Assignment
                                          variable='i'
                                          sign='='
                                          expr='nlmax*ndham*3*nsp*nbas'
                                          item=Line('i = nlmax*ndham*3*nsp*nbas',(1161, 1161),'')
                                        Call
                                          item=Line('call defcc(oausp,-i)',(1162, 1162),'')
                                        Call
                                          item=Line('call makusq(1,ssite,sspec,slat,sham,nbas,nbas,0,nlmax,ndham,      ndimh,napw,w(oigv2),nev,nsp,nspc,jsp,1,qp,w(ot),w(oppnl),      w(oausp))',(1163, 1165),'')
                                        Call
                                          item=Line('call defrr(odoswt,-nchan*ndimhx*nspc)',(1166, 1166),'')
                                        Call
                                          item=Line('call mkpdos(moddos,ssite,sspec,jsp,nsp,nlmax,ndham,nev,      nchan,1,lsites,nsites,w(oppnl),w(oausp),w(odoswt))',(1167, 1168),'')
                                        Call
                                          item=Line('call iomomn(.true.,2,.false.,1,nspc,1,1,i)',(1169, 1170),'')
                                        Assignment
                                          variable='i1'
                                          sign='='
                                          expr='iomoms(-nfilem,nl,nsp,nspc,2,ndimh,i,1,1,1,ndham,ndimh,      nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,0d0,0d0)'
                                          item=Line('i1 = iomoms(-nfilem,nl,nsp,nspc,2,ndimh,i,1,1,1,ndham,ndimh,      nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,0d0,0d0)',(1171, 1173),'')
                                        Call
                                          item=Line('call rlse(odoswt)',(1174, 1174),'')
                                        Call
                                          item=Line('call rlse(oausp)',(1175, 1175),'')
                                        ElseIf
                                          item=Line('elseif (nfilem .gt. 0) then',(1176, 1176),'')
                                        Write
                                          item=Line('write (nfilem) 0, ndimhx',(1177, 1177),'')
                                        Call
                                          item=Line('call dpdump(evl(1,jsp),ndimhx,-nfilem)',(1178, 1178),'')
                                    EndIfThen
                                      blocktype='if'
                                      item=Line('endif',(1179, 1179),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(1180, 1182),'')
                                CommentBlock
                                  item=Comment('C   ... Make new density matrix dmatu for LDA+U',(1182, 1182))
                                IfThen
                                  blocktype='ifthen'
                                  item=Line('if (nlibu .gt. 0 .and. nev .gt. 0) then',(1183, 1183),'')
                                  content:
                                    If
                                      blocktype='if'
                                      name='__IF__'
                                      item=Line("if (lwtkb .eq. 0)      call rx('metal weights required for LDA+U calculation')",(1184, 1185),'')
                                      content:
                                        Call
                                          item=Line('call rx(F2PY_EXPR_TUPLE_443)',(1184, 1185),'')
                                    Assignment
                                      variable='nl'
                                      sign='='
                                      expr="igets('ctrl nl',sctrl)"
                                      item=Line("nl = igets('ctrl nl',sctrl)",(1186, 1186),'')
                                    Assignment
                                      variable='nlmax'
                                      sign='='
                                      expr='nl*nl'
                                      item=Line('nlmax = nl*nl',(1187, 1187),'')
                                    Call
                                      item=Line('call defrr(oausu,-2*nlmax*ndhamx*3*nsp*nbas)',(1188, 1188),'')
                                    Call
                                      item=Line('call makusq(0,ssite,sspec,slat,sham,nbas,nbas,0,nlmax,ndham,      ndimh,napw,w(oigv2),nev,nsp,nspc,jsp,1,qp,w(ot),w(oppnl),      w(oausu))',(1189, 1191),'')
                                    Call
                                      item=Line('call mkdmtu(ssite,sspec,w(owtkb),jsp,iq,nsp,nspc,ndham,nlmax,      nbas,nev,w(oppnl),w(oausu),dmatu,nlibu,lmaxu,lldau)',(1192, 1193),'')
                                    Call
                                      item=Line('call rlse(oausu)',(1194, 1194),'')
                                EndIfThen
                                  blocktype='if'
                                  item=Line('endif',(1195, 1195),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1196, 1198),'')
                            CommentBlock
                              item=Comment('C   ... for core-level spectroscopy',(1198, 1198))
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (icls .ne. 0 .and. lwtkb .ne. -1) then',(1199, 1199),'')
                              content:
                                Call
                                  item=Line("call rxx(nspc.ne.1,'CLS not implemented in noncoll case')",(1200, 1201),'')
                                Call
                                  item=Line('call makusq(0,ssite,sspec,slat,sham,nbas,nsites,isite,nlmax,      ndham,ndimh,napw,w(oigv2),nev,nsp,nspc,jsp,iq,qp,w(ot),      w(oppnl),w(oausc))',(1202, 1207),'')
                                CommentBlock
                                  item=Comment('C       Accumulate output density and sampling DOS\nC       Even if no output rho, still call addrbl to make DOS when lmet=4',(1206, 1207))
                                ElseIf
                                  item=Line('elseif (lwtkb.ne.-1 .and. (lrout.ne.0 .or. lmet.eq.4)) then',(1208, 1209),'')
                                CommentBlock
                                  item=Comment('C         dum=frc(3,1)',(1209, 1209))
                                Call
                                  item=Line('call addrbl(ssite,sspec,slat,sham,jsp,nsp,nspc,qp,w(owtkp),      ndham,ndimh,napw,w(oigv2),lmet,lrout,lwtkb,w(owtkb),lswtk,      w(oswtk),iq,lfrce,ldos,lekkl,k1,k2,k3,w(osmpot),vconst,osig,      otau,oppi,lcplxp,numq,qval-qbg,w(ot),evl,nevl,ef0,def,      esmear,emin,emax,ndos,w(odos),w(osrout),sumqv,sumev,oqkkl,      oeqkkl,frc)',(1210, 1217),'')
                                CommentBlock
                                  item=Comment("C          print 399,iq,frc(3,1),frc(3,1)-dum\nC  399     format(' after addrbl: frc(3,1)=',i4,2f12.6)",(1216, 1217))
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1218, 1219),'')
                            ElseIf
                              item=Line('elseif (plbnd .ne. 0) then',(1220, 1220),'')
                            Assignment
                              variable='i'
                              sign='='
                              expr='nsp'
                              item=Line('i = nsp',(1221, 1221),'')
                            Assignment
                              variable='if(onesp .ne. 0 .or. nspc .eq. 2)i'
                              sign='='
                              expr='1'
                              item=Line('if (onesp .ne. 0 .or. nspc .eq. 2) i = 1',(1222, 1222),'')
                            Call
                              item=Line('call suqlsw(nevl,jsp,i,evl(1,jsp))',(1223, 1223),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (nfbn(1) .ne. 0) then',(1224, 1224),'')
                              content:
                                If
                                  blocktype='if'
                                  name='__IF__'
                                  item=Line("if (ndimhx .ne. nevl)        call rx('color weights not implemented when '//        'nevl < hamiltonian dimension')",(1225, 1227),'')
                                  content:
                                    Call
                                      item=Line('call rx(F2PY_EXPR_TUPLE_459)',(1225, 1227),'')
                                Call
                                  item=Line('call suqlse(ndimhx,jsp,i,ndimhx,1,nfbn,w(oifbls),ndhamx,        w(ot),evl)',(1228, 1229),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1230, 1230),'')
                            IfThen
                              blocktype='ifthen'
                              item=Line('if (nfbn(2) .ne. 0) then',(1231, 1231),'')
                              content:
                                If
                                  blocktype='if'
                                  name='__IF__'
                                  item=Line("if (ndimhx .ne. nevl)        call rx('color weights not implemented when '//        'nevl < hamiltonian dimension')",(1232, 1234),'')
                                  content:
                                    Call
                                      item=Line('call rx(F2PY_EXPR_TUPLE_463)',(1232, 1234),'')
                                Call
                                  item=Line('call suqlse(ndimhx,jsp,i,ndimhx,2,nfbn,w(oifbls),ndhamx,        w(ot),evl)',(1235, 1236),'')
                            EndIfThen
                              blocktype='if'
                              item=Line('endif',(1237, 1239),'')
                        EndIfThen
                          blocktype='if'
                          item=Line('endif',(1240, 1241),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (ot .ne. os) call rlse(ot)',(1242, 1244),'')
                          content:
                            Call
                              item=Line('call rlse(ot)',(1242, 1244),'')
                        CommentBlock
                          item=Comment('C end loop over isp (main loop in parallel mode)',(1244, 1244))
         30             Continue
         30               item=Line('continue',(1245, 1245),'30')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(1246, 1246),'')
                EndDo
                  blocktype='do'
                  item=Line('enddo',(1247, 1247),'')
                Call
                  item=Line('call rlse(oh)',(1248, 1249),'')
                CommentBlock
                  item=Comment('C end loop over iq (main loop in parallel mode)',(1249, 1249))
            EndDo
              blocktype='do'
              item=Line('enddo',(1250, 1259),'')
            CommentBlock
              item=Comment('cccccccccccccccccccccccccc\nctakaox\nc      call fclose(ifio)\ncccccccccccccccccccccccccc\nC Second pass over iq for second spin when writing sigma',(1252, 1259))
            IfThen
              blocktype='ifthen'
              item=Line('if (lwsig .ne. 0) then',(1260, 1260),'')
              content:
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (onesp .lt. nsp) goto 50',(1261, 1261),'')
                  content:
                    Goto
                      item=Line('goto 50',(1261, 1261),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lwsig .eq. 1 .or. lwsig .eq. 2 .or. lwsig .eq. 5) then',(1262, 1262),'')
                  content:
                    Assignment
                      variable='ifi'
                      sign='='
                      expr="fopna('sigm2',-1,4)"
                      item=Line("ifi = fopna('sigm2',-1,4)",(1263, 1263),'')
                    Call
                      item=Line('call fclose(ifi)',(1264, 1264),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (lwsig .eq. 5)    call rx0('BNDFP:  sigm(orb basis) saved in file sigm2')",(1265, 1266),'')
                      content:
                        Call
                          item=Line('call rx0(F2PY_EXPR_TUPLE_471)',(1265, 1266),'')
                    Call
                      item=Line("call rx0('BNDFP:  sigm(LDA basis) saved in file sigm2')",(1267, 1267),'')
                    ElseIf
                      item=Line('else if (lwsig .eq. 3 .or. lwsig .eq. 4) then',(1268, 1268),'')
                    Assignment
                      variable='ifi'
                      sign='='
                      expr="fopna('evec',-1,4)"
                      item=Line("ifi = fopna('evec',-1,4)",(1269, 1269),'')
                    Call
                      item=Line('call fclose(ifi)',(1270, 1270),'')
                    Call
                      item=Line("call rx0('BNDFP:  LDA evecs saved in file evec')",(1271, 1271),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1272, 1283),'')
                CommentBlock
                  item=Comment("C        if (lwsig .eq. -1) then\nC        ifi = fopna('sigm3',-1,4)\nC        call fclose(ifi)\nC        call rx0('BNDFP:  sigm(orbital basis) saved in file sigm3')\nC        endif\nC        if (lwsig .eq. 3) then\nC        call rx0('BNDFP:  U(LDA-QP) saved in file sigm2')\nC        endif\nC        if (lwsig .eq. 4) then\nC        call rx0('BNDFP:  H(QP) saved in file sigm2')\nC        endif",(1273, 1283))
            EndIfThen
              blocktype='if'
              item=Line('endif',(1284, 1287),'')
            CommentBlock
              item=Comment('C ... Set switch to write file sigii',(1286, 1286))
            IfThen
              blocktype='ifthen'
              item=Line('if (lrsig .ne. 0 .and. plbnd .eq. 0 .and. procid .eq. master) then',(1288, 1288),'')
              content:
                Call
                  item=Line("call upack1('ham sigp',sham,sigp)",(1289, 1289),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (mpipid(0) .le. 1) call phmbl3(12,0,nsmidb,0,0,sigp,qp,qp(2))',(1290, 1290),'')
                  content:
                    Call
                      item=Line('call phmbl3(F2PY_EXPR_TUPLE_479)',(1290, 1290),'')
                Call
                  item=Line("call fclose(fopna('sigii',-1,0))",(1291, 1291),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1292, 1298),'')
            CommentBlock
              item=Comment("C --- Second loop over qp, needed to make k-parallelisation possible: ---\nC     You can't do this until you have all the evals.\nctakao",(1295, 1298))
            Deallocate
              item=Line('deallocate(nevls)',(1299, 1303),'')
            CommentBlock
              item=Comment('c###### second loop over qp (parallel k-points mode)\nC     For now, SO by site, not by class',(1301, 1303))
            IfThen
              blocktype='ifthen'
              item=Line('if (lwtkb .eq. 1 .and. lso .ne. 0) then',(1304, 1304),'')
              content:
                Call
                  item=Line('call defi(oips,nbas)',(1305, 1305),'')
                Call
                  item=Line("call spackv(10,'site spec',ssite,1,nbas,w(oips))",(1306, 1306),'')
                Call
                  item=Line('call iorbtm(sspec,w(oips),nl,nl,nbas,nsp,w(oorbtm))',(1307, 1307),'')
                Call
                  item=Line('call rlse(oips)',(1308, 1308),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1309, 1311),'')
            CommentBlock
              item=Comment('C ... Case generating bands: find next block of qp',(1311, 1311))
            If
              blocktype='if'
              name='__IF__'
              item=Line('if (plbnd .ne. 0) goto 99',(1312, 1313),'')
              content:
                Goto
                  item=Line('goto 99',(1312, 1313),'')
            If
              blocktype='if'
              name='__IF__'
              item=Line('if (ipl.gt.0) write (stdl,715) nkp,ebot,qval,qbg,esmear',(1314, 1314),'')
              content:
                Write
                  item=Line('write (F2PY_EXPR_TUPLE_488) nkp,ebot,qval,qbg,esmear',(1314, 1314),'')
   715      Format
   715        item=Line("format('nv nkp',i5,'  ebot',f9.4,'   qval',f10.4,'  qbg',f8.4,   '  smr',f8.4)",(1315, 1321),'715')
            CommentBlock
              item=Comment("C ... End of k point loop\nC     call zprm3('smrho after k-point loop',0,w(osrout),k1,k2,k3)\nC --- Interpolate density to Fermi energy ---",(1317, 1321))
            Assignment
              variable='sev'
              sign='='
              expr='sumev(1,1)'
              item=Line('sev = sumev(1,1)',(1322, 1322),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lmet .eq. 4) then',(1323, 1323),'')
              content:
                Call
                  item=Line('call mshn3p(nbas,ssite,sspec,lmet,lrout,lfrce,qval-qbg,ef0,def,    sumqv,sumev,n1,n2,n3,k1,k2,k3,w(osrout),oqkkl,frc,lrep)',(1324, 1326),'')
                CommentBlock
                  item=Comment('C   ... Store val q & magnetic moment in sumqv(1) and sumqv(2)',(1326, 1326))
                Assignment
                  variable='sumqv(2,1)'
                  sign='='
                  expr='sumqv(1,1) - sumqv(1,2)'
                  item=Line('sumqv(2,1) = sumqv(1,1) - sumqv(1,2)',(1327, 1327),'')
                Assignment
                  variable='sumqv(1,1)'
                  sign='='
                  expr='sumqv(1,1) + sumqv(1,2)'
                  item=Line('sumqv(1,1) = sumqv(1,1) + sumqv(1,2)',(1328, 1329),'')
                CommentBlock
                  item=Comment('C   ... Eigenvalue sum including entropy term',(1329, 1329))
                Assignment
                  variable='sev'
                  sign='='
                  expr='sumev(1,1) + sumev(2,1)'
                  item=Line('sev = sumev(1,1) + sumev(2,1)',(1330, 1331),'')
                CommentBlock
                  item=Comment('C   ... Remake sev,ef linearly interpolating tabulated sampling DOS',(1331, 1331))
                Assignment
                  variable='sev00'
                  sign='='
                  expr='sev'
                  item=Line('sev00 = sev',(1332, 1332),'')
                Assignment
                  variable='ef00'
                  sign='='
                  expr='ef0'
                  item=Line('ef00  = ef0',(1333, 1333),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (ldos .ne. 0) then',(1334, 1334),'')
                  content:
                    Call
                      item=Line('call efldos(qval,nsp,emin,emax,ndos,w(odos),eferm,sev1)',(1335, 1335),'')
                    Assignment
                      variable='sev'
                      sign='='
                      expr='sev1'
                      item=Line('sev   = sev1',(1336, 1336),'')
                    Assignment
                      variable='ef0'
                      sign='='
                      expr='eferm'
                      item=Line('ef0  = eferm',(1337, 1337),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1338, 1338),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (ipr .gt. 30 .and. ldos .ne. 0)  write(stdo,388) sev00,ef00,sev1,eferm,sev,ef0',(1339, 1340),'')
                  content:
                    Write
                      item=Line('write(F2PY_EXPR_TUPLE_504) sev00,ef00,sev1,eferm,sev,ef0',(1339, 1340),'')
     388        Format
     388          item=Line("format(' ipol:  sev=',f12.6,'   ef=',f12.6:/         ' dos:   sev=',f12.6,'   ef=',f12.6/         ' use:   sev=',f12.6,'   ef=',f12.6)",(1341, 1343),'388')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (ipl.gt.0) write (stdl,733) ef00,eferm,ef0,sev00,sev1,sev',(1344, 1344),'')
                  content:
                    Write
                      item=Line('write (F2PY_EXPR_TUPLE_507) ef00,eferm,ef0,sev00,sev1,sev',(1344, 1344),'')
     733        Format
     733          item=Line("format('nf EF:',3f9.5,'    EB:',3f12.5)",(1345, 1345),'733')
                Call
                  item=Line("call pack5('bz ndos dosw ef def',sbz,ndos,dosw,ef0,def,0)",(1346, 1346),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lrep .eq. 1) then',(1347, 1347),'')
                  content:
                    Assignment
                      variable='ef0'
                      sign='='
                      expr='-1'
                      item=Line('ef0 = -1',(1348, 1348),'')
                    Call
                      item=Line("call awrit0('Input Fermi energy was too far off, '//      'repeat band pass',' ',80,stdo)",(1349, 1350),'')
                    Goto
                      item=Line('goto 99',(1351, 1351),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1352, 1352),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1353, 1355),'')
            CommentBlock
              item=Comment('C --- BZ integration for fermi level, band sum and qp weights ---',(1355, 1355))
            IfThen
              blocktype='ifthen'
              item=Line('if (lmet .ge. 0 .and. (lmet .ne. 4 .or. ltet)) then',(1356, 1356),'')
              content:
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lwndow) then',(1357, 1357),'')
                  content:
                    Call
                      item=Line('call defrr(oww,ndham*nsp*nkp)',(1358, 1358),'')
                    Assignment
                      variable='eferm'
                      sign='='
                      expr='min(dosw(1),dosw(2))'
                      item=Line('eferm = min(dosw(1),dosw(2))',(1359, 1359),'')
                    Call
                      item=Line('call bzints(nkabc(1),nkabc(2),nkabc(3),w(oevl),w(oww),nkp,      ndham,ndham,nsp,xv,xv,xv,1,eferm,2,ntet,w(oidtet),sev,dum)',(1360, 1362),'')
                    CommentBlock
                      item=Comment("C         call prmx('w(min)',w(oww),ndham,ndham,nkp*nsp)",(1362, 1362))
                    Assignment
                      variable='eferm'
                      sign='='
                      expr='max(dosw(1),dosw(2))'
                      item=Line('eferm = max(dosw(1),dosw(2))',(1363, 1363),'')
                    Call
                      item=Line('call bzints(nkabc(1),nkabc(2),nkabc(3),w(oevl),w(owtkb),nkp,      ndham,ndham,nsp,xv,xv,xv,1,eferm,2,ntet,w(oidtet),sev,dum)',(1364, 1366),'')
                    CommentBlock
                      item=Comment("C         call prmx('w(max)',w(owtkb),ndham,ndham,nkp*nsp)",(1366, 1366))
                    Call
                      item=Line('call daxpy(ndham*nsp*nkp,-1d0,w(oww),1,w(owtkb),1)',(1367, 1368),'')
                    CommentBlock
                      item=Comment("C         call prmx('w',w(owtkb),ndham,ndham,nkp*nsp)",(1368, 1368))
                    Call
                      item=Line('call rlse(oww)',(1369, 1369),'')
                    Else
                      item=Line('else',(1370, 1370),'')
                    Assignment
                      variable='dosrng'
                      sign='='
                      expr='8'
                      item=Line('dosrng = 8',(1371, 1371),'')
                    Assignment
                      variable='if(mpsord .lt. 0)dosrng'
                      sign='='
                      expr='16'
                      item=Line('if (mpsord .lt. 0) dosrng = 16',(1372, 1372),'')
                    Call
                      item=Line('call bzwtsf(ndham,ndham,nsp,nspc,nkabc(1),nkabc(2),nkabc(3),      nkp,ntet,w(oidtet),qval-qbg,fsmom,lmet.ne.0,ltet,mpsord,      ndos,dabs(esmear-mpsord),dosrng,w(owtkp),w(oevl),efmax,      lswtk,w(oswtk),eferm,sev,w(owtkb),sumqv(1,2),lwtkb)',(1373, 1377),'')
                    CommentBlock
                      item=Comment('C         Store val charge & magnetic moment in sumqv(1..2)',(1377, 1377))
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (lmet .ne. 4) then',(1378, 1378),'')
                      content:
                        Assignment
                          variable='sumqv(1,1)'
                          sign='='
                          expr='sumqv(1,2)'
                          item=Line('sumqv(1,1) = sumqv(1,2)',(1379, 1379),'')
                        Assignment
                          variable='sumqv(2,1)'
                          sign='='
                          expr='sumqv(2,2)'
                          item=Line('sumqv(2,1) = sumqv(2,2)',(1380, 1380),'')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(1381, 1381),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1382, 1382),'')
                Assignment
                  variable='if(lmet .ne. 4)ef0'
                  sign='='
                  expr='eferm'
                  item=Line('if (lmet .ne. 4) ef0 = eferm',(1383, 1383),'')
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line("if (lmet .ne. 4) call pack1('bz ef',sbz,ef0)",(1384, 1384),'')
                  content:
                    Call
                      item=Line('call pack1(F2PY_EXPR_TUPLE_530)',(1384, 1384),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lmet .gt. 0) then',(1385, 1385),'')
                  content:
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (procid .eq. master) then',(1386, 1386),'')
                      content:
                        Assignment
                          variable='ifi'
                          sign='='
                          expr="fopna('wkp',-1,4)"
                          item=Line("ifi = fopna('wkp',-1,4)",(1387, 1387),'')
                        Assignment
                          variable='i'
                          sign='='
                          expr='iobzwt(0,ndhamx,nkp,nspx,eferm,w(owtkb),-ifi)'
                          item=Line('i = iobzwt(0,ndhamx,nkp,nspx,eferm,w(owtkb),-ifi)',(1388, 1388),'')
                        Call
                          item=Line("call fclr('wkp',ifi)",(1389, 1389),'')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(1390, 1390),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1391, 1391),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lwtkb .eq. -1 .and. lrout .gt. 0) then',(1392, 1392),'')
                  content:
                    Call
                      item=Line("call info0(20,0,0,' Start second band pass ...')",(1393, 1393),'')
                    Assignment
                      variable='lwtkb'
                      sign='='
                      expr='1'
                      item=Line('lwtkb = 1',(1394, 1394),'')
                    Assignment
                      variable='if(nspc .eq. 2)lswtk'
                      sign='='
                      expr='1'
                      item=Line('if (nspc .eq. 2) lswtk = 1',(1395, 1395),'')
                    Goto
                      item=Line('goto 99',(1396, 1396),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1397, 1397),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lwtkb .eq. 2 .and. lrout .gt. 0) then',(1398, 1398),'')
                  content:
                    Call
                      item=Line("call info0(20,0,0,' New pass with constrained weights ...')",(1399, 1399),'')
                    Goto
                      item=Line('goto 99',(1400, 1400),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1401, 1401),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1402, 1404),'')
            CommentBlock
              item=Comment('C ... Save Fermi level, nonmetal or sampling integration',(1404, 1404))
            IfThen
              blocktype='ifthen'
              item=Line('if (lmet .eq. 0 .or. .not. (lmet .ne. 4 .or. ltet)) then',(1405, 1405),'')
              content:
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lmet .eq. 0) then',(1406, 1406),'')
                  content:
                    Assignment
                      variable='ef0'
                      sign='='
                      expr='(evtop+ecbot)/2'
                      item=Line('ef0 = (evtop+ecbot)/2',(1407, 1407),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (ipr .ge. 20) call awrit3(' Highest occ. level = %,5;5d '//      ' Lowest unocc. = %,5;5d  average = %,5;5d',' ',80,      stdo,evtop,ecbot,ef0)",(1408, 1410),'')
                      content:
                        Call
                          item=Line('call awrit3(F2PY_EXPR_TUPLE_545)',(1408, 1410),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1411, 1411),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (procid .eq. master) then',(1412, 1412),'')
                  content:
                    Assignment
                      variable='ifi'
                      sign='='
                      expr="fopna('wkp',-1,4)"
                      item=Line("ifi = fopna('wkp',-1,4)",(1413, 1413),'')
                    Assignment
                      variable='i'
                      sign='='
                      expr='iobzwt(1,ndham,nkp,nsp,ef0,w(owtkb),-ifi)'
                      item=Line('i = iobzwt(1,ndham,nkp,nsp,ef0,w(owtkb),-ifi)',(1414, 1414),'')
                    Call
                      item=Line("call fclr('wkp',ifi)",(1415, 1415),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1416, 1416),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1417, 1419),'')
            CommentBlock
              item=Comment('C ... Cleanup asa-style moments file, print table of DOS channels',(1419, 1419))
            IfThen
              blocktype='ifthen'
              item=Line('if (nfilem .gt. 0) then',(1420, 1420),'')
              content:
                Assignment
                  variable='i'
                  sign='='
                  expr='iomoms(-nfilem,nl,nsp,nspc,nkp,ndimh,11,1,nkp*nsp+1,1,    ndham,ndimh,nchan,nchan,ndimh,0d0,0d0,0d0,0d0,eferm,0d0)'
                  item=Line('i = iomoms(-nfilem,nl,nsp,nspc,nkp,ndimh,11,1,nkp*nsp+1,1,    ndham,ndimh,nchan,nchan,ndimh,0d0,0d0,0d0,0d0,eferm,0d0)',(1421, 1422),'')
                Call
                  item=Line('call fclose(nfilem)',(1423, 1423),'')
                IfThen
                  blocktype='ifthen'
                  item=Line("if (iprint() .ge. 10 .and. cmdopt('--mull',6,0,strn)) then",(1424, 1424),'')
                  content:
                    Call
                      item=Line('call mchan(lmdim,ssite,sspec,nsp,nsites,lsites,0,0,0,0,               w(ochan))',(1425, 1426),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1427, 1427),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1428, 1430),'')
            CommentBlock
              item=Comment('C ... Average forces so net force on system is zero (APW case)',(1430, 1430))
            IfThen
              blocktype='ifthen'
              item=Line('if (lfrce .ne. 0 .and. napw .ne. 0) then',(1431, 1431),'')
              content:
                Call
                  item=Line('call dpzero(xv,3)',(1432, 1432),'')
                Do
                  blocktype='do'
                  item=Line('do  i1 = 1, nbas',(1433, 1433),'')
                  content:
                    Do
                      blocktype='do'
                      item=Line('do  i = 1, 3',(1434, 1434),'')
                      content:
                        Assignment
                          variable='xv(i)'
                          sign='='
                          expr='xv(i) + frc(i,i1)/nbas'
                          item=Line('xv(i) = xv(i) + frc(i,i1)/nbas',(1435, 1435),'')
                    EndDo
                      blocktype='do'
                      item=Line('enddo',(1436, 1436),'')
                EndDo
                  blocktype='do'
                  item=Line('enddo',(1437, 1437),'')
                Do
                  blocktype='do'
                  item=Line('do  i1 = 1, nbas',(1438, 1438),'')
                  content:
                    Do
                      blocktype='do'
                      item=Line('do  i = 1, 3',(1439, 1439),'')
                      content:
                        Assignment
                          variable='frc(i,i1)'
                          sign='='
                          expr='frc(i,i1) - xv(i)'
                          item=Line('frc(i,i1) = frc(i,i1) - xv(i)',(1440, 1440),'')
                    EndDo
                      blocktype='do'
                      item=Line('enddo',(1441, 1441),'')
                EndDo
                  blocktype='do'
                  item=Line('enddo',(1442, 1442),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1443, 1445),'')
            CommentBlock
              item=Comment('C --- Generate DOS on disk ---',(1445, 1445))
            IfThen
              blocktype='ifthen'
              item=Line('if (.not. lwndow) then',(1446, 1446),'')
              content:
                Call
                  item=Line("call upack('bz ndos',sbz,ndos0,0,0,0,0)",(1447, 1447),'')
                IfThen
                  blocktype='ifthen'
                  item=Line("if (lgors('ctrl ldos,1',sctrl)) then",(1448, 1448),'')
                  content:
                    Call
                      item=Line('call defdr(odos,3*ndos)',(1449, 1449),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line("if (iprint() .ge. 30) call awrit1('%x%N ... Generating %?#n<0#'    //'integrated#total# DOS',' ',80,lgunit(1),ndos0)",(1450, 1451),'')
                      content:
                        Call
                          item=Line('call awrit1(F2PY_EXPR_TUPLE_564)',(1450, 1451),'')
                    IfThen
                      blocktype='ifthen'
                      item=Line('if (ltet) then',(1452, 1452),'')
                      content:
                        Call
                          item=Line('call bzints(nkabc(1),nkabc(2),nkabc(3),w(oevl),dum,nkp,ndhamx,      ndhamx,nspx,dosw(1),dosw(2),w(odos),ndos,eferm,1,ntet,      w(oidtet),dum,dum)',(1453, 1455),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (ndos0 .gt. 0)      call xxxdif(dosw(1),dosw(2),ndos,nspx,0,w(odos))',(1456, 1457),'')
                          content:
                            Call
                              item=Line('call xxxdif(F2PY_EXPR_TUPLE_567)',(1456, 1457),'')
                        Assignment
                          variable='del'
                          sign='='
                          expr='0d0'
                          item=Line('del = 0d0',(1458, 1458),'')
                        Else
                          item=Line('else',(1459, 1459),'')
                        Assignment
                          variable='if(mpsord .ge. 100)mpsord'
                          sign='='
                          expr='mod(mpsord,100)'
                          item=Line('if (mpsord .ge. 100) mpsord = mod(mpsord,100)',(1460, 1460),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (ndos0 .gt. 0)      call makdos(nkp,ndhamx,ndhamx,nspx,w(owtkp),w(oevl),mpsord,      dabs(esmear-mpsord),-6d0,dosw(1),dosw(2),ndos,w(odos))',(1461, 1463),'')
                          content:
                            Call
                              item=Line('call makdos(F2PY_EXPR_TUPLE_571)',(1461, 1463),'')
                        If
                          blocktype='if'
                          name='__IF__'
                          item=Line('if (ndos0 .lt. 0)      call maknos(nkp,ndhamx,ndhamx,nspx,w(owtkp),w(oevl),mpsord,      dabs(esmear-mpsord),-6d0,dosw(1),dosw(2),ndos,w(odos))',(1464, 1466),'')
                          content:
                            Call
                              item=Line('call maknos(F2PY_EXPR_TUPLE_573)',(1464, 1466),'')
                        Assignment
                          variable='del'
                          sign='='
                          expr='mpsord+dabs(esmear-mpsord)'
                          item=Line('del = mpsord+dabs(esmear-mpsord)',(1467, 1467),'')
                    EndIfThen
                      blocktype='if'
                      item=Line('endif',(1468, 1468),'')
                    If
                      blocktype='if'
                      name='__IF__'
                      item=Line('if (nspc .eq. 2) call dscal(ndos,.5d0,w(odos),1)',(1469, 1469),'')
                      content:
                        Call
                          item=Line('call dscal(F2PY_EXPR_TUPLE_576)',(1469, 1469),'')
                    Call
                      item=Line("call dosio(w(odos),ndos,nspx,ndos,1,dosw(1),dosw(2),nspx,    eferm,del,1,-fopn('DOS'))",(1470, 1471),'')
                    Call
                      item=Line("call fclose(fopn('DOS'))",(1472, 1472),'')
                    Call
                      item=Line('call rlse(odos)',(1473, 1473),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1474, 1474),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1475, 1477),'')
            CommentBlock
              item=Comment('C --- Core-level spectroscopy ---',(1477, 1477))
            IfThen
              blocktype='ifthen'
              item=Line('if (icls .ne. 0) then',(1478, 1478),'')
              content:
                IfThen
                  blocktype='ifthen'
                  item=Line('if (procid .eq. master) then',(1479, 1479),'')
                  content:
                    Call
                      item=Line("call upack1('bz ef',sbz,eferm)",(1480, 1480),'')
                    Call
                      item=Line('call vcdmel(sctrl,ssite,sspec,slat,nlmax,ndham,ndimh,nkp,nsp,      nspc,eferm,w(oevl),w(oausc),nsites,isite,iclsl,iclsn)',(1481, 1482),'')
                    Call
                      item=Line("call rx0('done generating core level spectra')",(1483, 1483),'')
                    Else
                      item=Line('else',(1484, 1484),'')
                    Call
                      item=Line("call fexit(0,0,' ',0)",(1485, 1485),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1486, 1486),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1487, 1489),'')
            CommentBlock
              item=Comment('C --- Assemble output density ---',(1489, 1489))
            Call
              item=Line('call dfratm(nbas,ssite,sspec,orhat1)',(1490, 1490),'')
            Call
              item=Line('call defrr(oqbyl,  n0*nbas*nsp)',(1491, 1491),'')
            Call
              item=Line('call defrr(ohbyl,  n0*nbas*nsp)',(1492, 1493),'')
            CommentBlock
              item=Comment('C     --window: Put output density into orhat and smrho, and exit',(1493, 1493))
            IfThen
              blocktype='ifthen'
              item=Line('if (lwndow) then',(1494, 1494),'')
              content:
                Call
                  item=Line('call mkrout(ssite,sspec,slat,sham,nbas,nsp,ldim,lekkl,oqkkl,    oeqkkl,w(oorhat),w(ohab),w(osab),w(oqbyl),w(ohbyl),lrout)',(1495, 1496),'')
                Call
                  item=Line('call zcopy(k1*k2*k3*nsp,w(osrout),1,w(osmrho),1)',(1497, 1497),'')
                Call
                  item=Line('call symrho(ssite,sspec,slat,lfrce,w(osmrho),w(oorhat),w(oqbyl),    w(ohbyl),frc)',(1498, 1499),'')
                Goto
                  item=Line('goto 999',(1500, 1500),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1501, 1501),'')
            Call
              item=Line('call mkrout(ssite,sspec,slat,sham,nbas,nsp,ldim,lekkl,oqkkl,  oeqkkl,orhat1,w(ohab),w(osab),w(oqbyl),w(ohbyl),lrout)',(1502, 1504),'')
            IfThen
              blocktype='ifthen'
              item=Line('if (lrout .ne. 0) then',(1505, 1506),'')
              content:
                CommentBlock
                  item=Comment('C   ... Symmetrize output density and forces',(1506, 1506))
                Call
                  item=Line('call symrho(ssite,sspec,slat,lfrce,w(osrout),orhat1,w(oqbyl),    w(ohbyl),frc)',(1507, 1511),'')
                CommentBlock
                  item=Comment('C   ... New boundary conditions pnu for phi and phidot\nC       call pshpr(iprint()-12)',(1510, 1511))
                IfThen
                  blocktype='ifthen'
                  item=Line('if (lpnu .gt. 0) then',(1512, 1512),'')
                  content:
                    Call
                      item=Line("call upack1('ham pmin',sham,xv)",(1513, 1513),'')
                    Call
                      item=Line("call upack1('ham pmax',sham,xv(11))",(1514, 1514),'')
                    Call
                      item=Line('call pnunew(nbas,nsp,ssite,sspec,xv,xv(11),lfrzw,w(ohab),      w(osab),w(oqbyl),w(ohbyl))',(1515, 1516),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1517, 1518),'')
                CommentBlock
                  item=Comment('C       call poppr',(1518, 1518))
            EndIfThen
              blocktype='if'
              item=Line('endif',(1519, 1521),'')
            CommentBlock
              item=Comment('C --- Evaluate Harris energy ---',(1521, 1521))
            Call
              item=Line('call mkehkf(1,sham,sev,sumqv(2,1),sumtv,ehar)',(1522, 1524),'')
            CommentBlock
              item=Comment('C --- Evaluate KS total energy, correction to Harris force ---',(1524, 1524))
            IfThen
              blocktype='ifthen'
              item=Line('if (lrout .ne. 0) then',(1525, 1527),'')
              content:
                CommentBlock
                  item=Comment('C   ... Correction to harris force',(1527, 1527))
                Call
                  item=Line('call dfrce(ssite,sspec,slat,sctrl,k1,k2,k3,nvl,w(oorhat),orhat1,    elind,w(oqmom),w(osmrho),w(osrout),w(ofh))',(1528, 1531),'')
                CommentBlock
                  item=Comment('C   ... Evaluate KS total energy and output magnetic moment',(1531, 1531))
                Assignment
                  variable='eks'
                  sign='='
                  expr='0d0'
                  item=Line('eks = 0d0',(1532, 1532),'')
                IfThen
                  blocktype='ifthen'
                  item=Line('if (leks .ge. 1) then',(1533, 1533),'')
                  content:
                    Call
                      item=Line('call togpr()',(1534, 1534),'')
                    Call
                      item=Line('call mkekin(nbas,ldim,ssite,sspec,slat,sham,osig,otau,oppi,      lcplxp,oqkkl,k1,k2,k3,vconst,w(osmpot),w(osrout),sev,sumtv)',(1535, 1536),'')
                    Call
                      item=Line('call pshpr(ipr-20)',(1537, 1537),'')
                    Call
                      item=Line('call mkpot(nbas,ssite,sspec,slat,sham,spot,lfrce,lcplxp,      k1,k2,k3,w(osrout),orhat1,qbg,w(osmpot),w(oqmom),vconst,      vrmt,osig,otau,oppi,w(oppnl),w(ohab),w(ovab),w(osab),      qval,qsc,w(ogpot0),w(ovval),w(ofes2),0,vorb,nlibu,lmaxu,      lldau)',(1538, 1542),'')
                    Call
                      item=Line('call poppr()',(1543, 1543),'')
                    Call
                      item=Line('call mkehkf(2,sham,sev,sumqv(2,1),sumtv,eks)',(1544, 1544),'')
                    Call
                      item=Line('call togpr()',(1545, 1545),'')
                EndIfThen
                  blocktype='if'
                  item=Line('endif',(1546, 1548),'')
                CommentBlock
                  item=Comment('C   --- Add together force terms ---',(1548, 1548))
                If
                  blocktype='if'
                  name='__IF__'
                  item=Line('if (lfrce .gt. 0)    call totfrc(nbas,ssite,slat,leks,w(ofes1),w(ofes2),w(ofh),frc)',(1549, 1552),'')
                  content:
                    Call
                      item=Line('call totfrc(F2PY_EXPR_TUPLE_611)',(1549, 1552),'')
                CommentBlock
                  item=Comment('C   --- Mix input and output densities ---',(1552, 1552))
                Call
                  item=Line('call defrr(oqm1, nvl)',(1553, 1553),'')
                Call
                  item=Line('call defrr(oqm2, nvl)',(1554, 1554),'')
                Call
                  item=Line("call upacks('strn mix',i1,i2)",(1555, 1556),'')
                Call
                  item=Line('call mixrho(ssite,sspec,slat,nsp,iter,sstrn(i1:i2),qval-qbg,    elind,orhat1,w(oorhat),k1,k2,k3,dmxp,w(osrout),w(osmrho))',(1557, 1559),'')
                Else
                  item=Line('else',(1560, 1560),'')
                Assignment
                  variable='eks'
                  sign='='
                  expr='0'
                  item=Line('eks = 0',(1561, 1561),'')
            EndIfThen
              blocktype='if'
              item=Line('endif',(1562, 1562),'')
            Call
              item=Line("call pack2('ham ehf ehk',sham,ehar,eks)",(1563, 1564),'')
   999      Continue
   999        item=Line('continue',(1565, 1565),'999')
            Print
              item=Line("print *,'takao xxx1'",(1566, 1566),'')
            Call
              item=Line('call rlse(oqmom)',(1567, 1567),'')
            Print
              item=Line("print *,'takao xxx2'",(1568, 1568),'')
            Call
              item=Line("call tcx('bndfp')",(1569, 1569),'')
            Print
              item=Line("print *,'takao xxx3'",(1570, 1572),'')
            CommentBlock
              item=Comment('ctakaox june2009',(1572, 1572))
            Close
              item=Line('close(ifiogw)',(1573, 1573),'')
            Print
              item=Line("print *,'takao xxx4'",(1574, 1574),'')
            Close
              item=Line('close(ifiese)',(1575, 1575),'')
            Call
              item=Line('call xxxbfp',(1576, 1576),'')
            CommentBlock
              item=Comment('! Patch to avoid PGI compiler bug on AMD processor\n! Patch to avoid PGI compiler bug on AMD processor',(1576, 1576))
            Print
              item=Line("print *,'takao xxx5'",(1577, 1577),'')
        EndSubroutine
          blocktype='subroutine'
          name='bndfp'
          item=Line('end',(1578, 1579),''),         Subroutine
          item=Line('subroutine xxxbfp',(1580, 1580),'')
          content:
        EndSubroutine
          blocktype='subroutine'
          name='xxxbfp'
          item=Line('end',(1581, 1582),'')]
