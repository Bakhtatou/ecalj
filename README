==================================================================
Our home page is at http://pmt.sakura.ne.jp/wiki/,
(not so much documents in English yet). not well-organized yet...
===================================================================

=== ecalj package ===
(this document is checked at 3rdSep2012.)
https://github.com/tkotani/ecalj

ecalj is a firts-principle electronic structure calculation package in
f90, version control by git. 

(1)All electron full potential PMT method (LAPW+LMTO)
   Related source codes are in ecalj/lm7K/ 
   ctrlgen2.py can set up 'standard input file(ctrl file)' just from
   the given crystal structure.

(2)GW method, especially, 
   Quasiparticle self-consistent GW method (QSGW),
   dielectric functions, spin fluctions.
   GW-related codes are in ecalj/fpgw/
   
   Recently, I renewed some part of algolism of GW/QSGW calculations
   (mainly in PRB.81,125102(2010) and Copmuter Physics Comm. 176(2007)1-13).
   ---> this is better than old versions; speed, memory (file size),
   and accuracy for anisortopic systems.
   For comparison, you can use old version in ecalj.git (gitk --all and check it out).
 
NOTE:
PMT-QSGW is developing now. Within a few month, we can pack it.



################## Install and test of lm7K ########################
*Installation for lm7K

---Let us assume you use ubuntu. ---
>sudo apt-get install git  #version control and to get source from github)
>sudo apt-get install gitk #git gui 'gitk --all' is useful. do it at ecal/.
>sudo apt-get install gfortran      # GFORTRAN
>sudo apt-get install openmpi-bin openmpi-dev     # MPI 
(or you may use mpich2 as >sudo apt-get install mpich2, but I failed...)
>sudo apt-get install libfftw3-3     or something else # FFTW
>sudo apt-get install libblas3gf     or something else # BLAS
>sudo apt-get install liblapack3gf   or something else  # LAPACK

>git clone https://github.com/tkotani/ecalj.git # Get source code for ecalj.


Check PLATFORM=gfortran at the head of ecalj/lm7K/Makefile.
ecalj/lm7K/MAKEINC/Make.ing.gfortran is used when you choose
PLATFORM=gfortran. (Commnet out this line in Makefile, or do "make PLATFORM=gfortran".)
Set LIBLOC in Make.inc.gfortran when you use different math libraries.

You may also have to modify lm7K/MAKEINK/Make.inc.gfortran, compile options
and so on (but usually, only modify math library LIBLOC).

Current ecalj with gfortran4.6 or 4.7 works fine with FFLAGS=-O2,
but not with failed with FFLAGS=-O3.

Parallel make as
prompt>make -j4
may speed it up for multicore machines. But in cases it stops because
of dependency is not well-described. In such case, repeat it without -j4.


*For ifort.
You can set PLATFORM=ifort. Then ecalj/lm7K/MAKEINC/Make.inc.ifort is
used --- you need to set math libraries in it.

You can make both binaries with gfortran and with ifort at lm7K. 
Then you have to do "make clean" at ecalj/lm7K, before you make
binaries. (e.g You first make binaries with gfortan. Then move binaries to
your another directories, then do make clean, and set PLATFORM=ifort,
and so on to make nbinaries by ifort.)

---
*Test for lm7K
>make check
at ecalj/lm7K. It may take five minutes or so. 
If you see "All test passed" finally, your installation is OK.

>make install
at ecalj/lm7K just moves all requied binaries to your ~bin.




################## Install and test for fpgw ####################### 
*Installation for fpgw/
At fpgw/exec/ directory, you have to run 
>make
>make install
>make install2
. Before this, you have to set blas and lapack in fpge/exec/make.inc.
--------------------
*Installation test for fpgw/

At fpgw/TESTInstallGW/, run
>./testgw.py --all

It makes temp_* directories under TESTinstallGW/.
>./testgw.py --help
shows help.

ni_gwsc take 1000sec or so.
just type ./testgw.py shows help

---------------------------
* Other points
>make cleanall 
This removes all *.o *.a and binaries except original source.
