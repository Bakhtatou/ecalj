#!/bin/csh -f

# takao. I now use fixed Makefile in tests directory.


# This file is a shell script that tests various routines in the slatsm library.
# version machine    	      OS		 startup/config.guess		Mnemonic	compiler            Pass?
#   46    DEC alpha EV 6    2.4.18-27.7.x.hpsmp	alphaev6-unknown-linux-gnu	LINUXF		fort-1.1.0-1534     Yes
#
#         Intel i686 	    2.6.18-8.1.1.el5	i686-pc-linux-gnu     		LINUXI		gfortran 4.1.1      Yes
#			    2.4.20-20.7smp	i686-pc-linux-gnu     		INTEL_IFC	ifc 7.0,icc	    Yes
#
#         Intel Xeon x86_64 2.4.21-20.EL        x86_64-unknown-linux-gnu        LINUX_PGI       pgf90 6.0-2,gcc     Yes
#										INTEL_IFORT	ifort 9.0.0,icc	    Yes
#
# version machine    	      OS		 startup/config.guess		compiler            Pass?
#   45    DEC alpha EV 6    2.4.18-27.7.x.hpsmp	alphaev6-unknown-linux-gnu	LINUXF		fort-1.1.0-1534     Yes
#
#   45    DEC alpha EV 6    2.4.18-27.7.x.hpsmp	alphaev6-unknown-linux-gnu	LINUXF		fort-1.1.0-1534     Yes
#                           2.4.18-27.7.x.hpsmp alphaev6-unknown-linux-gnu      LINUXA          g77 0.5.26          Yes
#         Intel i686 	    2.4.20-20.7smp	i686-pc-linux-gnu     		LINUXI		g77 0.5.26          Yes
#			    2.4.20-20.7smp	i686-pc-linux-gnu     		INTEL_IFC	ifc 7.1,icc	    Yes
#												ifc 7.1,gcc	    Yes
#                           2.4.21-32.0.1.ELsmp i686-pc-linux-gnu     		INTEL_IFORT	ifort 8.1,gcc	    Yes
#         Intel Xeon        2.4.20-i4smp        i686-pc-linux-gnu               INTEL_IFC	ifc 7.0,gcc	    Yes
#         Intel Xeon x86_64 2.4.21-20.EL        x86_64-unknown-linux-gnu        LINUX_PGI       pgf90 6.0-2,gcc     Yes
#
#         Opteron x86_64    2.4.27-294r0048.Scyldsmp x86_64-unknown-linux-gnu   LINUX_PGI       pgf90 6.0-2,gcc     Yes
#         Athlon MP 2000+   2.4.20-28.7smp      i686-pc-linux-gnu               LINUX_PGI       pgf90 4.0.1,pgcc    Yes
#
#         SGI IP25     	    IRIX 6.5		mips-sgi-irix6.5		SGI8            f90-7.2.1           Yes
#                                                                                               cc-7.2.1
#
#         PowerPC	    AIX			powerpc-ibm-aix4.3.2.0		xlf             ?                   Yes 
#
# version machine    	      OS		 startup/config.guess		compiler            Pass?
#   43    EV 6       	    2.4.18-27.7.x.hpsmp	alphaev6-unknown-linux-gnu	fort-2.96           Yes
#                    						    		cc-2.96 
#         Intel i686 	    R.H.Linux  		i686-pc-linux-gnu     		ifc-6.0.1           Yes 
#                    						    		icc-6.0.1
#         Intel i686 	    R.H.Linux  		i686-pc-linux-gnu            	pgf90-4.0-2         Yes
#                    						    		gcc-2.96
#         Athlon MP 2000+   2.4.20-19.7smp	i686-pc-linux-gnu        	pgf90-4.0-1         Yes  
#                    						    		pgcc-4.0-1
#         Intel i686	    2.4.20-8smp		i686-pc-linux-gnu            	f77-3.2.2           Yes
#                    						    		cc-3.2.2
#         SUNW,Ultra-80	    solaris		sparc-sun-solaris2.7         	f90-6.1             Yes
#                    						    		cc-5.2                 
#         SUNW,Ultra-80	    solaris		sparc-sun-solaris2.7         	f77-5.2             Yes
#										cc-5.2                 
#         SGI IP25     	    IRIX 6.5		mips-sgi-irix6.5		f77-7.2.1           Yes
#										cc-7.2.1
#         SGI IP25     	    IRIX 6.5		mips-sgi-irix6.5		f90-7.2.1           Yes (but ysbnv test fails) 
#                    						    		cc-7.2.1                 
#         PowerPC	    AIX			powerpc-ibm-aix4.3.2.0		xlf                 Yes (fails htridi and ysbnv tests)
#										icc                 
#
# version machine     OS       startup/config.guess         compiler            Pass?
#   39    DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#							    egcs-2.91.66
#         DEC EV5   DEC unix   alphaev56-dec-osf4.0f        f90 V5.4A-1472      Yes
#
#         DEC EV6   R.H.Linux  alphaev6-unknown-linux-gnu   Compaq V1.1.0-1534  Yes
#         DEC EV6   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#							    egcs-2.91.66

#         Intel     R.H.Linux  i686-pc-linux-gnu            g77 egcs-2.90.29    Yes
#							    egcs-2.91.66
#         Intel     R.H.Linux  i686-pc-linux-gnu            gcc,pgf90 v3.1-3    Yes

#        SGI IP30   6.5        mips-sgi-irix6.5             f90 7.3.1.2m        Yes
#        SGI IP30   6.5        mips-sgi-irix6.5             f77 7.3.1.2m        Yes

#      HP 9000/735  B.10.20    hppa1.1-hp-hpux10.20         f77                 Yes
#         9000/780                                          f90                 Yes

#       Sun Sparc2  solaris    sparc-sun-solaris2.8         f90                 No (fopna, cmdopt do not compile)
#       Sun Sparc2  solaris    sparc-sun-solaris2.8         f77                 Yes

#         IBM                  rs6000-ibm-aix3.2.5                              not checked

# version machine     OS       startup/config.guess         compiler            Pass?
#   38    DEC EV5    Unix      alphaev56-dec-osf4.0d         5.0                Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  Compaq-V1.0-920     Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#         DEC EV6   R.H.Linux  alphaev6-unknown-linux-gnu   Compaq-V1.0-920     Yes

#         Intel     R.H.Linux  i686-pc-linux-gnu            g77 egcs-2.90.29    Yes
#         Intel     R.H.Linux  i686-pc-linux-gnu            pgf90               Yes

#        SGI Octane  6.5       mips-sgi-irix6.5             7.3.1.1m            Yes
#        SGI IP27    6.4       mips-sgi-irix6.4             7.3                 Yes

#         HP 735    B.10.20    hppa1.1-hp-hpux10.20                             Yes

#       Sun Sparc2  solaris    sparc-sun-solaris2.7         f77                 Yes(*1)

#         IBM                  rs6000-ibm-aix3.2.5                              not checked

# version machine     OS       startup/config.guess         compiler            Pass?
#   37    DEC EV5    Unix      alphaev56-dec-osf4.0d         5.0                Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  Compaq-V1.0-920     Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#         DEC EV6   R.H.Linux  alphaev6-unknown-linux-gnu   Compaq-V1.0-920     Yes

#         Intel     R.H.Linux  i686-pc-linux-gnu            g77 egcs-2.90.29    Yes
#         Intel     R.H.Linux  i686-pc-linux-gnu            pgf90               Yes

#        SGI Octane  6.5       mips-sgi-irix6.5             7.3.1.1m            Yes
#        SGI IP27    6.4       mips-sgi-irix6.4             7.3                 Yes

#         HP 735    B.10.20    hppa1.1-hp-hpux10.20                             Yes

#       Sun Sparc2  solaris    sparc-sun-solaris2.7         f77                 Yes(*1)

#         IBM                  rs6000-ibm-aix3.2.5                              not checked


#   36    DEC EV5    Unix      alphaev56-dec-osf4.0d         5.0                Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  Compaq-X1.0-894     Yes
#         DEC EV5   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#         DEC EV6   R.H.Linux  alphaev56-unknown-linux-gnu  g77 0.5.24-19981002 Yes
#         DEC EV6   R.H.Linux  alphaev6-unknown-linux-gnu   Compaq-X1.0-894     Yes

#        SGI Octane  6.5       mips-sgi-irix6.5             7.3                 Yes
#        SGI IP27    6.4       mips-sgi-irix6.4             7.2.1               Yes

#         HP 735    B.10.20    hppa1.1-hp-hpux10.20                             Yes
#                                                                               
#         Intel     R.H.Linux  i686-pc-linux-gnu            g77 egcs-2.90.27    Yes
#         Intel     R.H.Linux  i686-pc-linux-gnu            pgcc, pg77 v. 3     Yes

#         IBM                  rs6000-ibm-aix3.2.5                              Yes

#         Sun      solaris     sparc-sun-solaris2.5.1       f77                 Yes(*1)

# NOTES
# *1 : results ok; tester has problems with awk.  Install gnu awk to avoid.


alias call 'set retcall = \!\!:2 ; set callarg = \!\!:3 ; goto \!\!:1'
alias runjob 'set retcall = \!\!:1; set outfile = \!\!:2 ; set callarg = \!\!:3 ; goto runjob'
alias query 'set retcall = \!\!:1 ; set retcall2 = \!\!:2 ; set callarg = \!\!:3 ; goto query'

set a
set slow
set testfile = $0
set testdir = $testfile:h
set space = '        '
set arglst = ($argv)
set failed = 0

# See if GNU diff
\diff --version | & grep 'GNU diffutils' > /dev/null
if (! $status) set have_gnudiff

# Find ccomp
set CCOMP = ` make -s -f Makefile ccomp`
if (-x "$CCOMP") then
  set have_ccomp
  echo using CCOMP = $CCOMP
else
  echo "$0 (warning) no executable ccomp ... skipping some tests"
endif



# --- Pick off switches ---
while (`echo $1 | sed -e 's/\(.\).*/\1/' `  ==  "-")

  set arg1 = $1; shift
# if ($?verb) echo "$0: parsing switch $arg1"
  switch ($arg1)
    case "--quiet":
      set quiet
      unset slow
      breaksw
    case "--add0":
      set ladd0
      breaksw
    case "--no-iact*":
      unset slow
      breaksw
    case "--verb*":
      set verb = 1
      breaksw
    default:
      echo unrecognized switch $arg1
      echo "usage: $0 [switches] [test-list]"
      echo '       test-list is a list of test cases, e.g.: 1 3'
      echo '       switches:'
      echo '       --no-iactive runs tests without prompting user'
      echo '       --quiet      runs tests without prompting user'
      echo '       --verbose    script prints out extra information'
      exit -1
  endsw

end

set joblist = ($argv)
if ($#joblist == 0 ) set joblist = (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20)

echo $joblist | egrep '^1$|^1 | 1$| 1 ' >/dev/null
if ($status) goto chk1e
set pass
echo ' '
echo "$space --- 1.  test d1mach (machine constants)"
query chk1 chk1e 'run this test'
chk1:
set fnam = d1mach #; mmake t$fnam.f >>Makefile
make -f Makefile t$fnam ; chmod +x t$fnam
if ($?quiet) goto chk1p
echo ' ' ; ./t$fnam
echo ' '
echo " ... compare to file out.$fnam :" ; cat out.$fnam

chk1p:
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space ./t$fnam > out"
             ./t$fnam > out
set retval = $status
if (! $retval) then
  echo "$space ... td1mach return with zero status ?" yes
else
  echo "$space ... td1mach return with zero status ?" no
  unset pass
  set failed = ($failed 1)
endif

if (`egrep 'd1mach\(i\)= *5' out | awk '{print $4}'` =~ 0.30102999*) then
  echo "$space ... d1mach(5) = 0.30102999* ..." yes
else
  echo "$space ... d1mach(5) = 0.30102999* ..." no
  unset pass
  set failed = ($failed 1)
endif

if ($?pass) then
    echo "$space ... test 1 PASSED"
else
    echo "$space ... test 1 FAILED"
endif
\rm t$fnam
endif
rm -f out out~
chk1e:

echo $joblist | egrep '^2$|^2 | 2$| 2 ' >/dev/null
if ($status) goto chk2e
echo ' '
echo "$space --- 2.  test memory allocation.  Output will be written to file out"
set pass
query chk2 chk2e 'run this test'
chk2:
set fnam = alloc #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam > out"
               ./t$fnam > out
  set diff = diff
  if ($?have_gnudiff) set diff = 'diff -ICPU'
  echo "$space --- $diff -w out out.$fnam ---"
  $diff -w out out.$fnam
  echo "$space --- done $diff -w out out.$fnam ---"
endif
chk2p:
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space ./t$fnam | grep -v CPU > out"
             ./t$fnam | grep -v CPU > out
cat out.$fnam | grep -v CPU > out~
diff -w out out~ >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 2)
endif

if ($?pass) then
    echo "$space ... test 2 PASSED"
else
    echo "$space ... test 2 FAILED"
endif

\rm t$fnam
rm -f out out~
chk2e:


echo $joblist | egrep '^3$|^3 | 3$| 3 ' >/dev/null
if ($status) goto chk3e
echo ' '
echo "$space --- 3.  test pretty."
set pass
query chk3 chk3e 'run this test'
chk3:
set fnam = pretty #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam >out"
             ./t$fnam >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 3)
endif

if ($?pass) then
    echo "$space ... test 3 PASSED"
else
    echo "$space ... test 3 FAILED"
endif
\rm ./t$fnam
rm -f out out~
chk3e:

echo $joblist | egrep '^4$|^4 | 4$| 4 ' >/dev/null
if ($status) goto chk4e
echo ' '
echo "$space --- 4.  test a2bin."
set pass
query chk4 chk4e 'run this test'
chk4:
#   if ($MNEMONIC == "DECA") then
#     cp ta2bin.f xx.f ; $CCOMP -uPOINTER xx.f ta2bin.f
#   endif
set fnam = a2bin #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam >out"
               ./t$fnam >out
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space ./t$fnam | grep -v 'parse error' >out"
             ./t$fnam | grep -v 'parse error' >out
cat out.$fnam | grep -v 'parse error' >out~
diff -w out out~ >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 4)
endif

if ($?pass) then
    echo "$space ... test 4 PASSED"
else
    echo "$space ... test 4 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk4e:

echo $joblist | egrep '^5$|^5 | 5$| 5 ' >/dev/null
if ($status) goto chk5e
echo ' '
echo "$space --- 5.  test bin2a."
set pass
query chk5 chk5e 'run this test'
chk5:
set fnam = bin2a #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam >out"
             ./t$fnam >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 5)
endif

if ($?pass) then
    echo "$space ... test 5 PASSED"
else
    echo "$space ... test 5 FAILED"
endif
\rm ./t$fnam
rm -f out out~
chk5e:

echo $joblist | egrep '^6$|^6 | 6$| 6 ' >/dev/null
if ($status) goto chk6e
echo ' '
echo "$space --- 6.  test awrite."
set pass
query chk6 chk6e 'run this test'
chk6:
set fnam = awrite #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam >out"
             ./t$fnam >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 6)
endif

if ($?pass) then
    echo "$space ... test 6 PASSED"
else
    echo "$space ... test 6 FAILED"
endif
\rm ./t$fnam
rm -f out out~
chk6e:

echo $joblist | egrep '^7$|^7 | 7$| 7 ' >/dev/null
if ($status) goto chk7e
echo ' '
echo "$space --- 7.  test cmdlin,cmdopt,cmdstr."
set pass
query chk7 chk7e 'run this test'
chk7:

set fnam = cmdlin #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam  a bb ccc >out"
             ./t$fnam  a bb ccc >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 7)
endif
\rm ./t$fnam

echo ' '
set fnam = cmdopt #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam "
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam 1 2 3 > out"
             ./t$fnam 1 2 3 > out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 7)
endif
\rm ./t$fnam

set fnam = cmdstr #; mmake t$fnam.f >> Makefile
echo ' '
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam one 2 3 >out"
             ./t$fnam one 2 3 >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 7)
endif
\rm ./t$fnam

if ($?pass) then
    echo "$space ... test 7 PASSED"
else
    echo "$space ... test 7 FAILED"
endif
rm -f out out~
chk7e:

#  echo $joblist | egrep '^8$|^8 | 8$| 8 ' >/dev/null
#  if ($status) goto chk8e
#  echo ' '
#  echo "$space --- 8.  test nothing."
#  set pass
#  query chk8 chk8e 'run this test'
#  chk8:
#  set fnam = cmdstr #; mmake t$fnam.f >> Makefile
#  echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
#               make -f Makefile t$fnam; chmod +x t$fnam
#  echo "$space ./t$fnam one 2 3 >out"
#               ./t$fnam one 2 3 >out
#  if (! $?quiet) then
#    echo "$space --- diff -w out out.$fnam ---"
#    diff -w out out.$fnam
#    echo "$space --- done diff -w out out.$fnam ---"
#  endif
#  if (! $?quiet) echo "$space ... automatic pass checks"
#  echo "$space diff -w out out.$fnam >/dev/null"
#               diff -w out out.$fnam >/dev/null
#  set retval = $status
#  if (! $retval) then
#    echo "$space ... output equal to out.$fnam ?" yes
#  else
#    echo "$space ... output equal to out.$fnam ?" no
#    unset pass
#    set failed = ($failed 8)
#  endif

#  if ($?pass) then
#      echo "$space ... test 8 PASSED"
#  else
#      echo "$space ... test 8 FAILED"
#  endif

#  \rm ./t$fnam
#  chk8e:

echo $joblist | egrep '^9$|^9 | 9$| 9 ' >/dev/null
if ($status) goto chk9e
echo ' '
echo "$space --- 9.  test date and time."
set pass
query chk9 chk9e 'run this test'
chk9:
set fnam = ftime #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
#  if (! $?quiet) then
  echo "$space No automatic pass checks for this test."
  echo "$space t$fnam should print out the current date and time."
#  endif
echo "$space ./t$fnam"
             ./t$fnam
#  if (! $?quiet) then
#    echo "$space --- diff -w out out.$fnam ---"
#    diff -w out out.$fnam
#    echo "$space --- done diff -w out out.$fnam ---"
#  endif
#  if (! $?quiet) echo "$space ... automatic pass checks"
#  echo "$space diff -w out out.$fnam >/dev/null"
#               diff -w out out.$fnam >/dev/null
#  set retval = $status
#  if (! $retval) then
#    echo "$space ... output equal to out.$fnam ?" yes
#  else
#    echo "$space ... output equal to out.$fnam ?" no
#    unset pass
#    set failed = ($failed 9)
#  endif

if ($?pass) then
    echo "$space ... test 9 PASSED"
else
    echo "$space ... test 9 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk9e:

echo $joblist | egrep '^10$|^10 | 10$| 10 ' >/dev/null
if ($status) goto chk10e
echo ' '
echo "$space --- 10.  test fopna."
set pass
if (! $?have_ccomp) then
  echo "$space ... cannot find ccomp ... skipping this test"
  goto chk10e
endif
query chk10 chk10e 'run this test'
chk10:
set fnam = fopna; $CCOMP -dDEBUG -dTEST ../$fnam.f t$fnam.f #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
set diff = 'diff -i -w'
if ($?have_gnudiff) set diff = 'diff -Iftflsh -i -w'
if (! $?quiet) then
  echo "$space ./t$fnam >out"
               ./t$fnam >out
  echo "$space --- $diff out out.$fnam ---"
  $diff out out.$fnam
  echo "$space --- done $diff out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space ./t$fnam | grep -v flsh >out"
             ./t$fnam | grep -v flsh >out
cat out.$fnam | grep -v flsh >out~
$diff out out~ >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 10)
endif

if ($?pass) then
    echo "$space ... test 10 PASSED"
else
    echo "$space ... test 10 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk10e:

echo $joblist | egrep '^11$|^11 | 11$| 11 ' >/dev/null
if ($status) goto chk11e
echo ' '
echo "$space --- 11.  test rdfiln."
set pass
query chk11 chk11e 'run this test'
chk11:
set fnam = rdfiln #; mmake t$fnam.f >> Makefile
echo
set vec=t
# if ( $MNEMONIC == DECA) set vec=f
# if ( $MNEMONIC == LINUXF) set vec=f
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam -vyesvec=$vec ctrl.ss >out"
             ./t$fnam -vyesvec=$vec ctrl.ss >out
if ($?quiet) goto chk11p
echo "$space --- diff -w out out.$fnam ---"
diff -w out out.$fnam
echo "$space --- done diff -w out out.$fnam ---"
chk11p:
echo "$space ... no automatic pass checks for this test"
\rm ./t$fnam
rm -f out out~
chk11e:

echo $joblist | egrep '^12$|^12 | 12$| 12 ' >/dev/null
if ($status) goto chk12e
echo ' '
echo "$space --- 12.  test wordg."
set pass
query chk12 chk12e 'run this test'
chk12:
set fnam = wordg #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
echo "$space ./t$fnam >out"
             ./t$fnam >out
if (! $?quiet) then
  echo "$space --- diff -w out out.$fnam ---"
  diff -w out out.$fnam
  echo "$space --- done diff -w out out.$fnam ---"
endif
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space diff -w out out.$fnam >/dev/null"
             diff -w out out.$fnam >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 12)
endif

if ($?pass) then
    echo "$space ... test 12 PASSED"
else
    echo "$space ... test 12 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk12e:

echo $joblist | egrep '^14$|^14 | 14$| 14 ' >/dev/null
if ($status) goto chk14e
echo ' '
echo "$space --- 14.  test htridi."
set pass
query chk14 chk14e 'run this test'
chk14:
set fnam = htridi #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam"
               ./t$fnam
endif
if (! $?quiet) echo "$space ... automatic pass checks ... 300 x 300 matrix"
echo "$space echo '\\n\\n' | ./t$fnam >out"
# for AIX compatibility:
             ./t$fnam <<EOF >out


EOF
if (`grep 'errmx=' out | head -1 | awk '{print ($4<1e-12)}'`) then
  echo "$space ... linpack errmx < 1e-12 ?" yes
else
  echo "$space ... linpack errmx < 1e-12 ?" no
  unset pass
  set failed = ($failed 14)
endif
if (`grep 'errmx=' out | tail -1 | awk '{print ($4<1e-12)}'`) then
  echo "$space ... lapack errmx < 1e-12 ?" yes
else
  echo "$space ... lapack errmx < 1e-12 ?" no
  unset pass
  set failed = ($failed 14)
endif

if ($?pass) then
    echo "$space ... test 14 PASSED"
else
    echo "$space ... test 14 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk14e:

echo $joblist | egrep '^15$|^15 | 15$| 15 ' >/dev/null
if ($status) goto chk15e
echo ' '
echo "$space --- 15.  test dgemm."
set pass
query chk15 chk15e 'run this test'
chk15:
set fnam = dgemm #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space echo / | ./t$fnam"
               echo / | ./t$fnam
endif
if (! $?quiet) echo "$space ... automatic pass checks"
if (`echo / | ./t$fnam | grep 'have the same results' | wc | awk '{print ($1 == 1)}'`) then
  echo "$space ... $fnam agree with in-line code ?" yes
else
  echo "$space ... $fnam agree with in-line code ?" no
  unset pass
  set failed = ($failed 15)
endif

if ($?pass) then
    echo "$space ... test 15 PASSED"
else
    echo "$space ... test 15 FAILED"
endif


\rm ./t$fnam
chk15e:

echo $joblist | egrep '^16$|^16 | 16$| 16 ' >/dev/null
if ($status) goto chk16e
echo ' '
echo "$space --- 16.  test yqinv."
set pass
query chk16 chk16e 'run this test'
chk16:
set fnam = yqinv #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam"
               ./t$fnam
endif
if (! $?quiet) echo "$space ... automatic pass checks ... 300 x 300 matrix"
echo "$space echo '\\n\\n' | ./t$fnam >out"
# for AIX compatibility:
             ./t$fnam <<EOF >out


EOF
if (`grep 'errmx=' out | head -1 | awk '{print ($6<1e-10)}'`) then
  echo "$space ... difference with zgetrf,i < 1e-10 ?" yes
else
  echo "$space ... difference with zgetrf,i < 1e-10 ?" no
  unset pass
  set failed = ($failed 16)
endif
if (`grep 'errmx=' out | tail -1 | awk '{print ($9<1e-10)}'`) then
  echo "$space ... inverse * matrix - 1 < 1e-10 ?" yes
else
  echo "$space ... inverse * matrix - 1 < 1e-10 ?" no
  unset pass
  set failed = ($failed 16)
endif

if ($?pass) then
    echo "$space ... test 16 PASSED"
else
    echo "$space ... test 16 FAILED"
endif

\rm ./t$fnam
endif
rm -f out out~
chk16e:

echo $joblist | egrep '^17$|^17 | 17$| 17 ' >/dev/null
if ($status) goto chk17e
echo ' '
echo "$space --- 17.  test dqinv."
set pass
query chk17 chk17e 'run this test'
chk17:
set fnam = dqinv  #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
echo "$space ./t$fnam"
             ./t$fnam
endif
if (! $?quiet) echo "$space ... automatic pass checks ... 300 x 300 matrix"
echo "$space echo '\\n\\n' | ./t$fnam >out"
# for AIX compatibility:
             ./t$fnam <<EOF >out


EOF
if (`grep 'errmx=' out | head -1 | awk '{print ($6<1e-7)}'`) then
  echo "$space ... difference with dgetrf,i < 1e-7 ?" yes
else
  echo "$space ... difference with dgetrf,i < 1e-7 ?" no
  unset pass
  set failed = ($failed 17)
endif
if (`grep 'errmx=' out | tail -1 | awk '{print ($9<1e-8)}'`) then
  echo "$space ... inverse * matrix - 1 < 1e-8 ?" yes
else
  echo "$space ... inverse * matrix - 1 < 1e-8 ?" no
  unset pass
  set failed = ($failed 17)
endif

if ($?pass) then
    echo "$space ... test 17 PASSED"
else
    echo "$space ... test 17 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk17e:

echo $joblist | egrep '^18$|^18 | 18$| 18 ' >/dev/null
if ($status) goto chk18e
echo ' '
echo "$space --- 18.  test ysbnv."
set pass
query chk18 chk18e 'run this test'
chk18:
set fnam = ysbnv  #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam"
               ./t$fnam
endif
if (! $?quiet) echo "$space ... automatic pass checks ... 300 x 300 matrix"
echo "$space echo '\\n\\n' | ./t$fnam >out"
# for AIX compatibility:
             ./t$fnam <<EOF >out


EOF
if (`grep 'errmx=' out | head -1 | awk '{print ($6<1e-11)}'`) then
  echo "$space ... difference with ygefa < 1e-11 ?" yes
else
  echo "$space ... difference with ygfea < 1e-11 ?" no
  unset pass
  set failed = ($failed 18)
endif
if (`grep 'errmx=' out | tail -1 | awk '{print ($9<1e-11)}'`) then
  echo "$space ... inverse * matrix - 1 < 1e-11 ?" yes
else
  echo "$space ... inverse * matrix - 1 < 1e-11 ?" no
  unset pass
  set failed = ($failed 18)
endif

if ($?pass) then
    echo "$space ... test 18 PASSED"
else
    echo "$space ... test 18 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk18e:

echo $joblist | egrep '^19$|^19 | 19$| 19 ' >/dev/null
if ($status) goto chk19e
echo ' '
echo "$space --- 19.  test dqinvb."
set pass
query chk19 chk19e 'run this test'
chk19:
set fnam = dqinvb  #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if ($?quiet) goto chk19p
echo "$space ... compare errors dqinvb makes with various input css:"
echo "$space ./t$fnam <<EOF | egrep 'compare|test dqinvb'"
             ./t$fnam <<EOF | egrep 'compare|test dqinvb'

199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
s
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
t
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
r
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
ts
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
tr
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
rs
199



EOF
./t$fnam <<EOF | egrep 'compare|test dqinvb'
trs
199



EOF
echo " "
echo "$space ... invoke test with user input:"
echo "$space ./t$fnam"
             ./t$fnam
chk19p:
if (! $?quiet) echo "$space ... automatic pass checks ... 300 x 300 matrix"
echo "$space echo '\\n\\n' | ./t$fnam >out"
# for AIX compatibility:
             ./t$fnam <<EOF >out



EOF
if (`grep 'errmx=' out | head -1 | awk '{print ($11<1e-8)}'`) then
  echo "$space ... difference with dgetrf,i < 1e-8 ?" yes
else
  echo "$space ... difference with dgetrf,i < 1e-8 ?" no
  unset pass
  set failed = ($failed 19)
endif
if (`grep 'errmx=' out | head -2 | tail -1 | awk '{print ($13<1e-8)}'`) then
  echo "$space ... inverse * matrix - 1 < 1e-8 ?" yes
else
  echo "$space ... inverse * matrix - 1 < 1e-8 ?" no
  unset pass
  set failed = ($failed 19)
endif

if ($?pass) then
    echo "$space ... test 19 PASSED"
else
    echo "$space ... test 19 FAILED"
endif

\rm ./t$fnam
rm -f out out~
chk19e:

echo $joblist | egrep '^20$|^20 | 20$| 20 ' >/dev/null
if ($status) goto chk20e
echo ' '
echo "$space --- 20.  test fftz3.  Output will be written to file out"
set pass
query chk20 chk20e 'run this test'
chk20:
set fnam = fft  #; mmake t$fnam.f >> Makefile
echo "$space make -f Makefile t$fnam; chmod +x t$fnam"
             make -f Makefile t$fnam; chmod +x t$fnam
if (! $?quiet) then
  echo "$space ./t$fnam >out"
               ./t$fnam >out
  set diff = diff
  if ($?have_gnudiff) set diff = 'diff -ICPU'
  echo "$space --- $diff -w out out.$fnam ---"
  $diff -w out out.$fnam
  echo "$space --- done $diff -w out out.$fnam ---"
endif
chk20p:
if (! $?quiet) echo "$space ... automatic pass checks"
echo "$space ./t$fnam | grep -v CPU >out"
             ./t$fnam | grep -v CPU >out
cat out.$fnam | grep -v CPU >out~
diff -w out out~ >/dev/null
set retval = $status
if (! $retval) then
  echo "$space ... output equal to out.$fnam ?" yes
else
  echo "$space ... output equal to out.$fnam ?" no
  unset pass
  set failed = ($failed 20)
endif

if ($?pass) then
    echo "$space ... test 20 PASSED"
else
    echo "$space ... test 20 FAILED"
endif

\rm t$fnam
rm -f out out~
chk20e:


echo ' '
if ($#failed <= 1) then
    echo "$space $testfile : all tests PASSED"
    exit 0
else
    shift failed
    echo "$space $testfile : These tests FAILED:" $failed
    exit -1
endif



# ---------------- qprint (print only quiet not set) --------------
exit
qprint:
  set quitjob=$retcall
  if ($?quiet) goto $quitjob
  echo "$callarg"
  goto $quitjob

# ---------------- difffiles --------------
exit
diffiles:
  set quitjob=$retcall
  if ($?quiet) goto $quitjob
  goto $quitjob

# ---------------- showout --------------
exit
showout:
  set quitjob=$retcall
  if ($?quiet) goto $quitjob
  echo ' '
  echo "$space ... Compare $callarg to line(s) in file $refout":
  grep $callarg $testout
  if (`cat $testout | grep $callarg | wc | awk '{print $1}'` > 1) echo ' ---'
  gunzip -c $refout | grep $callarg
  goto $quitjob

# ---------------- runjob --------------
exit
runjob:
  set quitjob=$retcall
  if ($outfile == ".") then
    echo "$space $callarg"
    echo " "
    $callarg
    set retval = $status
  else
    if (`echo $outfile | awk '{print substr($1,1,2)}'` == '>>') then
      set appfile = `echo $outfile | awk '{print substr($1,3)}'`
      echo "$space $callarg  >> $appfile"
      $callarg >> $appfile
      set retval = $status
    else
      echo "$space $callarg  > $outfile"
      $callarg > $outfile
      set retval = $status
  endif
  if ($retval != 0) goto cleanup
  goto $quitjob


# ---------------- cleanup --------------
exit
cleanup:
  if ($retval != 0) echo "$space Program lm returned with error status $retval"
  if ($retval != 0) echo "$space ... $testfile aborting"
  exit $retval

# ---------------- query --------------
exit
query:
  unset skip
  if ($?slow != 0) then
    echo "$space"'*'"hit <return> to $callarg, s <return> to skip it."
    set a = ($<)
    if ($a == "") goto $retcall
    switch ($a)
      case "quit":
      case "q":
      case "a":
        exit
      case "i":
        unset slow
        breaksw
      case "s":
        set skip
        breaksw
      case "t":
        time
        goto query
      default:
        echo 'q to quit; i unsets slow; s skips this job, t shows time'
        goto query
    endsw
  endif
  if ($?skip) goto $retcall2
  goto $retcall

# ---------------- usage: --------------
usage:
cat <<EOF
 usage: test.nc [switches] [file-extension] [testcase-list]
        e.g., "test.nc co 1 2"
        If file-extension is missing, test.gf uses co
        Switches:
        --no-iactive runs tests without prompting user
        --quiet runs tests with minimal output and without prompting user
#       --verbose    script prints out extra information
EOF
exit -1

