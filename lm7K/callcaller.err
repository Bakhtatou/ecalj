WARNING while processing 'lmv7.F' (mode='fix')..
    4:      use m_struc_def
    5:      use m_rdctrl2_func, only: rdctrl2
    6:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
    5:      use m_rdctrl2_func, only: rdctrl2
    6:#if MPI | MPIK
    7:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
    7:#if MPE
    8:      use m_events !Event numbers: include "events.ins"
    9:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
    8:      use m_events !Event numbers: include "events.ins"
    9:#endif
   10:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   11:      implicit none
   12:      integer procid, master, mpipid, nproc
   13:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   12:      integer procid, master, mpipid, nproc
   13:#if MPI | MPIK
   14:      include "mpif.h" <== 'mpif.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   15:#if MPE
WARNING while processing 'lmv7.F' (mode='fix')..
   13:#if MPI | MPIK
   14:      include "mpif.h"
   15:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   14:      include "mpif.h"
   15:#if MPE
   16:      include "mpef.h" <== 'mpef.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   17:#endif
WARNING while processing 'lmv7.F' (mode='fix')..
   15:#if MPE
   16:      include "mpef.h"
   17:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   30:c      include "fp/events.ins"
   31:c#endif MPE
   32:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   34:C Heap allocation
   35:      integer wksize
   36:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   36:#if MPI | MPIK
   37:      parameter(wksize= 300 000 000)
   38:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   38:#else
   39:      parameter(wksize= 300 000 000)
   40:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   83:      parameter (T=.true., F=.false., NULLI=-99999)
   84:
   85:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   85:#if MPI | MPIK
   86:      integer fext
   87:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   88:
   89:C ... Program-dependent name and help
   90:#if LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   90:#if LMFGWD
   91:      data prgnam /'LMFGWD'/
   92:#elif LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   92:#elif LMF
   93:      data prgnam /'LMF'/
   94:#elif  LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   94:#elif  LMDOS
   95:      data prgnam /'LMDOS'/
   96:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  114:
  115:
  116:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  125:      write(*,*) 'mpi: size and id=',nsize,id
  126:cend-----
  127:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  134:      vn(2) = 0.00d0
  135:      vn2(2) = 0
  136:#if LMF | LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  138:      vn(2) = 7.00d0
  139:      vn2(2) = 0
  140:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  157:
  158:C --- Dynamic memory allocation and other initialization ---
  159:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  162:      namelen(procid) = i-1
  163:      mlog = cmdopt('--mlog',6,0,strn)
  164:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  194:      EVENT_START_BARRIER= MPE_LOG_GET_EVENT_NUMBER()
  195:      EVENT_END_BARRIER  = MPE_LOG_GET_EVENT_NUMBER()
  196:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  207:      call MPI_BCAST(ext,20,MPI_CHARACTER,master,MPI_COMM_WORLD,ierr)
  208:      if (procid .eq. master) then
  209:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  238:        ierr = MPE_DESCRIBE_STATE(EVENT_START_BARRIER,EVENT_END_BARRIER,
  239:     .  "barrier","yellow")
  240:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  262:      endif
  263:      call MPI_BARRIER( MPI_COMM_WORLD, ierr )
  264:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  279:      if (ext(j:j) .eq. '.') j=j-1
  280:      if (j .ge. i) call ptenv('EXT='//ext(i:j))
  281:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  284:C ... Abort with error message if ctrl file is missing (swtmp = .true.)
  285:      swtmp = .false.
  286:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  286:#if MPI | MPIK
  287:      if (procid .eq. master) then
  288:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  296:          endif
  297:        endif
  298:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  298:#if MPI | MPIK
  299:      endif
  300:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  346:        endif
  347:      endif
  348:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  350:      call MPI_BCAST(recrd,recln0*(nrecs+1),MPI_CHARACTER,
  351:     .master,MPI_COMM_WORLD,ierr)
  352:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  372:     .v_sarry,v_smove,v_stb,sstrn)
  373:
  374:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  373:
  374:#if MPI | MPIK
  375:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  376:      ierr = MPE_LOG_EVENT(EVENT_END_RDCTRL,procid,"rdctrl")
  377:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  378:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  378:#endif
  379:      call MPI_BARRIER( MPI_COMM_WORLD, ierr )
  380:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  380:#if MPE
  381:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  382:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  381:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  382:#endif
  383:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  396:      lc = 10
  397:
  398:#ifndef LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  401:c this is equivalent to
  402:c       if ( v_sctrl%lqp==0 ) lc = lc+2
  403:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  412:
  413:C ... Patch for now ... maybe replace
  414:#if LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  413:C ... Patch for now ... maybe replace
  414:#if LMF
  415:#ifndef LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  418:      ltet = iand(1,int(v_sctrl%lmet)) .ne.0 .or. iand(4+2+1,int(v_sctrl%ldos)) .ne.0
  419:      call mkqp(v_sctrl,v_sbz,v_slat,ltet,F,1,-2)
  420:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  419:      call mkqp(v_sctrl,v_sbz,v_slat,ltet,F,1,-2)
  420:#endif
  421:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  429:      endif
  430:
  431:#if LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  432:      call lmfp(prgnam,v_sbz,v_sctrl,v_sham,v_spot,v_slat,
  433:     .v_smix,v_sspec,v_ssite,v_sstr,v_smove,v_sarry,sstrn)
  434:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  437:C -------------- End of program -------------
  438: 1000 continue
  439:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  438: 1000 continue
  439:#if MPI | MPIK
  440:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  444:      call skp2bl(ext,20,i)
  445:      ierr = MPE_FINISH_LOG(ext(2:i))
  446:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  451:        call fexit(0,0,' ',0)
  452:      endif
  453:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  453:#else
  454:      call rx0(prgnam)
  455:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  455:#endif
  456:
  457:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  457:#if MPI|MPIK
  458:      call mpi_finalize(ierr)
  459:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
   82:      real(8),parameter::    NULLR =-99999
   83:cMay1 patch for MPI from y.Yoshimoto
   84:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
   83:cMay1 patch for MPI from y.Yoshimoto
   84:#if MPI|MPIK
   85:      include 'mpif.h' <== 'mpif.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   86:      integer ierr
WARNING while processing 'lmfav7.F' (mode='fix')..
   85:      include 'mpif.h'
   86:      integer ierr
   87:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
  109:      stdo = lgunit(1)
  110:      i = dglob('stdo',dble(stdo),1)
  111:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
  111:#if MPI|MPIK
  112:      call mpi_init(ierr)
  113:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
   55:
   56:C ... Program-dependent name and help
   57:#if  LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
   57:#if  LMDOS
   58:      data prgnam /'LMDOS'/
   59:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
   58:      data prgnam /'LMDOS'/
   59:#endif
   60:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
   60:#if LMCHK
   61:      data prgnam /'LMCHK'/ auxmod /1/
   62:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  144:c#endif
  145:c#if LM | LMDOS | LMGF
  146:#if LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  147:      i = fadd('MOMS',-1,4)
  148:      i = fadd('CLS',-1,4)
  149:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  231:
  232:C --- Read available class parameters from file ---
  233:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  239:     .call clsprp(1,v_sctrl,v_sarry,v_sham,v_spot,v_sspec,
  240:     .v_slat,v_sbz,v_sstr,sstrn)
  241:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  256:      endif
  257:
  258:#if LMCHK & FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  261:        call cexit(0,1)
  262:      endif
  263:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  263:#endif
  264:
  265:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  267:      call lmaux(prgnam,v_sctrl,v_sham,v_spot,v_slat,v_sspec,
  268:     .v_ssite,v_sstr,v_sarry,v_sbz,slabl,sstrn,auxmod,wksize)
  269:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  269:#endif
  270:
  271:#if LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7util.F' (mode='fix')..
  272:      call asados(prgnam,v_sbz,v_sctrl,v_sham,v_slat,
  273:     .v_sspec,v_ssite,v_sarry)
  274:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  116:      double precision vavg,wgt,alat,qlat(3,3),tpiba,vol
  117:      equivalence (n1,ngabc(1)),(n2,ngabc(2)),(n3,ngabc(3))
  118:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  120:      complex(8),allocatable:: evecc(:,:,:,:),work(:,:,:,:)
  121:      real(8),allocatable:: qpgv(:,:),qpg2v(:),ylv(:,:)
  122:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  122:#else
  123:      double precision qpgv,qpg2v,ylv
  124:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  123:      double precision qpgv,qpg2v,ylv
  124:#endif
  125:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  125:#if F90 | AUTO_ARRAY
  126:      double precision ewgt(ndimh*nspc*numq)
  127:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  129:      parameter(ndimx=1000)
  130:      double precision ewgt(3,ndimx)
  131:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  144:      call i8icopy(i_copy_size,slat%nabc,1,ngabc,1)
  145:
  146:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  146:#if ! (F90 | AUTO_ARRAY)
  147:      if (ndimhx.gt.ndimx) call rxi('addrbl: increase ndimx to',ndimh)
  148:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  168:      enddo
  169:      nlmax=(lmxax+1)**2
  170:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  180:        allocate(ylv(1,1),qpgv(1,1),qpg2v(1))
  181:      endif
  182:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  184:        call rx('require F90 for PW code')
  185:      endif
  186:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  277:          lswtk = -2
  278:        else
  279:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  295:          deallocate(evecc,work)
  296:        endif
  297:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  297:#else
  298:        lswtk = -2
  299:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  300:      endif
  301:
  302:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  302:#if F90
  303:      deallocate(qpgv,qpg2v,ylv)
  304:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
    5:
    6:      use m_struc_def  !Cgetarg
    7:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
    7:#if MPE
    8:      use m_events !Event numbers: include "events.ins"
    9:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   85:C     implicit none
   86:C ... Passed parameters
   87:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   86:C ... Passed parameters
   87:#if MPI
   88:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   87:#if MPI
   88:#if MPE
   89:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   90:#endif
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   88:#if MPE
   89:      include "mpef.h"
   90:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   89:      include "mpef.h"
   90:#endif
   91:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   92:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  103:      integer i,lgunit
  104:      character*120 strn
  105:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  135:c      integer ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0),norb
  136:c#endif
  137:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  143:      complex(8) ,allocatable :: hso_zv(:)
  144:
  145:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  153:      call tcn ('augmbl')
  154:
  155:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  161:      master = 0
  162:      mlog = cmdopt('--mlog',6,0,strn)
  163:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  163:#else
  164:      numprocs=1
  165:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  190:
  191:C --- Loop over augmentation sites --- ---
  192:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  191:C --- Loop over augmentation sites --- ---
  192:#if MPI
  193:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  193:#if MPE
  194:      ierr = MPE_LOG_EVENT(EVENT_START_AUGMBL,procid,"augmbl")
  195:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  209:      initbas=bproc(procid)
  210:      endbas =bproc(procid+1)-1
  211:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  212:      initbas=1
  213:      endbas=nbas
  214:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  215:
  216:      do  ia = initbas, endbas
  217:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  223:     .    procid,numprocs,bproc(procid),bproc(procid+1)-1)
  224:        endif
  225:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  290:
  291:C   --- Add 1-center and 2-center terms ---
  292:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  304:
  305:        endif
  306:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  305:        endif
  306:#else
  307:#ifndef ALL3C <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  315:     .    w(oppi(2,ia)),b,ndimh,nlmto,s,h,hso)
  316:        endif
  317:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  316:        endif
  317:#endif
  318:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  319:
  320:C   --- Add B+ sig B to S and B+ ppi B to H ---
  321:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  332:
  333:        endif
  334:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  340:     .    hso)
  341:        endif
  342:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  345:C ... end loop over ia
  346:      enddo
  347:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  346:      enddo
  347:#if MPI
  348:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  349:      ierr = MPE_LOG_EVENT(EVENT_END_AUGMBL,procid,"augmbl")
  350:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  351:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  351:#endif
  352:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  353:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  354:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  355:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  356:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  420:
  421:      deallocate(bproc, stat=ierr)
  422:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  422:#if MPE
  423:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  424:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  423:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  424:#endif
  425:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  479:      integer mode,ia,isp,kmax,nkaph,ndimh,nlma,lmxha,nlmha,iprmb(1)
  480:      integer nlmto
  481:      double precision
  482:     .sighh(nkaph,nkaph,0:lmxha,1), ppihh(nkaph,nkaph,nlmha,nlmha,1),
  483:     .sighp(nkaph,0:kmax,0:lmxha,1),ppihp(nkaph,0:kmax,nlmha,nlma,1) <== no parse pattern found for "double precisionsighh(F2PY_EXPR_TUPLE_1106), ppihh(F2PY_EXPR_TUPLE_1107),sighp(F2PY_EXPR_TUPLE_1108),ppihp(F2PY_EXPR_TUPLE_1109)" in 'Subroutine' block.
  484:      double complex b(0:kmax,nlma,ndimh),s(ndimh,ndimh),h(ndimh,ndimh)
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  614:      integer mode,mode1,ia,isp,kmax,nkaph,nlma,lmxha,nlmha,iprmb(1),
  615:     .ndimh,nlmto
  616:      double precision
  617:     .sighh(nkaph,nkaph,0:lmxha,1),sighp(nkaph,0:kmax,0:lmxha,1) <== no parse pattern found for "double precisionsighh(F2PY_EXPR_TUPLE_1158),sighp(F2PY_EXPR_TUPLE_1159)" in 'Subroutine' block.
  618:      double complex
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  616:      double precision
  617:     .sighh(nkaph,nkaph,0:lmxha,1),sighp(nkaph,0:kmax,0:lmxha,1)
  618:      double complex
  619:     .ppihh(nkaph,nkaph,nlmha,nlmha,isp+2*mode1),
  620:     .ppihp(nkaph,0:kmax,nlmha,nlma,isp+2*mode1) <== no parse pattern found for "double complexppihh(F2PY_EXPR_TUPLE_1160),ppihp(F2PY_EXPR_TUPLE_1161)" in 'Subroutine' block.
  621:      double complex b(0:kmax,nlma,ndimh),s(ndimh,ndimh),
WARNING while processing 'fp/bndfp.F' (mode='fix')..
    9:      use m_struc_def
   10:
   11:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
   11:#if MPI | MPIK
   12:      use m_events !Event numbers: include "events.ins"
   13:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  179:C ... Passed parameters
  180:      logical :: llmfgw
  181:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  180:      logical :: llmfgw
  181:#if MPI | MPIK
  182:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  183:#if MPE
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  181:#if MPI | MPIK
  182:      include "mpif.h"
  183:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  182:      include "mpif.h"
  183:#if MPE
  184:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  185:#endif
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  183:#if MPE
  184:      include "mpef.h"
  185:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  194:      integer namelen(0:MAX_PROCS-1)
  195:      double precision starttime, endtime
  196:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  196:#if MPI
  197:      integer dims(2)
  198:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  197:      integer dims(2)
  198:#endif
  199:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  201:      integer:: pidorigin, ndimhx_iq, nev_iq
  202:      integer:: work_mpi(10)  ! use only 1 and 2 now
  203:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  206:c      include "events.ins"
  207:c#endif
  208:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  335:      !for 'make check',
  336:      !because fp/test/test.fp assumes 'something not inserted in console output'.
  337:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  340:      integer, dimension(:),allocatable :: kpproc
  341:      double precision sttime,entime
  342:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  400:      master = 0
  401:      mlog = cmdopt('--mlog',6,0,strn)
  402:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  405:      call strcop(shortname(procid),name,10,'.',i)
  406:      namelen(procid) = i-1
  407:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  493:      lpdiag = isw(cmdopt('--pdiag',7,0,strn))
  494:
  495:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  495:#if MPIK
  496:      lpdiag = 0
  497:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  519:
  520:
  521:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  535:        endif
  536:      endif
  537:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  815:          ef0 = eferm
  816:        endif
  817:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  820:
  821:        endif
  822:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1022:        iopq = 0
 1023:C       suqlst in MPIK mode; returns cumulative number of k-points
 1024:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1024:#if MPIK
 1025:        iopq = 2
 1026:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1048:
 1049:C MPIK: Setup to assemble all k-points into single list with qp table
 1050:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1090:        endif
 1091:        call mpibc1(w(oqp),3*nkp,4,.false.,'bndfp','qp')
 1092:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1300:C     evl is dimensioned evl(ndham,2)
 1301:C     w(oevl), w(owtkb), w(oswtk) are dimensioned (ndham,nsp,nkp)
 1302:#if MPE & MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1302:#if MPE & MPIK
 1303:      ierr = MPE_LOG_EVENT(EVENT_START_KLOOP,procid,"k-loop")
 1304:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1304:#endif
 1305:
 1306:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1321:c          endif
 1322:c        endif
 1323:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1325:      iqini=1
 1326:      iqend=nkp
 1327:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1328:
 1329:      do 2010 iq = iqini, iqend
 1330:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1338:          endif
 1339:        endif
 1340:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1343:
 1344:
 1345:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1353:c        endif
 1354:        qp=qplist(:,iq)
 1355:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1355:#else
 1356:        call dpscop(w(oqp),qp,3,3*iq-2,1,1d0) !this should be modified as in non-MPIK mode.
 1357:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1849:
 1850:            if (mod(iq,10) .ne. 1) call pshpr(iprint()-6)
 1851:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1853:     .      '%?#n#   ndimh = %i##',
 1854:     .      iq,nkp,qp,mod(pwmode/10,10),ndimh)
 1855:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1977:            if(debug) print *,'iq isp nevls=',iq,isp,nevls(iq,isp)
 1978:
 1979:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1994:
 1995:            endif
 1996:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1998:
 1999:C ...  In k-parallel mode, defer this section until all qp available
 2000:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2005:            if (lmet .eq. 0 .and. iq .eq. 1 .and. jsp .eq. 1) ef0 = evtop
 2006:            if (plbnd .eq. 0) then
 2007:#if ! (MPI | MPIK | MPE) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2009:     .        write (stdl,712) (evl(i,jsp),i=1,nev)
 2010:  712         format('fp evl',8f8.4)
 2011:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2041:              endif
 2042:            endif
 2043:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2050:              call dpscop(evl(1,jsp),w(oevl),ndhamx,
 2051:     .        1,1+ndham*(jsp-1+isqp),1d0)
 2052:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2056:
 2057:              endif
 2058:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2092:                if (procid .eq. master) then
 2093:                  if (cmdopt('--mull',6,0,strn)) then
 2094:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2094:#if MPIK
 2095:                    call rx('MULL not k-parallel.')
 2096:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2115:
 2116:                  elseif (cmdopt('--pdos',6,0,strn)) then
 2117:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2117:#if MPIK
 2118:                    call rx('PDOS not k-parallel.')
 2119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2135:
 2136:                    call iomomn(.true.,2,.false.,1,nspc,1,1,i)
 2137:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2140:     .              ( 1 , jsp ) , 0d0 , doswt_rv , 0d0 , 0d0 , 0d0 )
 2141:
 2142:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2145:     .              ) , 0d0 , doswt_rv , 0d0 , 0d0 , 0d0 )
 2146:
 2147:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2187:              if (icls .ne. 0 .and. lwtkb .ne. -1) then
 2188:                call rxx(nspc.ne.1,'CLS not implemented in noncoll case')
 2189:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2189:#if MPI
 2190:                call rx('CLS only k-parallel')
 2191:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2211:C  399     format(' after addrbl: frc(3,1)=',i4,2f12.6)
 2212:              endif
 2213:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2233:
 2234:              endif
 2235:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2243:
 2244:              endif
 2245:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2324:C --- Second loop over qp, needed to make k-parallelisation possible: ---
 2325:C     You can't do this until you have all the evals.
 2326:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2325:C     You can't do this until you have all the evals.
 2326:#if MPIK
 2327:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2327:#if MPE
 2328:      ierr = MPE_LOG_EVENT(EVENT_END_KLOOP,procid,"k-loop")
 2329:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2569:ckino 05Feb09
 2570:      if (allocated(kpproc)) deallocate(kpproc, stat=ierr)
 2571:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2958:
 2959:        call upacks('strn mix',i1,i2)
 2960:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2960:#if MPE
 2961:        ierr = MPE_LOG_EVENT(EVENT_START_MIXRHO,procid,"mixrho")
 2962:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2975:ccccccccccccccccccccccccc
 2976:
 2977:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2977:#if MPE
 2978:        ierr = MPE_LOG_EVENT(EVENT_END_MIXRHO,procid,"mixrho")
 2979:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 3008:c      call xxxbfp ! Patch to avoid PGI compiler bug on AMD processor
 3009:      if (allocated(ifbls_iv)) deallocate(ifbls_iv)
 3010:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 3010:#if MPIK
 3011:      call rlse(oqp)
 3012:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 3017:
 3018:
 3019:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 3037:C ----------------------------------------------------------------------
 3038:      implicit none
 3039:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
 3040:C ... Passed parameters
 3041:      integer kpproc(0:*),ndham,nkp,nsp
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 3086:      end subroutine xmpbnd
 3087:
 3088:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
   76:      integer ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0)
   77:      double precision p(3),xx,alat,qlat(3,3),vol,srvol
   78:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  135:            endif
  136:
  137:#ifndef ALL3C <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  140:              call paugq2(kmax,nlmh,nlma,bos,b0)
  141:            endif
  142:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  169:      endif
  170:
  171:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  171:#else
  172:      call rx('bstrux requires F90')
  173:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  285:      if (napw .eq. 0) return
  286:
  287:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  426:C     deallocate(fac2l,yl,bpw)
  427:
  428:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  428:#else
  429:      call rx('bstrux requires F90')
  430:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  223:C 306 format(' Failed to parse string ',a,' ... try again.')
  224:  100 continue
  225:#if PRTNOCR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  225:#if PRTNOCR
  226:      print '(/'' Option : '',$)'
  227:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  227:#else
  228:      print '(/'' Option : '')'
  229:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
    2:     .orhoat,orhat1,elind,qmom,smrho,smrout,dfh)
    3:      use m_struc_def  !Cgetarg
    4:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
    4:#if MPE
    5:      use m_events !Event numbers: include "events.ins"
    6:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   54:C     implicit none
   55:C ... Passed parameters
   56:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   55:C ... Passed parameters
   56:#if MPI | MPIK
   57:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   58:#if MPE
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   56:#if MPI | MPIK
   57:      include "mpif.h"
   58:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   57:      include "mpif.h"
   58:#if MPE
   59:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   60:#endif
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   58:#if MPE
   59:      include "mpef.h"
   60:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   70:      double precision starttime, endtime
   71:      logical mlog,cmdopt
   72:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  106:      parameter (npmx=32)
  107:      integer oicdn(npmx),oicdn0(npmx),oicdv(npmx),oics(npmx),oisn(npmx)
  108:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  109:      integer, dimension(:), allocatable :: bproc, iiv0
  110:      integer pid,jb
  111:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  126:      call tcn('dfrce')
  127:
  128:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  142:        enddo
  143:      endif
  144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  338:
  339:C --- For each site, get correction to force ---
  340:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  345:        write(stdo,201) strn
  346:      endif
  347:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  353:
  354:C ... Setup array iiv0 = (vector of iv0 for parallel); allocate work arrays
  355:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  365:        iv0 = iv0+nlm
  366:   12 continue
  367:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  393:C$&        SHARED (job,ng,iiv0,ocnomi,ocvin,ocdvx)
  394:C$&        MP_SCHEDTYPE=RUNTIME
  395:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  394:C$&        MP_SCHEDTYPE=RUNTIME
  395:#if MPI | MPIK
  396:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  396:#if MPE
  397:      ierr = MPE_LOG_EVENT(EVENT_START_DFRCE,procid,"dfrce")
  398:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  401:      ibini = bproc(procid)
  402:      ibend = bproc(procid+1)-1
  403:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  404:      ibini=1
  405:      ibend=nbas
  406:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  407:
  408:      do  ib = ibini, ibend
  409:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  416:        endif
  417:        iv0 = iiv0(ib)
  418:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  448:        enddo
  449:
  450:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  453:     .  (c*fxc(m),m=1,3),(c*dfh(m,ib),m=1,3)
  454:  200   format(i4,3f8.2,1x,3f8.2,1x,3f8.2:1x,3f8.2)
  455:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  458:   20   continue
  459:      enddo
  460:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  459:      enddo
  460:#if MPI | MPIK
  461:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  462:      ierr = MPE_LOG_EVENT(EVENT_END_DFRCE,procid,"dfrce")
  463:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  464:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  464:#endif
  465:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  466:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  467:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  468:      ierr = MPE_LOG_EVENT(EVENT_START_BCAST,procid,"broadcast")
  469:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  486:      deallocate (bproc, stat=ierr)
  487:      deallocate (iiv0, stat=ierr)
  488:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  488:#if MPE
  489:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  490:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  489:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  490:#endif
  491:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  497:
  498:C ... MPI printout
  499:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  508:  202   format(i4,50x,3f8.2)
  509:      endif
  510:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   36:      double complex fsm(nlm0),gklsav,gklnew
   37:      parameter (faca=1d0)
   38:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   38:#if F90
   39:      real(8),allocatable:: wk(:),yl(:)
   40:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   78:      call shorbz(p,p1,plat,qlat)
   79:      nrx = max(nkd,nkq)
   80:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   90:      endif
   91:      deallocate(wk,yl)
   92:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
  103:      endif
  104:      call rlse(owk)
  105:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/flocbl.F' (mode='fix')..
  180:C ... Passed parameters
  181:      integer ia,kmax,lcplxp,nkaph,nlma,nlmha,nlmto,iprmb(1)
  182:      double precision
  183:     .evl,sighp(nkaph,0:kmax,0:1),ppihp(nkaph,0:kmax,nlmha,nlma),
  184:     .sigpp(0:kmax,0:kmax,0:1),ppipp(0:kmax,0:kmax,nlma,nlma) <== no parse pattern found for "double precisionevl,sighp(F2PY_EXPR_TUPLE_3907),ppihp(F2PY_EXPR_TUPLE_3908),sigpp(F2PY_EXPR_TUPLE_3909),ppipp(F2PY_EXPR_TUPLE_3910)" in 'Subroutine' block.
  185:      double complex wk(0:kmax,nlma),evec(1),cPkL(0:kmax,nlma)
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
    3:
    4:      use m_struc_def  !Cgetarg
    5:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
    5:#if MPE
    6:      use m_events !Event numbers: include "events.ins"
    7:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   43:C     implicit none
   44:C ... Passed parameters
   45:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   44:C ... Passed parameters
   45:#if MPI
   46:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   45:#if MPI
   46:#if MPE
   47:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   48:#endif
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   46:#if MPE
   47:      include "mpef.h"
   48:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   47:      include "mpef.h"
   48:#endif
   49:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   50:      integer pid, procid, master, numprocs, ierr,
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   61:      logical mlog,cmdopt
   62:      character*120 strn
   63:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   88:      double complex  s(nlms,nlms,0:k0,nkap0,nkap0)
   89:      double complex ds(nlms,nlms,0:k0,3,nkap0,nkap0),ccc,sum
   90:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   93:      integer, dimension(:,:), allocatable :: index
   94:      integer iloop,ib
   95:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  103:      call tcn ('fsmbl')
  104:
  105:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  121:        enddo
  122:      endif
  123:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  132:
  133:C --- Loop over first and second site indices ---
  134:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  133:C --- Loop over first and second site indices ---
  134:#if MPI
  135:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  135:#if MPE
  136:      ierr = MPE_LOG_EVENT(EVENT_START_FSMBL,procid,"fsmbl")
  137:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  140:c      do  iloop = 1, index(procid,0)
  141:      iloopend=index(procid,0)
  142:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  142:#else
  143:      iloopend=nbas
  144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  146:
  147:      do  iloop = 1, iloopend
  148:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  155:     .    procid,numprocs,ib1,index(procid,0))
  156:        endif
  157:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  157:#else
  158:        ib1=iloop
  159:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  230:                      do  iq = 1, numq
  231:                        wt = ewgt(iq,ivec)
  232:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  233:                        xf(m,ib1,iq) = xf(m,ib1,iq) - 2*wt*sum
  234:                        xf(m,ib2,iq) = xf(m,ib2,iq) + 2*wt*sum
  235:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  236:                        f(m,ib1,iq) = f(m,ib1,iq) - 2*wt*sum
  237:                        f(m,ib2,iq) = f(m,ib2,iq) + 2*wt*sum
  238:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  249:      enddo
  250:
  251:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  250:
  251:#if MPI
  252:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  253:      ierr = MPE_LOG_EVENT(EVENT_END_FSMBL,procid,"fsmbl")
  254:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  255:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  255:#endif
  256:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  257:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  258:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  259:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  260:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  271:      call daxpy(3*nbas*numq,1d0,buffer,1,f,1)
  272:      deallocate(buffer, stat=ierr)
  273:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  273:#if MPE
  274:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  275:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  275:#endif
  276:      deallocate(index, stat=ierr)
  277:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
    3:
    4:      use m_struc_def  !Cgetarg
    5:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
    5:#if MPE
    6:      use m_events !Event numbers: include "events.ins"
    7:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   43:C     implicit none
   44:C ... Passed parameters
   45:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   44:C ... Passed parameters
   45:#if MPI
   46:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   47:#if MPE
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   45:#if MPI
   46:      include "mpif.h"
   47:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   46:      include "mpif.h"
   47:#if MPE
   48:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   49:#endif
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   47:#if MPE
   48:      include "mpef.h"
   49:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   61:      logical mlog,cmdopt
   62:      character*120 strn
   63:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   85:      double complex phase,srm1,fach,ovl,ccc(3),sum,srm1l(0:n0)
   86:      parameter (srm1=(0d0,1d0))
   87:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   90:      integer, dimension(:,:), allocatable :: index
   91:      integer iloop,ib
   92:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  100:      call tcn ('fsmbpw')
  101:
  102:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  118:        enddo
  119:      endif
  120:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  130:
  131:C --- Loop over first and second site indices ---
  132:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  131:C --- Loop over first and second site indices ---
  132:#if MPI
  133:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  133:#if MPE
  134:      ierr = MPE_LOG_EVENT(EVENT_START_FSMBPW,procid,"fsmbpw")
  135:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  139:      ibini=1
  140:      ibend=index(procid,0)
  141:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  143:      ibini=1
  144:      ibend=nbas
  145:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  146:
  147:      do iloop = ibini,ibend
  148:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  155:     .    procid,numprocs,ib1,index(procid,0))
  156:        endif
  157:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  157:#else
  158:        ib1=iloop
  159:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  206:                    do  iq = 1, numq
  207:                      wt = ewgt(iq,ivec)
  208:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  208:#if MPI
  209:                      xf(m,ib1,iq) = xf(m,ib1,iq) - 2*wt*sum
  210:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  210:#else
  211:                      f(m,ib1,iq) = f(m,ib1,iq) - 2*wt*sum
  212:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  220:        enddo                   !ig
  221:      enddo                     !ib1
  222:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  221:      enddo                     !ib1
  222:#if MPI
  223:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  224:      ierr = MPE_LOG_EVENT(EVENT_END_FSMBPW,procid,"fsmbpw")
  225:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  226:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  226:#endif
  227:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  228:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  229:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  230:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  231:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  242:      call daxpy(3*nbas*numq,1d0,buffer,1,f,1)
  243:      deallocate(buffer, stat=ierr)
  244:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  244:#if MPE
  245:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  246:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  247:      deallocate(index, stat=ierr)
  248:      deallocate(xf, stat=ierr)
  249:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  219:     .qm(nf1*nf2*(lmx1+1)*(lmx2+1)*(lmxl+1)),
  220:     .sum((lmx1+1)*(lmx2+1)*nlml)
  221:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  221:#if F90
  222:      complex(8),allocatable:: hso(:,:,:,:,:,:),ppiz(:,:,:,:,:,:)
  223:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  224:      double complex hso(nf1,nf2,nlx1,nlx2,2,2)
  225:      double complex ppiz(nf1,nf2,nlx1,nlx2,2,2)
  226:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  225:      double complex ppiz(nf1,nf2,nlx1,nlx2,2,2)
  226:#endif
  227:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  231:      data kount /0/
  232:      kount = kount + 1
  233:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  238:      nspc = nglob('nspc')
  239:
  240:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  240:#if F90
  241:      allocate(hso(nf1,nf2,nlx1,nlx2,2,2),ppiz(nf1,nf2,nlx1,nlx2,2,2))
  242:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  333:C     stdo = 88
  334:
  335:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  338:        i1 = fopna('ppi',-1,4)
  339:        write(i1) ppi
  340:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  408:C     pause
  409:
  410:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  410:#if F90
  411:      deallocate(hso,ppiz)
  412:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   43:     .icg,lm,ip,nlmxx
   44:      double precision dr(3),gamh,gamg,rsmx,cz,cx1,cx2,cy1,cy2,fac
   45:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   45:#if F90
   46:      complex(8),allocatable:: hkl(:,:),ghkl(:,:,:)
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   48:      parameter (nlm0=196, ktop0=7)
   49:      double complex hkl(0:ktop0,nlm0),ghkl(0:ktop0,nlm0,3)
   50:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   66:
   67:C     Memory allocation
   68:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   70:      ktop0 = ktopp1
   71:      allocate(hkl(0:ktop0,nlm0),ghkl(0:ktop0,nlm0,3))
   72:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
  127:   11 continue
  128:
  129:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
  129:#if F90
  130:      deallocate(hkl,ghkl)
  131:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   43:      integer nlm0,ktop0,icg,icg1,icg2,ii,ilg,ilh,ilm,indx,ip,jlm,k,
   44:     .ktop,lg,lh,ll,lm,lmaxg,lmaxh,lmaxx,m,nlmx,l1,l2,ilm1,ilm2
   45:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   45:#if F90
   46:      complex(8),allocatable:: hkl(:,:)
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   48:      parameter (nlm0=144, ktop0=21)
   49:      double complex hkl(0:ktop0,nlm0)
   50:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   63:      ktop = max0(lmaxg,lmaxh)+kmax
   64:
   65:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   67:      nlm0  = nlmx
   68:      allocate( hkl(0:ktop0,nlm0))
   69:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   70:      if (nlmx .gt. nlm0)  call rxi('ghibl: increase nlm0 to',nlmx)
   71:      if (ktop .gt. ktop0) call rxi('ghibl: increase ktop0 to',ktop)
   72:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
  116:   20 continue
  117:
  118:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
  118:#if F90
  119:      deallocate(hkl)
  120:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   46:     .ktop0,l1,l2,lg,lh,ll,lm,lmaxg,lmaxh,lmaxx,m,nlm0,nlmx
   47:      double precision ee,fac,gamg,gamh,rsmx,dr(3),e,rsm
   48:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   48:#if F90
   49:      complex(8),allocatable:: hkl(:,:),dhkl(:,:,:)
   50:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   51:      parameter (nlm0=144, ktop0=20)
   52:      double complex hkl(0:ktop0,nlm0),dhkl(0:ktop0,nlm0,3)
   53:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   65:      ktop = max0(lmaxg,lmaxh)+kmax
   66:
   67:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   69:      nlm0  = (lmaxx+2)**2
   70:      allocate( hkl(0:ktop0,nlm0),dhkl(0:ktop0,nlm0,3))
   71:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   72:      if (nlmx .gt. nlm0)  call rxi('ghigbl: increase nlm0 to',nlmx)
   73:      if (ktop .gt. ktop0) call rxi('ghigbl: increase ktop0 to',ktop)
   74:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
  125:   20 continue
  126:
  127:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
  127:#if F90
  128:      deallocate(hkl,dhkl)
  129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   32:      integer ilm,k,ll,lmax,nkd,nkq,odlv,oqlv,owk,l,m
   33:      double precision alat,awald,pi,sp,vol,plat(9),qlat(9),p1(3),rwald
   34:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   34:#if F90
   35:      real(8),allocatable:: wk(:)
   36:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   71:        call gklblq(p1,rsm,q,kmax,nlm,k0,alat,w(oqlv),nkq,vol,gkl)
   72:      else
   73:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   75:        call gklbld(p1,rsm,q,kmax,nlm,k0,alat,w(odlv),nkd,wk,gkl)
   76:        deallocate(wk)
   77:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   79:        call gklbld(p1,rsm,q,kmax,nlm,k0,alat,w(odlv),nkd,w(owk),gkl)
   80:        call rlse(owk)
   81:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  757:        endif
  758:
  759:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  762:        allocate(zqi(ndimh,ndimh))
  763:        allocate(z0(ndimh,ndimh))
  764:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  764:#else
  765:        if (nsim .gt. 1) call rx('compile hambls with F90 option')
  766:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  821:        enddo
  822:
  823:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  823:#if F90
  824:        deallocate(hqi,sqi,zqi,z0)
  825:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  906:      double precision eterms(20),rhosig,swgt
  907:      equivalence (eterms(19),rhosig)
  908:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  908:#if F90
  909:      complex(8),allocatable:: wk(:,:,:,:)
  910:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  910:#else
  911:      double complex wk(ndimh,nspc,ndimh,nspc)
  912:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  939:      ndimhx = ndimh*nspc
  940:
  941:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  941:#if F90
  942:      allocate(wk(ndimh,nspc,ndimh,nspc))
  943:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1013:      endif
 1014:
 1015:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1015:#if F90
 1016:      deallocate(wk)
 1017:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1178:      parameter (zer=(0d0,0d0),one=(1d0,0d0))
 1179:      integer i,j,k
 1180:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1180:#if F90
 1181:      integer ipiv(ndimh)
 1182:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1182:#elif AUTO_ARRAY
 1183:      integer ipiv(ndimh)
 1184:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1185:      integer ipiv
 1186:      call rx('phmbls: requires compiler with allocatable arrays')
 1187:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   42:      common /w/ w
   43:
   44:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   44:#if F90
   45:      real(8),allocatable:: wk(:),yl(:)
   46:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   84:
   85:      nrx = max(nkd,nkq)
   86:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   98:      endif
   99:      deallocate(wk,yl)
  100:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
  111:      endif
  112:      call rlse(owk)
  113:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
    1:#define SGI 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
    3:     .napw,igapw,h)
    4:      use m_struc_def  !Cgetarg
    5:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
    5:#if MPE
    6:      use m_events !Event numbers: include "events.ins"
    7:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   57:C ----------------------------------------------------------------------
   58:      implicit none
   59:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   58:      implicit none
   59:#if MPI
   60:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   59:#if MPI
   60:#if MPE
   61:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   62:#endif
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   60:#if MPE
   61:      include "mpef.h"
   62:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   61:      include "mpef.h"
   62:#endif
   63:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   64:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   75:      integer lgunit
   76:      character*120 strn
   77:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  128:      integer ig1,i1,ig2,i2,igx(3),igx1,igx2,igx3,oiv1
  129:C$    integer mp_numthreads,mp_my_threadnum
  130:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  131:      double precision, dimension(:), allocatable :: buffer
  132:      integer, dimension(:,:), allocatable :: index
  133:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  145:      call tcn('hsibl')
  146:
  147:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  153:      master = 0
  154:      mlog = cmdopt('--mlog',6,0,strn)
  155:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  238:C$    if (mp .gt. npmx) call rxi('hsibl: increase npmx, needed',mp)
  239:        do  ip = 1, min(mp,nbas)
  240:#if SGI | MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  241:          call defcc(oic1(ip),   ng*ndimx)
  242:          call defcc(oicf1(ip),  nhblk*ndimx)
  243:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  244:          call defcc(oic1(ip),   ng*nhblk)
  245:          call defcc(oicf1(ip),  nhblk)
  246:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  264:C$&       SHARED(nbas,n1,n2,n3,k1,k2,k3,ng,vol,ndimh,oiv)
  265:C$&       MP_SCHEDTYPE=RUNTIME
  266:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  265:C$&       MP_SCHEDTYPE=RUNTIME
  266:#if MPI
  267:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  267:#if MPE
  268:        ierr = MPE_LOG_EVENT(EVENT_START_HSIBL,procid,"hsibl")
  269:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  277:        ibini=1
  278:        ibend=index(procid,0)
  279:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  281:        ibini=1
  282:        ibend=nbas
  283:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  284:
  285:        do  iloop = ibini,ibend
  286:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  293:     .      procid,numprocs,ib1,index(procid,0))
  294:          endif
  295:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  295:#else
  296:          ib1=iloop
  297:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  407:
  408:C     ... Add to hamiltonian
  409:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  411:     .      offl2 , ndim2 , ndimh , wk2_zv , h_zv )
  412:
  413:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  416:     .      offl2 , ndim2 , ndimh , wk2_zv , h )
  417:
  418:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  424:
  425:C   ... Matrix elements <Hsm| Vsm |PW>
  426:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  428:     .    , napw , igapw , w ( oc1 ) , w ( ocf1 ) , h_zv )
  429:
  430:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  432:     .    , napw , igapw , w ( oc1 ) , w ( ocf1 ) , h )
  433:
  434:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  437:        enddo
  438:
  439:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  438:
  439:#if MPI
  440:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  441:        ierr = MPE_LOG_EVENT(EVENT_END_HSIBL,procid,"hsibl")
  442:        ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  443:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  443:#endif
  444:        call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  445:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  446:        ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  447:        ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  448:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  467:
  468:        deallocate(index, stat=ierr)
  469:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  469:#if MPE
  470:        ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  471:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  470:        ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  471:#endif
  472:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  603:      integer i,i1,i2,ncut
  604:      double complex csum
  605:#if NBAR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  607:      double precision xx
  608:      double complex wk(n1,n2)
  609:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  608:      double complex wk(n1,n2)
  609:#endif
  610:#if CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  610:#if CRAY
  611:      double complex wk(n1)
  612:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  614:      call tcn('hsibl2')
  615:
  616:#if NBAR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  641:        enddo
  642:      enddo
  643:#elif CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  657:        enddo
  658:      enddo
  659:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  669:        enddo
  670:      enddo
  671:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   50:      integer ndim1,ndim2,ktop0,ilmg,ilmh,k,l,ll,lmaxg,m,nm
   51:      double precision a,dfact,eg,fac,factk,fpi
   52:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   52:#if F90
   53:      complex(8),allocatable:: s(:,:,:)
   54:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   55:      parameter (ndim1=49, ndim2=36, ktop0=20)
   56:      double complex s(ndim1,ndim2,0:ktop0)
   57:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   60:      fpi = 16d0*datan(1d0)
   61:C     Memory allocation
   62:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   65:      ktop0 = kmax
   66:      allocate(s(ndim1,ndim2,0:ktop0))
   67:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   99:  1   continue
  100:
  101:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
  101:#if F90
  102:      deallocate(s)
  103:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   49:      integer ndim1,ndim2,ktop0,ilmg,ilmh,k,l,ll,lmaxg,m,nm
   50:      double precision a,dfact,eg,fac,factk,fpi
   51:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   51:#if F90
   52:      complex(8),allocatable:: s(:,:,:),ds(:,:,:,:)
   53:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   54:      parameter (ndim1=49, ndim2=36, ktop0=20)
   55:      double complex s(ndim1,ndim2,0:ktop0),ds(ndim1,ndim2,0:ktop0,3)
   56:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   59:      fpi = 16d0*datan(1d0)
   60:C     Memory allocation
   61:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   64:      ktop0 = kmax
   65:      allocate(s(ndim1,ndim2,0:ktop0),ds(ndim1,ndim2,0:ktop0,3))
   66:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   99:  1   continue
  100:
  101:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
  101:#if F90
  102:      deallocate(s,ds)
  103:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   35:      integer ndim,ktop0,ilm,k,l,ll,lmax,m,nm
   36:      double precision a,dfact,eg,fac,factk,fpi,sig
   37:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   37:#if F90
   38:      real(8),allocatable:: s(:,:)
   39:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   40:      parameter ( ndim=25, ktop0=25 )
   41:      double precision s(ndim,0:ktop0)
   42:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   45:      fpi = 16d0*datan(1d0)
   46:
   47:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   49:      ndim  = nlmh
   50:      allocate(s(ndim,0:ktop0))
   51:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   52:      if (kmax .gt. ktop0) call rxi('hxpos: increase ktop0, need',kmax)
   53:      if (nlmh .gt. ndim)   call rxi('hxpos: increase ndim, need', nlmh)
   54:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   84:      enddo
   85:
   86:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   86:#if F90
   87:      deallocate(s)
   88:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  160:      real(8):: pnu(20),bz_w
  161:      logical :: llmfgw
  162:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  162:#if MPI
  163:      integer:: ierr
  164:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  165:#endif
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  163:      integer:: ierr
  164:      include "mpif.h"
  165:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  199:      mlog = cmdopt('--mlog',6,0,strn)
  200:ckino. Mark says nproc <= nbas should be for MPI.
  201:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  220:c             ---------- may be stop is unnecessary.
  221:      endif
  222:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/makusp.F' (mode='fix')..
  112:
  113:C   ... Scale gz so that <|gz-P(g,gp)|^2> = 1
  114:#if SCALEGZ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/makusp.F' (mode='fix')..
  120:            dphz = dphz/D
  121:          endif
  122:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  170:C     implicit none
  171:C ... Passed parameters
  172:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  171:C ... Passed parameters
  172:#if MPI | MPIK
  173:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  174:      integer numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  185:      character*120 strn
  186:      logical mlog,cmdopt
  187:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  268:
  269:
  270:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  276:      master = 0
  277:      mlog = cmdopt('--mlog',6,0,strn)
  278:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  279:      procid = 0
  280:      master = 0
  281:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  642:        rewind ifi
  643:      endif
  644:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  651:     .  256,lgunit(3),procid,numprocs,ifi)
  652:      endif
  653:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1368:C     implicit none
 1369:C ... Passed parameters
 1370:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1369:C ... Passed parameters
 1370:#if MPI | MPIK
 1371:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
 1372:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1384:      integer iunit
 1385:      logical readerror
 1386:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1408:      common /w/ w
 1409:
 1410:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1416:      master = 0
 1417:      mlog = cmdopt('--mlog',6,0,strn)
 1418:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1584:C   ... File I/O of previous iterations; nmixr is number actually read
 1585:        nmixr = 0
 1586:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1605:  130   continue
 1606:  131   continue
 1607:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1679:        endif
 1680:   31   continue
 1681:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1694:C --- Save iterations on disk ---
 1695:      else
 1696:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1696:#if MPI | MPIK
 1697:        if (procid .eq. master) then
 1698:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1710:          enddo
 1711:C       call prm('a after write',a,nda*nsp,nda*nsp,(mxsav+2)*2)
 1712:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1712:#if MPI | MPIK
 1713:        endif
 1714:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  165:      integer w(1)
  166:      common /w/ w
  167:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  167:#if DEBUG
  168:      integer fopna
  169:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  187:
  188:C     call zprm3('sm rho-out',0,smrho,k1,k2,k3*nsp)
  189:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  191:      is = fopna('ppi',-1,4)
  192:      rewind is
  193:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  304:      integer kmax,lmxa,nlma,lmxh,nlmh,nsp,nspc,lcplxp,lso
  305:      integer nkaph,norb,ltab(norb),ktab(norb),blks(norb)
  306:      double precision
  307:     .tauhh(nkaph,nkaph,0:lmxh,1),sighh(nkaph,nkaph,0:lmxh,1),
  308:     .tauhp(nkaph,0:kmax,0:lmxh,1),sighp(nkaph,0:kmax,0:lmxh,1),
  309:     .taupp(0:kmax,0:kmax,0:lmxa,1),sigpp(0:kmax,0:kmax,0:lmxa,1),
  310:     .ppihh(nkaph,nkaph,nlmh,nlmh,1),qhh(nkaph,nkaph,nlmh,nlmh,1),
  311:     .ppihp(nkaph,0:kmax,nlmh,nlma,1),qhp(nkaph,0:kmax,nlmh,nlma,1),
  312:     .ppipp(0:kmax,0:kmax,nlma,nlma,1),qpp(0:kmax,0:kmax,nlma,nlma,1) <== no parse pattern found for "double precisiontauhh(F2PY_EXPR_TUPLE_10202),sighh(F2PY_EXPR_TUPLE_10203),tauhp(F2PY_EXPR_TUPLE_10204),sighp(F2PY_EXPR_TUPLE_10205),taupp(F2PY_EXPR_TUPLE_10206),sigpp(F2PY_EXPR_TUPLE_10207),ppihh(F2PY_EXPR_TUPLE_10208),qhh(F2PY_EXPR_TUPLE_10209),ppihp(F2PY_EXPR_TUPLE_10210),qhp(F2PY_EXPR_TUPLE_10211),ppipp(F2PY_EXPR_TUPLE_10212),qpp(F2PY_EXPR_TUPLE_10213)" in 'Subroutine' block.
  313:      double complex
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  311:     .ppihp(nkaph,0:kmax,nlmh,nlma,1),qhp(nkaph,0:kmax,nlmh,nlma,1),
  312:     .ppipp(0:kmax,0:kmax,nlma,nlma,1),qpp(0:kmax,0:kmax,nlma,nlma,1)
  313:      double complex
  314:     .ppihhz(nkaph,nkaph,nlmh,nlmh,1),
  315:     .ppihpz(nkaph,0:kmax,nlmh,nlma,1),
  316:     .ppippz(0:kmax,0:kmax,nlma,nlma,1) <== no parse pattern found for "double complexppihhz(F2PY_EXPR_TUPLE_10214),ppihpz(F2PY_EXPR_TUPLE_10215),ppippz(F2PY_EXPR_TUPLE_10216)" in 'Subroutine' block.
  317:C ... Local parameters
  318:      integer ilm1,ilm2,k1,k2,ll,nlm11,nlm12,nlm21,nlm22,i
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  330:      endif
  331:
  332:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  337:      read (i) ppipp
  338:      read (i) ppihp
  339:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   60:      parameter (lmxx=6, nlmx=(lmxx+1)**2)
   61:Cki#error have #if F90 directive
   62:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   63:      double precision,allocatable:: phil(:,:),yl(:,:)
   64:      double precision,allocatable:: gv2(:,:),agv(:),cgp(:),sgp(:)
   65:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   66:      double precision phil(ng,0:lmxx),yl(ng,nlmx)
   67:      double precision gv2(ng,3),agv(ng),cgp(ng),sgp(ng)
   68:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   70:      call tcn('mshvmt')
   71:Cki#error have #if F90 directive
   72:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   73:      allocate(phil(ng,0:lmxx),yl(ng,nlmx))
   74:      allocate(gv2(ng,3),agv(ng),cgp(ng),sgp(ng))
   75:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
  166:      enddo
  167:Cki#error have #if F90 directive
  168:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
  169:      deallocate(phil,yl)
  170:      deallocate(gv2,agv,cgp,sgp)
  171:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   58:      integer io,ikap,l,nlm1,nlm2,ilm,jlm,i,j,norb
   59:      double precision xx
   60:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   62:      complex(8),allocatable:: zt(:,:,:),work(:,:,:)
   63:      allocate(zt(n*nspc,n,nspc),work(n*nspc,n,nspc))
   64:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   65:      integer ipiv(n*nspc)
   66:      double complex zt(n*nspc,n,nspc),work(n*nspc,n,nspc)
   67:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   69:      double complex zt(1,1,1),work(1,1,1)
   70:      call rx('mullmf only implemented for automatic arrays')
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
  177:C      enddo
  178:
  179:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
  179:#if F90
  180:      deallocate(zt,work)
  181:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   47:      double complex b((ktop0+1),nlmx)
   48:
   49:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   55:      character strn*120
   56:C     double precision dval
   57:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   66:      stdo = lgunit(1)
   67:      nsp  = nglob('nsp')
   68:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   71:      master = 0
   72:      mlog = cmdopt('--mlog',6,0,strn)
   73:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   82:      sqloc = 0
   83:      slmom = 0
   84:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   91:C$&        REDUCTION(sqloc,slmom)
   92:C$&        MP_SCHEDTYPE=RUNTIME
   93:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   92:C$&        MP_SCHEDTYPE=RUNTIME
   93:#endif
   94:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  104:      ibini= ibproc(procid)
  105:      ibend= ibproc(procid+1)-1
  106:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  112:      ibini= 1
  113:      ibend= nbas
  114:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  176:      enddo
  177:
  178:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  217:      deallocate(ibproc, stat=ierr)
  218:C     call rx0('done')
  219:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   47:      double complex phase
   48:      equivalence (px,pos(1)),(py,pos(2)),(pz,pos(3))
   49:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   54:      logical mlog,cmdopt
   55:      character strn*120
   56:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   69:      tpiba = 2*pi/alat
   70:      call dpzero(cv,2*ng*nsp)
   71:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   74:      master = 0
   75:      mlog = cmdopt('--mlog',6,0,strn)
   76:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   80:      sum(2) = 0d0
   81:      call info0(31,1,0,' ovlpfa: overlap smooth part of FA densities')
   82:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   89:      ibini = kpproc(procid)
   90:      ibend = kpproc(procid+1)-1
   91:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   93:      ibini=1
   94:      ibend=nbas
   95:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
  142:
  143:C ... Combine cv from separate threads
  144:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
  150:C     call ywrm(0,'cv',3,ifi,'(9f20.10)',cv,1,ng,ng,1)
  151:C     call rx0('done')
  152:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/paug1.F' (mode='fix')..
  392:      integer lx1(nf1),lx2(nf2),isp,idu(4),nab
  393:      parameter (nab=9)
  394:      double precision
  395:     .v1(0:lmx1,nf1),d1(0:lmx1,nf1),
  396:     .v2(0:lmx2,nf2),d2(0:lmx2,nf2) <== no parse pattern found for "double precisionv1(F2PY_EXPR_TUPLE_12045),d1(F2PY_EXPR_TUPLE_12046),v2(F2PY_EXPR_TUPLE_12047),d2(F2PY_EXPR_TUPLE_12048)" in 'Subroutine' block.
  397:      double complex ppiz(nf1,nf2,nlx1,nlx2)
WARNING while processing 'fp/potpus.F' (mode='fix')..
  333:
  334:C   ... Scale gz so that <|gz-P(g,gp)|^2> = 1
  335:#if SCALEGZ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  353:
  354:          endif
  355:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  410:
  411:C --- Rescale gp parameters and normalization of gp ---
  412:#if ORTHPHD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  422:            p = 1
  423:          endif
  424:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/prtev.F' (mode='fix')..
   29:        write(stdo,103) (evl(i), i=1,j)
   30:  103   format(9f8.4)
   31:#ifndef MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/prtev.F' (mode='fix')..
   35:     .  '= %1;5g',' ',80,stdo,nev,nmx,n,evl(nev),emx)
   36:        call ftflsh(stdo)
   37:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  122:  220   format(9x,i4,i6,f12.6,10f12.6)
  123:  221   format(/' rhogkl:    k   ilm      qkl (2l+1)!! ...')
  124:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  130:
  131:        endif
  132:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  299:      end subroutine pvrgkl
  300:
  301:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  347:      end subroutine prtrkl
  348:
  349:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
    4:     .lcplxp,lekkl,oqkkl,oeqkkl,f)
    5:      use m_struc_def  !Cgetarg
    6:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
    6:#if MPE
    7:      use m_events !Event numbers: include "events.ins"
    8:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   92:C     implicit none
   93:C ... Passed parameters
   94:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   93:C ... Passed parameters
   94:#if MPI
   95:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   96:#if MPE
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   94:#if MPI
   95:      include "mpif.h"
   96:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   95:      include "mpif.h"
   96:#if MPE
   97:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   98:#endif
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   96:#if MPE
   97:      include "mpef.h"
   98:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  110:      character*120 strn
  111:      logical mlog,cmdopt
  112:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  125:      double complex evec(ndimh,nspc,nevec)
  126:C ... Local parameters or process-shared variables
  127:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  129:      integer, dimension(:), allocatable :: bproc
  130:      integer nelt(3),lgunit,lmxh,nlmh,nsp,i
  131:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  143:     .oqhh,oqhp,oqpp,oeqhh,oeqhp,oeqpp
  144:      double precision pa(3),rsma,pi,tpiba
  145:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  145:#if F90
  146:      complex(8),allocatable:: cPkL(:),da(:),wk(:)
  147:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  155:      integer lh(nkap0),ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0)
  156:      double precision eh(n0,nkap0),rsmh(n0,nkap0)
  157:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  162:      integer:: iaini,iaend
  163:
  164:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  179:        enddo
  180:      endif
  181:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  217:      tpiba = 2d0*pi/alat
  218:
  219:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  226:C     .  b0((ktop0+1)*nlmx*nlmbx),db0((ktop0+1)*nlmx*nlmbx*3),
  227:C     .  wk((ktop0+1)*nlmx),bos((ktop0+1)*nlmbx))
  228:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  228:#else
  229:      if (napw .gt. 0) call rx('rlocbl: PWs require F90 compiler')
  230:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  242:
  243:C --- Loop over augmentation sites ---
  244:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  243:C --- Loop over augmentation sites ---
  244:#if MPI
  245:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  245:#if MPE
  246:      ierr = MPE_LOG_EVENT(EVENT_START_RLOCBL,procid,"rlocbl")
  247:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  251:      iaini=bproc(procid)
  252:      iaend=bproc(procid+1)-1
  253:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  254:      iaini=1
  255:      iaend=nbas
  256:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  256:#endif
  257:      do ia = iaini,iaend
  258:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  264:     .    procid,numprocs,bproc(procid),bproc(procid+1)-1)
  265:        endif
  266:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  298:        oxf = oixf(ip)
  299:
  300:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  302:     .  iprmb,nbas,ia,pa,rsma,q,kmax,nlma,ndimh,napw,igvapw,w(ob),
  303:     .  w(odb))
  304:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  341:          enddo
  342:        enddo
  343:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  403:C ... end loop over ia
  404:      enddo
  405:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  404:      enddo
  405:#if MPI
  406:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  407:      ierr = MPE_LOG_EVENT(EVENT_END_RLOCBL,procid,"rlocbl")
  408:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  409:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  409:#endif
  410:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  411:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  412:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  413:      ierr = MPE_LOG_EVENT(EVENT_START_BCAST,procid,"broadcast")
  414:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  472:      endif
  473:      deallocate(bproc, stat=ierr)
  474:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  474:#if MPE
  475:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  476:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  475:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  476:#endif
  477:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  481:        enddo
  482:      endif
  483:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  483:#endif
  484:
  485:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  485:#if F90
  486:      deallocate(cPkL,da,wk)
  487:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
    3:     .napw,igapw,iprmb,numq,nevec,evec,ewgt,k1,k2,k3,smpot,smrho,f)
    4:      use m_struc_def  !Cgetarg
    5:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
    5:#if MPE
    6:      use m_events !Event numbers: include "events.ins"
    7:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   67:C     implicit none
   68:C ... Passed parameters
   69:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   68:C ... Passed parameters
   69:#if MPI
   70:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   71:#if MPE
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   69:#if MPI
   70:      include "mpif.h"
   71:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   70:      include "mpif.h"
   71:#if MPE
   72:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   73:#endif
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   71:#if MPE
   72:      include "mpef.h"
   73:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   85:      integer lgunit
   86:      character*120 strn
   87:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   86:      character*120 strn
   87:#endif
   88:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   88:#if MPE
   89:C Event numbers:
   90:      include "events.ins" <== 'events.ins' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   91:#endif
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   89:C Event numbers:
   90:      include "events.ins"
   91:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  113:      integer ivec,nvec
  114:C     Local for parallel threads
  115:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  118:     .wk(:,:,:)
  119:      real(8),allocatable:: cosi(:),sini(:),wk2(:)
  120:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  121:      integer ivp(napw)
  122:      integer ocos,of,opsi,osin,ovpsi,opsi0,owk2
  123:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  123:#endif
  124:
  125:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  129:      complex(8),allocatable:: xsmrho(:,:,:,:,:)
  130:      real(8),allocatable:: fr(:,:,:)
  131:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  131:#endif
  132:
  133:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  134:      complex(8),allocatable:: xsmrho(:,:,:,:,:)
  135:      real(8),allocatable:: fr(:,:,:)
  136:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  145:      nproc  = mpipid(0)
  146:      procid = mpipid(1)
  147:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  151:      master = 0
  152:      mlog = cmdopt('--mlog',6,0,strn)
  153:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  196:C     For PW basis ... for now.
  197:      if (napw .gt. 0) then
  198:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  198:#if F90
  199:        allocate(ivp(napw))
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  201:        call gvgvcomp(ng,w(oiv),napw,igapw,ivp)
  202:      else
  203:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  203:#if F90
  204:        allocate(ivp(1))
  205:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  227:C     call defi(oiv,  ng*3)
  228:C     call suphs0(plat,ng,w(ogv),w(oiv))
  229:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  240:    1   format (3x,i3,3x,i5)
  241:      endif
  242:#elif OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  245:        nblk = max(min(16,nevec/nproc),4)
  246:      endif
  247:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  247:#else
  248:      nblk = 16
  249:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  250:
  251:C  --- Loop over eigenstates ---
  252:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  254:      allocate(psi(ng,nspc,nblk),vpsi(ng,nspc,nblk),wk(ng,nspc,nblk))
  255:      allocate(psir(k1,k2,k3),cosi(ng),sini(ng),wk2(ng))
  256:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  258:      call dpzero(xsmrho,k1*k2*k3*numq*nspc*2)
  259:      call dpzero(fr,3*nbas*numq)
  260:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  259:      call dpzero(fr,3*nbas*numq)
  260:#endif
  261:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  267:      call defcc(ovpsi, ng*nspc*nblk)
  268:      call defcc(of,    k1*k2*k3)
  269:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  270:
  271:
  272:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  271:
  272:#if MPI
  273:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  273:#if MPE
  274:      ierr = MPE_LOG_EVENT(EVENT_START_RSIBL,procid,"rsibl")
  275:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  283:      ivecini= vproc(procid)
  284:      ivecend= vproc(procid+1)-1
  285:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  289:      ivecini= 1
  290:      ivecend= nevec
  291:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  293:
  294:      do  ivec = ivecini,ivecend, nblk
  295:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  306:     .  ',ivec=%i,nvec=%i',' ',256,lgunit(3),procid,vproc(procid),
  307:     .  vproc(procid+1)-1,ivec,nvec)
  308:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  308:#else
  309:        nvec = min(nblk, nevec-ivec+1)
  310:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  311:
  312:
  313:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  321:
  322:C   ... Add to real-space mesh, optionally make smpot*psi for forces
  323:#if MPI | OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  324:        call rsibl2(ng,nspc,nvec,psi,n1,n2,n3,k1,k2,k3,w(okv),numq,
  325:     .  ewgt(1,ivec),lfrce,smpot(1,1,1,isp),psir,xsmrho,vpsi)
  326:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  328:     .  ewgt(1,ivec),lfrce,smpot(1,1,1,isp),psir,smrho(1,1,1,1,isp),
  329:     .  vpsi)
  330:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  332:C    --- Add to forces ---
  333:        if (lfrce .ne. 0) then
  334:#if MPI | OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  337:     .    wk,wk2,vol,iprt,ipet,etab,rtab,ndimh,nlmto,nspc,
  338:     .    numq,ewgt,ivec,nvec,evec,vpsi,psi,fr)
  339:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  342:     .    wk,wk2,vol,iprt,ipet,etab,rtab,ndimh,nlmto,nspc,
  343:     .    numq,ewgt,ivec,nvec,evec,vpsi,psi,f)
  344:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  345:        endif
  346:
  347:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  366:     .    numq,ewgt,ivec,nvec,evec,w(ovpsi),w(opsi),f)
  367:        endif
  368:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  370:      enddo
  371:C$OMP END DO
  372:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  372:#if F90
  373:      deallocate(psi,vpsi,wk,psir,cosi,sini,wk2)
  374:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  377:      deallocate(xsmrho)
  378:      if (allocated(fr)) deallocate(fr)
  379:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  379:#endif
  380:C$OMP END PARALLEL
  381:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  380:C$OMP END PARALLEL
  381:#else
  382:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  382:#endif
  383:
  384:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  383:
  384:#if MPI
  385:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  386:      ierr = MPE_LOG_EVENT(EVENT_END_RSIBL,procid,"rsibl")
  387:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  388:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  388:#endif
  389:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  390:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  391:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  392:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  393:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  425:C
  426:      deallocate(vproc, stat=ierr)
  427:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  427:#if MPE
  428:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  429:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  428:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  429:#endif
  430:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  430:#endif
  431:      call rlse(ogv)
  432:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  432:#if F90
  433:      deallocate(ivp)
  434:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  498:     .psi0(ng,2,nspc,nvec),wk2(ng),cosgp(ng),singp(ng),etab(*),
  499:     .rtab(*),gq(ng,3),f(3,nbas,numq),ewgt(numq,ivec),qlat(3,3)
  500:      double complex
  501:     .psi(ng,nspc,nvec),evec(ndimh,nspc,ivec),vpsi(ng,nspc,nvec) <== no parse pattern found for "double complexpsi(F2PY_EXPR_TUPLE_14653),evec(F2PY_EXPR_TUPLE_14654),vpsi(F2PY_EXPR_TUPLE_14655)" in 'Subroutine' block.
  502:C ... Local parameters
  503:      integer norb,ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0),
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  908:
  909:C     Redesign ... inefficient.
  910:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  922:     .  call rx('bug in gvgvcomp.  Cannot find ivp')
  923:      enddo
  924:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
    3:     .napw,igapw,h,s)
    4:      use m_struc_def  !Cgetarg
    5:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
    5:#if MPE
    6:      use m_events !Event numbers: include "events.ins"
    7:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  134:C     implicit none
  135:C ... Passed parameters
  136:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  135:C ... Passed parameters
  136:#if MPI
  137:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  136:#if MPI
  137:#if MPE
  138:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  139:#endif
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  137:#if MPE
  138:      include "mpef.h"
  139:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  138:      include "mpef.h"
  139:#endif
  140:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  141:      integer numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  152:      integer i,lgunit
  153:      character*120 strn
  154:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  181:      double precision qpg2,alat,plat(3,3),qlat(3,3),vol,srvol,tpiba,pi,
  182:     .denom,gam,fpi,ddot
  183:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  186:      complex(8):: ovl,srm1,phase,fach
  187:      parameter (srm1=(0d0,1d0))
  188:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  187:      parameter (srm1=(0d0,1d0))
  188:#endif
  189:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  191:      integer, dimension(:,:), allocatable :: index
  192:      integer obuff
  193:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  204:      call tcn('smhsbl')
  205:
  206:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  212:      master = 0
  213:      mlog = cmdopt('--mlog',6,0,strn)
  214:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  215:      procid = 0
  216:      master = 0
  217:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  253:        enddo
  254:        nlmax=(lmxax+1)**2
  255:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  266:          srm1l(l1) = (srm1)**l1
  267:        enddo
  268:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  268:#else
  269:        call rx('PW branch requires F90')
  270:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  282:C$&        MP_SCHEDTYPE=RUNTIME
  283:      if (nlmto .ne. 0) then
  284:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  283:      if (nlmto .ne. 0) then
  284:#if MPI
  285:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  285:#if MPE
  286:        ierr = MPE_LOG_EVENT(EVENT_START_SMHSBL,procid,"smhsbl")
  287:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  308:ccccccccccccccccccccc
  309:        iloopmx= index(procid,0)
  310:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  310:#else
  311:        iloopmx= nbas
  312:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  313:
  314:        do iloop = 1,iloopmx
  315:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  322:     .      procid,numprocs,ib1,index(procid,0))
  323:          endif
  324:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  324:#else
  325:          ib1=iloop
  326:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  389:                        do  ilm1 = l1**2+1, (l1+1)**2
  390:                          i1 = i1+1
  391:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  393:                          hbuf(i1,i2) = hbuf(i1,i2) - s0(ilm1,ilm2,1,ik1,ik2)
  394:     .                    + vavg*s0(ilm1,ilm2,0,ik1,ik2)
  395:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  397:                          h(i1,i2) = h(i1,i2) - s0(ilm1,ilm2,1,ik1,ik2)
  398:     .                    + vavg*s0(ilm1,ilm2,0,ik1,ik2)
  399:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  411:                        do  ilm1 = l1**2+1, (l1+1)**2
  412:                          i1 = i1+1
  413:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  413:#if MPI
  414:                          sbuf(i1,i2) = sbuf(i1,i2) + s0(ilm1,ilm2,0,ik1,ik2)
  415:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  415:#else
  416:                          s(i1,i2) = s(i1,i2) + s0(ilm1,ilm2,0,ik1,ik2)
  417:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  427:          enddo
  428:C   ... Hsm (i1) \times PW (i2)  Takao. Similar logic in fsmbl
  429:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  449:C             gradient of ovl
  450:C             ovl = srm1*qpgv(1,ig) * ovl
  451:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  452:                sbuf(i1,i2) = sbuf(i1,i2) + ovl
  453:                hbuf(i1,i2) = hbuf(i1,i2) + qpg2*ovl + vavg*ovl
  454:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  455:                s(i1,i2) = s(i1,i2) + ovl
  456:                h(i1,i2) = h(i1,i2) + qpg2*ovl + vavg*ovl
  457:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  459:            enddo
  460:          enddo
  461:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  464:        enddo
  465:
  466:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  465:
  466:#if MPI
  467:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  468:        ierr = MPE_LOG_EVENT(EVENT_END_SMHSBL,procid,"smhsbl")
  469:        ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  470:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  470:#endif
  471:        call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  472:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  473:        ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  474:        ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  475:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  502:        deallocate(hbuf, stat=ierr)
  503:        deallocate(sbuf, stat=ierr)
  504:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  504:#if MPE
  505:        ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  506:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  505:        ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  506:#endif
  507:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  517:      enddo
  518:
  519:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  521:        deallocate(yl,ylv,qpgv,qpg2v,srm1l)
  522:      endif
  523:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   64:      allocate(mxevl2_xinvh(nq,nwx) )
   65:
   66:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   75:        enddo
   76:      enddo
   77:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   93:      enddo
   94:
   95:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  102:      enddo
  103:      call fclose(ifi)
  104:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  180:      endif
  181:
  182:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  192:      enddo
  193:      call fclose(ifi); call fclose(ifi2)
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  205:      enddo
  206:
  207:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  212:      enddo
  213:      call fclose(ifi)
  214:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  340:      enddo
  341:
  342:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  349:      enddo
  350:      call fclose(ifi)
  351:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
    1:#define V2 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  186:      integer ndhamx,nspx,nnnx,ifiv
  187:      character strn*120
  188:#if SIGNN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  188:#if SIGNN
  189:      complex(8),allocatable:: sig(:,:)
  190:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  491:        rewind i
  492:
  493:#if V2 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  495:C       write(ifi) nbas,nsp,ndima,ndham,alat,qlat,ef0,nqbz,plat,nqnum !takao 2003 Sep
  496:        write(ifi) nat,nsp,ndima,ndham,alat,qlat,ef0,nqbz,plat,nqnum !mark 2005 Jul
  497:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  497:#else
  498:        write(ifi) nbas,nsp,nchan,ndham,alat,qlat,ef0,n1q,n2q,n3q,plat
  499:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
    1:#define FP 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
   70:      endif
   71:
   72:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
  129:
  130:      endif
  131:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
    2:      subroutine ugcomp(nbas,ssite,sspec,slat,qmom,gpot0,hpot0,ugg,f)
    3:      use m_struc_def  !Cgetarg
    4:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
    4:#if MPE
    5:      use m_events !Event numbers: include "events.ins"
    6:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   36:C     implicit none
   37:C ... Passed parameters
   38:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   37:C ... Passed parameters
   38:#if MPI | MPIK
   39:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   38:#if MPI | MPIK
   39:#if MPE
   40:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   41:#endif
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   39:#if MPE
   40:      include "mpef.h"
   41:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   40:      include "mpef.h"
   41:#endif
   42:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   43:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   53:      logical mlog,cmdopt
   54:      character*120 strn
   55:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   80:c #ifndef SGI_PARALLEL
   81:      parameter (nlmx=64, npmx=1, nbmx=256)
   82:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   83:      double precision xf(3,nbas,npmx),xhpot0(nbas,npmx),
   84:     .xgpot0(nlmx*nbas,npmx),xugg(npmx)
   85:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   86:      double precision xf(3,nbmx,npmx),xhpot0(nbmx,npmx),
   87:     .xgpot0(nlmx*nbmx,npmx),xugg(npmx)
   88:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   95:
   96:
   97:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   99:      double precision , dimension(:), allocatable :: buffer
  100:      integer nvl0,iiv0(nbas)
  101:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  108:      call tcn('ugcomp')
  109:
  110:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  116:      master = 0
  117:      mlog = cmdopt('--mlog',6,0,strn)
  118:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  124:      y0 = 1d0/srfpi
  125:c #if ! (F90 | AUTO_ARRAY | SGI_PARALLEL)
  126:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  126:#if ! (F90 | AUTO_ARRAY)
  127:      if (nbas .gt. nbmx) call rx('ugcomp: increase nbkmx')
  128:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  131:      mp = 1
  132:
  133:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  134:      call setofl(0,ssite,sspec,nbas,nvl0,iiv0)
  135:      if (nlmx*nbas .lt. nvl0) call rx('ugcomp: increase nlmx')
  136:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  146:      call dpzero(xf, 3*nbas*mp)
  147:      call dpzero(xhpot0, nbas*mp)
  148:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  147:      call dpzero(xhpot0, nbas*mp)
  148:#if MPI | MPIK
  149:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  149:#if MPE
  150:      ierr = MPE_LOG_EVENT(EVENT_START_UGCOMP,procid,"ugcomp")
  151:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  155:      ibini= bproc(procid)
  156:      ibend= bproc(procid+1)-1
  157:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  159:      ibini=1
  160:      ibend=nbas
  161:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  162:
  163:      do ib=ibini,ibend
  164:#if MPI |MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  171:        endif
  172:        iv0 = iiv0(ib)
  173:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  202:     .        lfoc2,rh2,z2)
  203:              nlm2 = (lmax2+1)**2
  204:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  204:#if MPI | MPIK
  205:              jv0 = iiv0(jb)
  206:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  285:        endif
  286:      enddo
  287:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  287:#if MPI | MPIK
  288:      nvl = nvl0
  289:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  289:#else
  290:      nvl = iv0
  291:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  292:
  293:C ... Assemble data from separate threads
  294:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  293:C ... Assemble data from separate threads
  294:#if MPI | MPIK
  295:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  296:      ierr = MPE_LOG_EVENT(EVENT_END_UGCOMP,procid,"ugcomp")
  297:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  298:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  298:#endif
  299:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  300:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  301:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  302:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  303:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  350:     .  procid,numprocs)
  351:      endif
  352:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  352:#if MPE
  353:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  354:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  354:#endif
  355:      deallocate(bproc, stat=ierr)
  356:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  367:        ugg = ugg + xugg(ip)
  368:   80 continue
  369:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  108:   16       continue
  109:C --- Patch for bug in AIX err= ---
  110:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  114:              backspace ifi
  115:            endif
  116:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  143:
  144:C --- handle read exception ---
  145:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  146:   19 l = 0
  147:      i = 2
  148:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atwf.F' (mode='fix')..
  223:      parameter (npoly=6,nrmx=1501,PRTV=60)
  224:      parameter (tolg=1d-8)
  225:      double precision
  226:     .gwk(nrmx),gwk2(nrmx,2),  ! work arrays
  227:     .rofi(nrmx),rwgt(nrmx),   ! Points and weights for shifted log mesh
  228:     .rwgtl(nrmx),rofil(nrmx)  ! Points and weights for stnd log mesh <== no parse pattern found for "double precisiongwk(nrmx),gwk2(F2PY_EXPR_TUPLE_20667),  rofi(nrmx),rwgt(nrmx),   rwgtl(nrmx),rofil(nrmx)" in 'Subroutine' block.
  229:      double precision onorm(2,0:lmxa,nphimx,nsp), ! norm on shifted mesh
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  114:     .grpop,iinit,projql,rx,rxx
  115:      character*1 chr(0:2)
  116:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  117:      character*30 sg
  118:      double precision ag(3)
  119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  118:      double precision ag(3)
  119:#endif
  120:#if QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  125:      data q0 /0.339995d0,0.339995d0,0.339995d0/,dq/.15d0/
  126:      integer k,m
  127:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  145:
  146:      call bzmsh0(plat,lshft,lpbc01,n1,n2,n3,is,ifac,rb,qb)
  147:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  149:  356 format(/' BZMESH: qp mapping'/' i1..i3',25x,'qp',16x,'iq   ig g')
  150:      call dpzero(ag,3)
  151:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  192:        v(3) = ii1*qb(3,1) + ii2*qb(3,2) + ii3*qb(3,3)
  193:C         call prmx('kpt',v,3,3,1)
  194:#if QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  198:C  156     format(4f15.6)
  199:        if (ddot(3,v1,1,v1,1) .gt. dq*dq) goto 20
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  270:C                igstar(ii) = ig
  271:C              endif
  272:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  278:     .        v1,ipq(j1,j2,j3),ig)
  279:            endif
  280:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  318:     .  lgunit(2),nq,n1,n2,n3,lshft)
  319:      endif
  320:#if  QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  328:   70 continue
  329:  334 format(i5,1p,4d18.10)
  330:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  334:      if (dabs(swgt-2) .gt. 1.d-9) call fexit(-1,111,
  335:     .' Exit -1 BZMESH: QP weights sum to %1;6d but must sum to 2',swgt)
  336:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   31:Cu   Written by Karen Johnston
   32:C ----------------------------------------------------------------------
   33:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   69:      WRITE (*,'(3x,3i7)') i,inode(i),xnode(i)
   70:      END DO
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   72:      END SUBROUTINE dstrbp
   73:
   74:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
  343:C      call pdstlb(nloop,np,index)
  344:C      end
  345:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   27:      integer ibas,jbas,m,ig,lgunit
   28:      double precision dbas(3),bast(3),sum,tol2,qlat(3,3),vol,ddot
   29:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   29:#if F90 | AUTO_ARRAY
   30:      double precision sdpos(3,nbas)
   31:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   34:      double precision sdpos(3,nbmx)
   35:      if (nbas .gt. nbmx) call rx('fixpos: increase nbmx')
   36:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  324:C ... Printout
  325:      if (iprint() .ge. PRTG) then
  326:#if AWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  335:     .  len(outs),0,n1,n2,n3,s1,s2,s3)
  336:        call awrit0('%a',outs,len(outs),-stdo)
  337:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  339:  861   format(/' gvlist: cutoff radius ',f7.3,' gives',i7,
  340:     .  '   recips of max',i7)
  341:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  324:C Local variables
  325:      integer ig,m,jg
  326:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  327:      integer kk(ngmx),iprm(ngmx)
  328:      double precision gg(ngmx)
  329:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  333:      double precision gg(ngmxx)
  334:      if (ng .gt. ngmxx) call rxi('gvlst2: increase ngmx, need',ng)
  335:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  161:
  162:      double precision dmx(2)
  163:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  164:      integer iaxi(5)
  165:      double precision tau(3)
  166:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   28:C ----------------------------------------------------------------
   29:C     implicit none
   30:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   29:C     implicit none
   30:#if MPI | MPIK
   31:      include "mpif.h" <== 'mpif.h' not found in 'subs:.'. The INCLUDE line will be turned to a comment.
   32:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'subs/iopos.F' (mode='fix')..
   42:      logical mlog, cmdopt
   43:      character*120 strn
   44:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   69:      data rdarg /'#{}% c'/
   70:
   71:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   78:      mlog = cmdopt('--mlog',6,0,strn)
   79:      if (procid .eq. master) then
   80:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
  184:        endif
  185:        call fclose(ifi)
  186:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
  197:        endif
  198:      endif
  199:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
    1:#define FP 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  382:c           print *, 'yyyyyyyy iors 11111'
  383:cccccccccccccc
  384:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  472:          call mpibc1(w(osmrho),2*k1*k2*k3*nsp,4,mlog,'iors','smrho')
  473:  115     continue
  474:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  474:#else
  475:          call rx('smooth density not implemented')
  476:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  863:              if (isanrg(lmxl,  0,lmxa,  msg,'lmxl', .false.)) goto 999
  864:
  865:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  866:              if (kmax0.ne.kmax.and.ipr.ge.10)
  867:     .        write(stdo,201) ib,spid,'kmax',kmax0,kmax
  868:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  985:        if (isanrg(ibaug, nat,nat,  msg,'nat', .false.)) goto 999
  986:
  987:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  997:          call pvsms2(ssite,sspec,wk,nbas,nsp,orhoat)
  998:        endif
  999:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1251:
 1252:C   --- Write smooth charge density ---
 1253:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1259:        endif
 1260:        call dpdftr(n1,n2,n3,k1,k2,k3,nsp,w(osmrho),lbin,-jfi)
 1261:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  137:
  138:C ... Local parameters
  139:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  138:C ... Local parameters
  139:#if MPI | MPIK
  140:      include "mpif.h" <== 'mpif.h' not found in 'subs:.'. The INCLUDE line will be turned to a comment.
  141:      logical mlog,cmdopt
WARNING while processing 'subs/iosits.F' (mode='fix')..
  141:      logical mlog,cmdopt
  142:      integer ierr
  143:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  162:
  163:C ... Setup
  164:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  165:      call MPI_COMM_RANK( MPI_COMM_WORLD, procid, ierr )
  166:      mlog = cmdopt('--mlog',6,0,spid)
  167:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  556:        endif
  557:
  558:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  567:          call mpibc1(ssite,ssite(i)%size,4,mlog,'iosits','ssite')
  568:        endif
  569:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  131:      else
  132:C   ... Open file, and read header
  133:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  133:#if MASTERIO
  134:        if (procid .eq. 0) then
  135:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  156:          call isanrg(lmaxwr,lmaxw,lmaxw,'file: IOSTR:','lmaxw',.false.)
  157:
  158:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  167:        call mpibc1(nttab,1,2,.false.,'iostr','nttab')
  168:        call mpibc1(nitab,1,2,.false.,'iostr','nitab')
  169:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  201:        if (getdig(lio23,1,2) .eq. 0) then
  202:          call rxx(getdig(lio23,0,2).eq.1,'iostr not ready for complex')
  203:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  203:#if MASTERIO
  204:          if (procid .eq. 0) then
  205:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  208:            lerr = iostr2(ifi,nbas,nttab,nblk,lscoff,nds,nkap,
  209:     .      w(onpr),w(oiax),kap2,w(oalpha),w(os))
  210:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  220:C         entime = MPI_WTIME()
  221:C         call info2(20,0,0,'  took %;1d sec',(entime-sttime),0)
  222:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  223:C   ... Read strux, vector format
  224:        else
  225:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  225:#if MASTERIO
  226:          if (procid .eq. 0) then
  227:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  229:     .      w(onpr),w(oiax),kap2,w(os))
  230:          endif
  231:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  237:     .    's')
  238:        endif
  239:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  117:      double precision a0,q0,r0,tol,v0
  118:      double precision gq0,gq1,pi,q1,q2,r1,r2
  119:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  119:#if F90 | AUTO_ARRAY
  120:      double precision f(0:lmax),g(0:lmax)
  121:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  121:#else
  122:      double precision f(0:40),g(0:40)
  123:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_gtv.F' (mode='fix')..
   52:      logical,private::  debug=.false.
   53:      interface gtv
   54:      module procedure
   55:     .gtv_r8,gtv_i4,gtv_r8v,gtv_i4v,gtv_char,gtv_lg,gtv_none <== no parse pattern found for "module proceduregtv_r8,gtv_i4,gtv_r8v,gtv_i4v,gtv_char,gtv_lg,gtv_none" in 'Interface' block.
   56:      end interface
WARNING while processing 'subs/m_gtv.F' (mode='fix')..
   57:
   58:      interface getinput
   59:      module procedure
   60:     .getinput_r8,getinput_i4,getinput_r8v,getinput_i4v,
   61:     .getinput_char,getinput_none <== no parse pattern found for "module proceduregetinput_r8,getinput_i4,getinput_r8v,getinput_i4v,getinput_char,getinput_none" in 'Interface' block.
   62:      end interface
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1901:
 1902:      integer function uarray_size()
 1903:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1912:      n=n/8
 1913:      if (imod.ne.0) n=n+1
 1914:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1914:#ifdef ALIGNMENT128
 1915:      if (mod(n,2).eq.1) n=n+1
 1916:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1917:      uarray_size=n
 1918:C        write(*,*) 'uarray_size=',n
 1919:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1922:C  +2 is margin
 1923:C         n=n+2
 1924:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1924:#ifdef ALIGNMENT128
 1925:      if (mod(n,2).eq.1) n=n+1
 1926:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1926:#endif
 1927:      uarray_size=n
 1928:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1930:
 1931:      integer function ubz_size()
 1932:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1941:      n=n/8
 1942:      if (imod.ne.0) n=n+1
 1943:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1943:#ifdef ALIGNMENT128
 1944:      if (mod(n,2).eq.1) n=n+1
 1945:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1946:      ubz_size=n
 1947:C        write(*,*) 'ubz_size=',n
 1948:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1951:C  +2 is margin
 1952:C         n=n+2
 1953:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1953:#ifdef ALIGNMENT128
 1954:      if (mod(n,2).eq.1) n=n+1
 1955:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1955:#endif
 1956:      ubz_size=n
 1957:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1959:
 1960:      integer function uctrl_size()
 1961:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1970:      n=n/8
 1971:      if (imod.ne.0) n=n+1
 1972:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1972:#ifdef ALIGNMENT128
 1973:      if (mod(n,2).eq.1) n=n+1
 1974:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1975:      uctrl_size=n
 1976:C        write(*,*) 'uctrl_size=',n
 1977:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1980:C  +2 is margin
 1981:C         n=n+2
 1982:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1982:#ifdef ALIGNMENT128
 1983:      if (mod(n,2).eq.1) n=n+1
 1984:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1984:#endif
 1985:      uctrl_size=n
 1986:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1988:
 1989:      integer function ugw_size()
 1990:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1999:      n=n/8
 2000:      if (imod.ne.0) n=n+1
 2001:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2001:#ifdef ALIGNMENT128
 2002:      if (mod(n,2).eq.1) n=n+1
 2003:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2004:      ugw_size=n
 2005:C        write(*,*) 'ugw_size=',n
 2006:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2009:C  +2 is margin
 2010:C         n=n+2
 2011:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2011:#ifdef ALIGNMENT128
 2012:      if (mod(n,2).eq.1) n=n+1
 2013:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2013:#endif
 2014:      ugw_size=n
 2015:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2017:
 2018:      integer function uham_size()
 2019:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2028:      n=n/8
 2029:      if (imod.ne.0) n=n+1
 2030:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2030:#ifdef ALIGNMENT128
 2031:      if (mod(n,2).eq.1) n=n+1
 2032:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2033:      uham_size=n
 2034:C        write(*,*) 'uham_size=',n
 2035:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2038:C  +2 is margin
 2039:C         n=n+2
 2040:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2040:#ifdef ALIGNMENT128
 2041:      if (mod(n,2).eq.1) n=n+1
 2042:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2042:#endif
 2043:      uham_size=n
 2044:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2046:
 2047:      integer function ulat_size()
 2048:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2057:      n=n/8
 2058:      if (imod.ne.0) n=n+1
 2059:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2059:#ifdef ALIGNMENT128
 2060:      if (mod(n,2).eq.1) n=n+1
 2061:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2062:      ulat_size=n
 2063:C        write(*,*) 'ulat_size=',n
 2064:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2067:C  +2 is margin
 2068:C         n=n+2
 2069:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2069:#ifdef ALIGNMENT128
 2070:      if (mod(n,2).eq.1) n=n+1
 2071:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2071:#endif
 2072:      ulat_size=n
 2073:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2075:
 2076:      integer function umix_size()
 2077:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2086:      n=n/8
 2087:      if (imod.ne.0) n=n+1
 2088:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2088:#ifdef ALIGNMENT128
 2089:      if (mod(n,2).eq.1) n=n+1
 2090:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2091:      umix_size=n
 2092:C        write(*,*) 'umix_size=',n
 2093:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2096:C  +2 is margin
 2097:C         n=n+2
 2098:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2098:#ifdef ALIGNMENT128
 2099:      if (mod(n,2).eq.1) n=n+1
 2100:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2100:#endif
 2101:      umix_size=n
 2102:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2104:
 2105:      integer function umove_size()
 2106:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2115:      n=n/8
 2116:      if (imod.ne.0) n=n+1
 2117:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2117:#ifdef ALIGNMENT128
 2118:      if (mod(n,2).eq.1) n=n+1
 2119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2120:      umove_size=n
 2121:C        write(*,*) 'umove_size=',n
 2122:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2125:C  +2 is margin
 2126:C         n=n+2
 2127:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2127:#ifdef ALIGNMENT128
 2128:      if (mod(n,2).eq.1) n=n+1
 2129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2129:#endif
 2130:      umove_size=n
 2131:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2133:
 2134:      integer function uoptic_size()
 2135:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2144:      n=n/8
 2145:      if (imod.ne.0) n=n+1
 2146:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2146:#ifdef ALIGNMENT128
 2147:      if (mod(n,2).eq.1) n=n+1
 2148:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2149:      uoptic_size=n
 2150:C        write(*,*) 'uoptic_size=',n
 2151:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2154:C  +2 is margin
 2155:C         n=n+2
 2156:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2156:#ifdef ALIGNMENT128
 2157:      if (mod(n,2).eq.1) n=n+1
 2158:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2158:#endif
 2159:      uoptic_size=n
 2160:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2162:
 2163:      integer function uordn_size()
 2164:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2173:      n=n/8
 2174:      if (imod.ne.0) n=n+1
 2175:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2175:#ifdef ALIGNMENT128
 2176:      if (mod(n,2).eq.1) n=n+1
 2177:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2178:      uordn_size=n
 2179:C        write(*,*) 'uordn_size=',n
 2180:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2183:C  +2 is margin
 2184:C         n=n+2
 2185:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2185:#ifdef ALIGNMENT128
 2186:      if (mod(n,2).eq.1) n=n+1
 2187:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2187:#endif
 2188:      uordn_size=n
 2189:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2191:
 2192:      integer function upot_size()
 2193:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2202:      n=n/8
 2203:      if (imod.ne.0) n=n+1
 2204:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2204:#ifdef ALIGNMENT128
 2205:      if (mod(n,2).eq.1) n=n+1
 2206:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2207:      upot_size=n
 2208:C        write(*,*) 'upot_size=',n
 2209:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2212:C  +2 is margin
 2213:C         n=n+2
 2214:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2214:#ifdef ALIGNMENT128
 2215:      if (mod(n,2).eq.1) n=n+1
 2216:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2216:#endif
 2217:      upot_size=n
 2218:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2220:
 2221:      integer function usite_size()
 2222:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2231:      n=n/8
 2232:      if (imod.ne.0) n=n+1
 2233:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2233:#ifdef ALIGNMENT128
 2234:      if (mod(n,2).eq.1) n=n+1
 2235:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2236:      usite_size=n
 2237:C        write(*,*) 'usite_size=',n
 2238:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2241:C  +2 is margin
 2242:C         n=n+2
 2243:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2243:#ifdef ALIGNMENT128
 2244:      if (mod(n,2).eq.1) n=n+1
 2245:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2245:#endif
 2246:      usite_size=n
 2247:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2249:
 2250:      integer function uspec_size()
 2251:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2260:      n=n/8
 2261:      if (imod.ne.0) n=n+1
 2262:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2262:#ifdef ALIGNMENT128
 2263:      if (mod(n,2).eq.1) n=n+1
 2264:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2265:      uspec_size=n
 2266:C        write(*,*) 'uspec_size=',n
 2267:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2270:C  +2 is margin
 2271:C         n=n+2
 2272:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2272:#ifdef ALIGNMENT128
 2273:      if (mod(n,2).eq.1) n=n+1
 2274:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2274:#endif
 2275:      uspec_size=n
 2276:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2278:
 2279:      integer function ustr_size()
 2280:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2289:      n=n/8
 2290:      if (imod.ne.0) n=n+1
 2291:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2291:#ifdef ALIGNMENT128
 2292:      if (mod(n,2).eq.1) n=n+1
 2293:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2294:      ustr_size=n
 2295:C        write(*,*) 'ustr_size=',n
 2296:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2299:C  +2 is margin
 2300:C         n=n+2
 2301:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2301:#ifdef ALIGNMENT128
 2302:      if (mod(n,2).eq.1) n=n+1
 2303:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2303:#endif
 2304:      ustr_size=n
 2305:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2307:
 2308:      integer function utb_size()
 2309:#if MPI|MPIK|MPIADDRESS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2318:      n=n/8
 2319:      if (imod.ne.0) n=n+1
 2320:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2320:#ifdef ALIGNMENT128
 2321:      if (mod(n,2).eq.1) n=n+1
 2322:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2323:      utb_size=n
 2324:C        write(*,*) 'utb_size=',n
 2325:#else  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2328:C  +2 is margin
 2329:C         n=n+2
 2330:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2330:#ifdef ALIGNMENT128
 2331:      if (mod(n,2).eq.1) n=n+1
 2332:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2332:#endif
 2333:      utb_size=n
 2334:#endif  /* MPIADDRESS*/ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  400:      endif
  401:
  402:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  408:C     .  ' etot=%;4d de=%;4d undo=%l',' ',80,6,i1,ib,i2,jb,etot,de,lundo)
  409:C        call awrit2('  iprm=%n:1i',' ',80,6,nbas,iprm)
  410:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  473:      iprmi(ib1) = i2
  474:      iprmi(ib2) = i1
  475:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  478:      if (iprm(i1) .ne. ib1) stop 'bug in mcasw'
  479:      if (iprm(i2) .ne. ib2) stop 'bug in mcasw'
  480:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  137:        endif
  138:        call defdr(owtkp,-mxkp)
  139:#if TRSYMM <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  139:#if TRSYMM
  140:        call dvset(w(owtkp),1,1,dble(nsgrp))
  141:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  174:
  175:        call defdr(owtkp,-nkp)
  176:#if TRSYMM <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  176:#if TRSYMM
  177:        call dvset(w(owtkp),1,1,dble(nsgrp))
  178:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   33:      ifi = fopna('out',29,0)
   34:      rewind ifi
   35:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   35:#if NOAWRITE
   36:      write(ifi,'(''% rows'',i5,'' cols'',i5,a)') nr,nc
   37:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   37:#else
   38:      call awrit2('%% rows %i cols %i real',' ',80,ifi,nr,nc)
   39:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   46:      call fclose(ifi)
   47:
   48:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   49:      outs = ' prm: wrote '//strn//' continue?'
   50:      print *, outs
   51:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   52:      outs = ' prm: wrote '//strn
   53:      call awrit0('%a.  Continue?',outs,-80,-i1mach(2))
   54:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   55:      read(*,'(a80)') outs
   56:
   57:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   57:#if NOAWRITE
   58:      if (outs .eq. 'q') stop 'quit in prmx'
   59:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   59:#else
   60:      if (outs .eq. 'q') call rx0('quit in prmx')
   61:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  132:      ifi = fopna('out',29,0)
  133:      rewind ifi
  134:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  134:#if NOAWRITE
  135:      write(ifi,'(''% rows'',i5,'' cols'',i5,a)') nr,nc,outs(1:10)
  136:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  136:#else
  137:      call awrit2('%% rows %i cols %i'//outs,' ',80,ifi,nr,nc)
  138:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  147:      endif
  148:      call fclose(ifi)
  149:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  150:      outs = ' prm: wrote '//strn//' continue?'
  151:      print *, outs
  152:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  153:      outs = ' zprm: wrote '//strn
  154:      call awrit0('%a.  Continue?',outs,-80,-i1mach(2))
  155:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  156:      read(*,'(a80)') outs
  157:
  158:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  158:#if NOAWRITE
  159:      if (outs .eq. 'q') stop 'quit in zprm'
  160:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  160:#else
  161:      if (outs .eq. 'q') call rx0('quit in zprm')
  162:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  216:
  217:      ifi = fopna('in',29,0)
  218:      if (rdm(ifi,0,0,' ',xx,n1*n2,n3) .ne. 1) call
  219:     .rx('rdm3:  file mismatch') <== no parse pattern found for "if (F2PY_EXPR_TUPLE_36628) callrx(F2PY_EXPR_TUPLE_36629)" in 'Subroutine' block.
  220:      do  10  i = 1, n1
WARNING while processing 'subs/rdeq.F' (mode='fix')..
   51:     .g2snm2, g2snm3, g2snm4, f2snm1, f2snm2,
   52:     .f2snm3, f2snm4, g1sng1, f1snf1, g2sng2, f2snf2
   53:      double precision
   54:     .g1p, f1p, g2p, f2p, norm, gmt(2,2),
   55:     .fmt(2,2), gmt0(2,2,5), fmt0(2,2,5), gmtde(2,2),
   56:     .fmtde(2,2),smalpa(2,2),gn1(2,5,nr),gn2(2,5,nr),
   57:     .gn1dot(2,nr), gn2dot(2,nr),fn1(2,5,nr),
   58:     .fn2(2,5,nr), fn1dot(2,nr), fn2dot(2,nr),
   59:     .factor(nr), factor1(nr),  factor2(nr),
   60:     .factor3(nr), product, product1,
   61:     .gsmt(2,2), psi(4,nr), ksi(4,nr), mu,
   62:     .ksop(0:lmx,nsp,nsp,6), smalpa1(2,2) <== no parse pattern found for "double precisiong1p, f1p, g2p, f2p, norm, gmt(F2PY_EXPR_TUPLE_37237),fmt(F2PY_EXPR_TUPLE_37238), gmt0(F2PY_EXPR_TUPLE_37239), fmt0(F2PY_EXPR_TUPLE_37240), gmtde(F2PY_EXPR_TUPLE_37241),fmtde(F2PY_EXPR_TUPLE_37242),smalpa(F2PY_EXPR_TUPLE_37243),gn1(F2PY_EXPR_TUPLE_37244),gn2(F2PY_EXPR_TUPLE_37245),gn1dot(F2PY_EXPR_TUPLE_37246), gn2dot(F2PY_EXPR_TUPLE_37247),fn1(F2PY_EXPR_TUPLE_37248),fn2(F2PY_EXPR_TUPLE_37249), fn1dot(F2PY_EXPR_TUPLE_37250), fn2dot(F2PY_EXPR_TUPLE_37251),factor(nr), factor1(nr),  factor2(nr),factor3(nr), product, product1,gsmt(F2PY_EXPR_TUPLE_37252), psi(F2PY_EXPR_TUPLE_37253), ksi(F2PY_EXPR_TUPLE_37254), mu,ksop(F2PY_EXPR_TUPLE_37255), smalpa1(F2PY_EXPR_TUPLE_37256)" in 'Subroutine' block.
   63:C     double precision factor4(nr),factor5(nr)
   64:      integer n, ie, alpha, alp1, alp2, nrk, ir,
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  279:        call sigflg(dc,'rsig',out2,w,w,w,lfbzin,w,lonesp,qoffi,w)
  280:      endif
  281:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  285:        lfbzin = .false.
  286:      endif
  287:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  287:#else
  288:      lfbzin = lfbzin .or. mod(lssym,2)
  289:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1605:  306 format(' Failed to parse string ',a,' ... try again.')
 1606:  100 continue
 1607:#if PRTNOCR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1607:#if PRTNOCR
 1608:      print '('' Option (enter ? for menu) : '',$)'
 1609:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1609:#else
 1610:      print '('' Option (enter ? for menu) : '')'
 1611:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  135:        call sigflg(dc,'rsig',out2,w,w,w,lfbzin,w,lonesp,qoffi,w)
  136:      endif
  137:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  141:        lfbzin = .false.
  142:      endif
  143:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  143:#else
  144:      lfbzin = lfbzin .or. mod(lssym,2)
  145:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   43:      integer l,isp,lp1,konfig,ir,iprint,stdo,nglob,ltop
   44:      double precision sum1(10,2),sum2(10,2),tol,r,fac,sum,rmax,rcw
   45:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   45:#if F90 | AUTO_ARRAY
   46:      double precision rh1(nr),rh2(nr),rwgt(nr),ddot
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   49:      parameter (nrmax=1501)
   50:      double precision rh1(nrmax),rh2(nrmax),rwgt(nrmax)
   51:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   56:
   57:      if (rc(1) .eq. 0) return
   58:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   58:#if ! (F90 | AUTO_ARRAY)
   59:      if (nr .gt. nrmax) call rx('RNATM: nr > nrmax')
   60:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropbes_alternative.F' (mode='fix')..
   31:      end subroutine ropbes
   32:c----------------------------------------------------
   33:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropbes_alternative.F' (mode='fix')..
   45:      enddo
   46:      end subroutine bessel_yl
   47:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropyln.F' (mode='fix')..
  139:C    2 yl(i,lav-m) = sm(i)*q(i,kk)
  140:C      end
  141:#if TEST <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropyln.F' (mode='fix')..
  217:
  218:      end
  219:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rotevs.F' (mode='fix')..
  111:      call getpr(ipr)
  112:
  113:      if (ndims+lc+lh-ndimz .ne. 0) call
  114:     .rx('ROTEVS: constraint ndims+lc+lh = ndimz not satisfied') <== no parse pattern found for "if (F2PY_EXPR_TUPLE_39804) callrx(F2PY_EXPR_TUPLE_39805)" in 'Subroutine' block.
  115:
  116:C     Mode 1: Rotate sigm(assumed to be stored LDA basis) to orbital basis
WARNING while processing 'subs/roth.F' (mode='fix')..
  600:     .offli(n0*nkap0),offlj(n0*nkap0)
  601:      double precision twopi,sp,cosP,sinP,tbas(3),xx
  602:#if SGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  602:#if SGI
  603:      parameter (ncut=9)
  604:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  604:#else
  605:      parameter (ncut=9)
  606:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  822:     .offlj(n0*nkap0)
  823:      double precision twopi,sp,cosP,sinP,tbas(3),xx
  824:#if SGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  824:#if SGI
  825:      parameter (ncut=9)
  826:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  826:#else
  827:      parameter (ncut=9)
  828:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  108:      dx(ix,i) = pos(ix,iax(2,i)) - pos(ix,iax(1,i)) +
  109:     .plat(ix,1)*iax(3,i) + plat(ix,2)*iax(4,i) + plat(ix,3)*iax(5,i)
  110:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  110:#if MPI | MPIK
  111:      integer, dimension(:),allocatable :: igproc
  112:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  171:
  172:C --- For each symmetry operation, do ---
  173:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  182:C      enddo
  183:C      call poppr
  184:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  184:#endif
  185:
  186:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  188:      igini = max(igproc(procid),2)
  189:      igend = igproc(procid+1)-1
  190:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  192:      igini = 2
  193:      igend = ng
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  118:      end
  119:
  120:#if TEST <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  201:      call prmx('from shorbz',pos2,3,3,48)
  202:      end
  203:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  202:      end
  203:#endif
  204:#if TEST2 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  234:
  235:      end
  236:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/spcgrp.F' (mode='fix')..
  257:      subroutine spgprd(g1,a1,g2,a2,g,a)
  258:C     implicit none
  259:      double precision
  260:     .g1(3,3),g2(3,3),g(3,3),sum,a1(3),a2(3),a(3),h(3,3),ah(3) <== no parse pattern found for "double precisiong1(F2PY_EXPR_TUPLE_42590),g2(F2PY_EXPR_TUPLE_42591),g(F2PY_EXPR_TUPLE_42592),sum,a1(3),a2(3),a(3),h(F2PY_EXPR_TUPLE_42593),ah(3)" in 'Subroutine' block.
  261:      integer i,j,k
WARNING while processing 'subs/subzi.F' (mode='fix')..
    1:#define MPI 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
    1:#define MULLIKEN 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  693:      allocate(evecc(ndimhx,ndimhx),work(ndimhx,ndimhx))
  694:
  695:#if MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  698:      if (j .ne. 0) call rx('mullmf: failed to generate overlap')
  699:      call zgetri(ndimhx,evecc,ndimhx,ipiv,work,ndimhx**2,j)
  700:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  707:     .      ' outside range (1:%i)',k,ndimhx)
  708:          endif
  709:#if MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  709:#if MULLIKEN
  710:          wk(i) = wk(i) + evecc(i,k)*evec(k,i)
  711:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  711:#else
  712:          wk(i) = wk(i) + dconjg(evec(k,i))*evec(k,i)
  713:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  714:        enddo
  715:
  716:#ifndef MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  719:          call rx('bug in suqlse')
  720:        endif
  721:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   60:      logical cmdopt
   61:      double precision eula(3),ddet33,xx
   62:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   64:      double complex u(2,2,ng)
   65:C     double complex s11,s12,s21,s22,su(2,2),usu(2,2)
   66:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   68:      parameter(ngmx=48)
   69:      double complex u(2,2,ngmx)
   70:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
moddict= {'m_struc_def': '$(subs_obj_path)/m_struc_def.o', 'm_toksw': '$(subs_obj_path)/m_toksw.o', 'm_events': '$(fp_obj_path)/m_events.o', 'm_rdctrl2_func': '$(subs_obj_path)/rdctrl2.o', 'm_psigd': '$(subs_obj_path)/m_psigd.o', 'm_struc_func': '$(subs_obj_path)/m_struc_def.o', 'm_hamindex': '$(subs_obj_path)/m_hamindex.o', 'm_sstrnsname': '$(subs_obj_path)/m_sstrnsname.o', 'm_rdctrl': '$(subs_obj_path)/m_rdctrl.o', 'm_gtv': '$(subs_obj_path)/m_gtv.o'}
pf= (\Wifindiv\s*\(|\Wifindiv2\s*\(|\Wpolinta\s*\(|\Waiocor\s*\(|\Waiogen\s*\(|\Waiomom\s*\(|\Waiomp\s*\(|\Waiopar\s*\(|\Waiopot\s*\(|\Waiorme\s*\(|\Waiosop\s*\(|\Waiova\s*\(|\Wavwsr\s*\(|\Wmxxyz\s*\(|\Wiget\s*\(|\Wpvclst\s*\(|\Wcmplat\s*\(|\Wdrr2\s*\(|\Wefrng2\s*\(|\Wf100\s*\(|\Wf102\s*\(|\Wlatrel\s*\(|\Wd3nrm2\s*\(|\Wgetef\s*\(|\Wgrpeql\s*\(|\Wiclbas\s*\(|\Wiclbsj\s*\(|\Wiofa\s*\(|\Wiomoms\s*\(|\Wioorbp\s*\(|\Wiors\s*\(|\Wiosite\s*\(|\Wiosits\s*\(|\Wiostr\s*\(|\Wiostr1\s*\(|\Wiostr2\s*\(|\Wiostr4\s*\(|\Wlatvec\s*\(|\Wgetikt\s*\(|\Wuarray_size\s*\(|\Wubz_size\s*\(|\Wuctrl_size\s*\(|\Wugw_size\s*\(|\Wuham_size\s*\(|\Wulat_size\s*\(|\Wumix_size\s*\(|\Wumove_size\s*\(|\Wuoptic_size\s*\(|\Wuordn_size\s*\(|\Wupot_size\s*\(|\Wusite_size\s*\(|\Wuspec_size\s*\(|\Wustr_size\s*\(|\Wutb_size\s*\(|\Wtksw\s*\(|\Widxpr\s*\(|\Wiosiga\s*\(|\Wddet33\s*\(|\Wcosvec\s*\(|\Waginv\s*\(|\Wnnrl\s*\(|\Wovcall\s*\(|\Wparmxp\s*\(|\Woalpha\s*\(|\Wchebev\s*\(|\Wdanrm2\s*\(|\Wroth\s*\(|\Wprotht\s*\(|\Wspgeql\s*\(|\Wiobzwt\s*\(|\Wigann\s*\(|\Wnewsigmasw\s*\(|\Wpmtsig\s*\(|\Wdebugmode\s*\(|\Wsigswitch\s*\(|\Wfullmesh\s*\(|\Wnoshorbz\s*\(|\Wmatmul_pwhovl\s*\(|\Wvolsph\s*\(|\Wsclp\s*\()
using cached lmv7.F
using cached lmfav7.F
using cached lmv7util.F
using cached fp/addbkg.F
using cached fp/addrbl.F
using cached fp/atqval.F
using cached fp/augmat.F
using cached fp/augmbl.F
using cached fp/bndconn_v2.F
using cached fp/bndfp.F
using cached fp/bstrux.F
using cached fp/chimedit.F
using cached fp/corprm.F
using cached fp/dfaugm.F
using cached fp/dfqkkl.F
using cached fp/dfratm.F
using cached fp/dfrce.F
using cached fp/efldos.F
using cached fp/elocp.F
using cached fp/fklbl.F
using cached fp/flocbl.F
using cached fp/fpchk.F
using cached fp/fradhd.F
using cached fp/fradpk.F
using cached fp/fsmbl.F
using cached fp/fsmbpw.F
using cached fp/ftlxp.F
using cached fp/gaugm.F
using cached fp/gfigbl.F
using cached fp/ggugbl.F
using cached fp/ghibl.F
using cached fp/ghigbl.F
using cached fp/ghios.F
using cached fp/gklbl.F
using cached fp/gklft.F
using cached fp/gklq.F
using cached fp/grfmsh.F
using cached fp/gtbsl2.F
using cached fp/gvsym.F
using cached fp/gwcphi.F
using cached fp/hambl.F
using cached fp/hambls.F
using cached fp/hgugbl.F
using cached fp/hhibl.F
using cached fp/hhigbl.F
using cached fp/hhugbl.F
using cached fp/hklbl.F
using cached fp/hklft.F
using cached fp/hklgbl.F
using cached fp/hklos.F
using cached fp/hsibl.F
using cached fp/hsmbl.F
using cached fp/hxpbl.F
using cached fp/hxpgbl.F
using cached fp/hxpos.F
using cached fp/ioden.F
using cached fp/jxpos.F
using cached fp/lgstar.F
using cached fp/lindsc.F
using cached fp/lmaux.F
using cached fp/lmfp.F
using cached fp/locpot.F
using cached fp/loctsh.F
using cached fp/m_events.F
using cached fp/makusp.F
using cached fp/makusq.F
using cached fp/mixrho.F
using cached fp/mkdmtu.F
using cached fp/mkehkf.F
using cached fp/mkekin.F
using cached fp/mkewgt.F
using cached fp/mkorbm.F
using cached fp/mkpdos.F
using cached fp/mkpot.F
using cached fp/mkrout.F
using cached fp/momusl.F
using cached fp/mshdot.F
using cached fp/mshint.F
using cached fp/mshn3p.F
using cached fp/mshvmt.F
using cached fp/mullmf.F
using cached fp/ncutcorrect.F
using cached fp/ovlocr.F
using cached fp/ovlpfa.F
using cached fp/paug1.F
using cached fp/pkl2ro.F
using cached fp/pnunew.F
using cached fp/poinsp.F
using cached fp/polinta.F
using cached fp/potpus.F
using cached fp/praugm.F
using cached fp/prrhat.F
using cached fp/prtev.F
using cached fp/pwmat.F
using cached fp/rdovfa.F
using cached fp/rhgcmp.F
using cached fp/rhogkl.F
using cached fp/rhomom.F
using cached fp/rlocbl.F
using cached fp/rsedit.F
using cached fp/rsibl.F
using cached fp/setofl.F
using cached fp/sgvsym.F
using cached fp/smcorm.F
using cached fp/smhsbl.F
using cached fp/smshft.F
using cached fp/smves.F
using cached fp/smvxcm.F
using cached fp/sopert.F
using cached fp/splrho.F
using cached fp/stonerpb.F
using cached fp/stonerrsa.F
using cached fp/sugw.F
using cached fp/suphas.F
using cached fp/supot.F
using cached fp/surho.F
using cached fp/suylg.F
using cached fp/symrho.F
using cached fp/tbhsi.F
using cached fp/totfrc.F
using cached fp/ugcomp.F
using cached fp/vcdmel.F
using cached fp/vesft.F
using cached fp/vesgcm.F
using cached fp/vlm2us.F
using cached fp/vxc0gc.F
using cached fp/vxcnlm.F
using cached fp/vxcnls.F
using cached fp/vxcnsp.F
using cached fp/vxnlcc.F
using cached fp/vxtrap.F
using cached fp/wrhomt.F
using cached subs/addbas.F
using cached subs/addrwf.F
using cached subs/aiocor.F
using cached subs/aiogen.F
using cached subs/aiomom.F
using cached subs/aiomp.F
using cached subs/aiopar.F
using cached subs/aiopot.F
using cached subs/aiorme.F
using cached subs/aiosop.F
using cached subs/aiova.F
using cached subs/asados.F
using cached subs/asars.F
using cached subs/asymop.F
using cached subs/atomsr.F
using cached subs/atwf.F
using cached subs/avwsr.F
using cached subs/baslst.F
using cached subs/besslr.F
using cached subs/bloch.F
using cached subs/bzints.F
using cached subs/bzmesh.F
using cached subs/bzmio.F
using cached subs/bzwts.F
using cached subs/bzwtsf.F
using cached subs/ccutup.F
using cached subs/chgmsh.F
using cached subs/chkdmu.F
using cached subs/clabel.F
using cached subs/clist.F
using cached subs/clsprm.F
using cached subs/clsset.F
using cached subs/cmplat.F
using cached subs/config.F
using cached subs/contet.F
using cached subs/cshear.F
using cached subs/defpq.F
using cached subs/defspc.F
using cached subs/defwsr.F
using cached subs/delstd.F
using cached subs/delstp.F
using cached subs/dfphi.F
using cached subs/dlmn.F
using cached subs/dosio.F
using cached subs/dosspl.F
using cached subs/dostet.F
using cached subs/dpdbyl.F
using cached subs/dpdftr.F
using cached subs/drr2.F
using cached subs/dstrbp.F
using cached subs/dvdos.F
using cached subs/easypbe.F
using cached subs/efrng2.F
using cached subs/evxcp.F
using cached subs/evxcv.F
using cached subs/f100.F
using cached subs/f102.F
using cached subs/fermi.F
using cached subs/findes.F
using cached subs/fixef0.F
using cached subs/fixpos.F
using cached subs/fovlp.F
using cached subs/freeat.F
using cached subs/freeat.bk.F
using cached subs/fswgts.F
using cached subs/gengrp.F
using cached subs/gensym.F
using cached subs/getbzp.F
using cached subs/getcor.F
using cached subs/getef.F
using cached subs/getq.F
using cached subs/getqp.F
using cached subs/groupg.F
using cached subs/grpfnd.F
using cached subs/grpgen.F
using cached subs/grpop.F
using cached subs/gtbsl1.F
using cached subs/gtbvec.F
using cached subs/gtpcor.F
using cached subs/gvctof.F
using cached subs/gvlist.F
using cached subs/gvlst2.F
using cached subs/gvmtch.F
using cached subs/hamfb3.F
using cached subs/hanr.F
using cached subs/hansmd.F
using cached subs/hansmr.F
using cached subs/hansr.F
using cached subs/hansr4.F
using cached subs/hansr5.F
using cached subs/hansrz.F
using cached subs/hft2rs.F
using cached subs/hnsmft.F
using cached subs/hsmq.F
using cached subs/iax2fd.F
using cached subs/iclbas.F
using cached subs/intnos.F
using cached subs/invbl.F
using cached subs/iobsmv.F
using cached subs/ioeula.F
using cached subs/iofa.F
using cached subs/iomomq.F
using cached subs/iomoms.F
using cached subs/iomomx.F
using cached subs/ioorbp.F
using cached subs/iopos.F
using cached subs/iorbtm.F
using cached subs/iors.F
using cached subs/iosave.F
using cached subs/iosite.F
using cached subs/iosits.F
using cached subs/iostr.F
using cached subs/latlim.F
using cached subs/lattc.F
using cached subs/lattdf.F
using cached subs/lattic.F
using cached subs/latvec.F
using cached subs/ldau.F
using cached subs/lx2vec.F
using cached subs/m_gtv.F
using cached subs/m_hamindex.F
using cached subs/m_psigd.F
using cached subs/m_rdctrl.F
using cached subs/m_sstrnsname.F
using cached subs/m_struc_def.F
using cached subs/m_toksw.F
using cached subs/madmat.F
using cached subs/makdla.F
using cached subs/makdos.F
using cached subs/makidx.F
using cached subs/maknos.F
using cached subs/maknrs.F
using cached subs/makrm0.F
using cached subs/makrot.F
using cached subs/makrwf.F
using cached subs/mcasim.F
using cached subs/mchan.F
using cached subs/mkcond.F
using cached subs/mkplat.F
using cached subs/mkqp.F
using cached subs/mkrtab.F
using cached subs/mksym.F
using cached subs/mshsiz.F
using cached subs/mtchae.F
using cached subs/mxmymz.F
using cached subs/nghbor.F
using cached subs/nnrl.F
using cached subs/nosbzm.F
using cached subs/nwit.F
using cached subs/orbl.F
using cached subs/ovlchk.F
using cached subs/ovmin.F
using cached subs/pairc.F
using cached subs/parmxp.F
using cached subs/phidx.F
using cached subs/phvsfp.F
using cached subs/pkli.F
using cached subs/pptrns.F
using cached subs/pqmix.F
using cached subs/prdmts.F
using cached subs/prjpos.F
using cached subs/prmx.F
using cached subs/projql.F
using cached subs/prrmsh.F
using cached subs/psymop.F
using cached subs/pvsms2.F
using cached subs/qdist.F
using cached subs/radgkl.F
using cached subs/radgra.F
using cached subs/radmsh.F
using cached subs/radpkl.F
using cached subs/rdctrl2.F
using cached subs/rdeq.F
using cached subs/rdsigm.F
using cached subs/rdsigm2.F
using cached subs/relax.F
using cached subs/rlxstp.F
using cached subs/rmesh.F
using cached subs/rnatm.F
using cached subs/ropbes.F
using cached subs/ropbes.old.F
using cached subs/ropbes_alternative.F
using cached subs/ropcsm.F
using cached subs/roplat.F
using cached subs/ropyln.F
using cached subs/ropyln1.F
using cached subs/rotevs.F
using cached subs/roth.F
using cached subs/rothrm.F
using cached subs/rotpnt.F
using cached subs/rotspu.F
using cached subs/rotwv.F
using cached subs/rotycs.F
using cached subs/rseq.F
using cached subs/rsmsym.F
using cached subs/rsort.F
using cached subs/rstr0.F
using cached subs/s2sph.F
using cached subs/scg.F
using cached subs/scglp1.F
using cached subs/sclwsr.F
using cached subs/setcg.F
using cached subs/shear.F
using cached subs/shftpp.F
using cached subs/shoist.F
using cached subs/shorbz.F
using cached subs/shorps.F
using cached subs/shortn.F
using cached subs/shoshl.F
using cached subs/siteid.F
using cached subs/slinz.F
using cached subs/slist.F
using cached subs/soprm.F
using cached subs/spackv_array_copy.F
using cached subs/spcgrp.F
using cached subs/splcls.F
using cached subs/splwts.F
using cached subs/stoner.F
using cached subs/struc_strn.F
using cached subs/strx00.F
using cached subs/subasi.F
using cached subs/subzi.F
using cached subs/suclst.F
using cached subs/sudmtu.F
using cached subs/suemph.F
using cached subs/sugcut.F
using cached subs/suham.F
using cached subs/suham2.F
using cached subs/suidx.F
using cached subs/suldau.F
using cached subs/sumlst.F
using cached subs/sumsro.F
using cached subs/suqlst.F
using cached subs/switch.F
using cached subs/sylm.F
using cached subs/sylmnc.F
using cached subs/symcry.F
using cached subs/symdmu.F
using cached subs/symfor.F
using cached subs/symiax.F
using cached subs/symlat.F
using cached subs/symprj.F
using cached subs/symq.F
using cached subs/symstr.F
using cached subs/symtbl.F
using cached subs/tailsm.F
using cached subs/tetirr.F
using cached subs/trysop.F
using cached subs/uspecb.F
using cached subs/vecpkl.F
using cached subs/veecomp.F
using cached subs/vldau.F
using cached subs/volsph.F
using cached subs/vxc0sp.F
using cached subs/vxcgga.F
using cached subs/vxcgr2.F
using cached subs/vxnloc.F
using cached subs/writebasis.F
using cached subs/xcfunc.F
using cached subs/xlgen.F
using cached subs/xxxbnd.F
using cached subs/xxxdif.F
using cached subs/ylmrtg.F
using cached lmv7.F
using cached lmfav7.F
using cached lmv7util.F
using cached fp/addbkg.F
using cached fp/addrbl.F
using cached fp/atqval.F
using cached fp/augmat.F
using cached fp/augmbl.F
using cached fp/bndconn_v2.F
using cached fp/bndfp.F
using cached fp/bstrux.F
using cached fp/chimedit.F
using cached fp/corprm.F
using cached fp/dfaugm.F
using cached fp/dfqkkl.F
using cached fp/dfratm.F
using cached fp/dfrce.F
using cached fp/efldos.F
using cached fp/elocp.F
using cached fp/fklbl.F
using cached fp/flocbl.F
using cached fp/fpchk.F
using cached fp/fradhd.F
using cached fp/fradpk.F
using cached fp/fsmbl.F
using cached fp/fsmbpw.F
using cached fp/ftlxp.F
using cached fp/gaugm.F
using cached fp/gfigbl.F
using cached fp/ggugbl.F
using cached fp/ghibl.F
using cached fp/ghigbl.F
using cached fp/ghios.F
using cached fp/gklbl.F
using cached fp/gklft.F
using cached fp/gklq.F
using cached fp/grfmsh.F
using cached fp/gtbsl2.F
using cached fp/gvsym.F
using cached fp/gwcphi.F
using cached fp/hambl.F
using cached fp/hambls.F
using cached fp/hgugbl.F
using cached fp/hhibl.F
using cached fp/hhigbl.F
using cached fp/hhugbl.F
using cached fp/hklbl.F
using cached fp/hklft.F
using cached fp/hklgbl.F
using cached fp/hklos.F
using cached fp/hsibl.F
using cached fp/hsmbl.F
using cached fp/hxpbl.F
using cached fp/hxpgbl.F
using cached fp/hxpos.F
using cached fp/ioden.F
using cached fp/jxpos.F
using cached fp/lgstar.F
using cached fp/lindsc.F
using cached fp/lmaux.F
using cached fp/lmfp.F
using cached fp/locpot.F
using cached fp/loctsh.F
using cached fp/m_events.F
using cached fp/makusp.F
using cached fp/makusq.F
using cached fp/mixrho.F
using cached fp/mkdmtu.F
using cached fp/mkehkf.F
using cached fp/mkekin.F
using cached fp/mkewgt.F
using cached fp/mkorbm.F
using cached fp/mkpdos.F
using cached fp/mkpot.F
using cached fp/mkrout.F
using cached fp/momusl.F
using cached fp/mshdot.F
using cached fp/mshint.F
using cached fp/mshn3p.F
using cached fp/mshvmt.F
using cached fp/mullmf.F
using cached fp/ncutcorrect.F
using cached fp/ovlocr.F
using cached fp/ovlpfa.F
using cached fp/paug1.F
using cached fp/pkl2ro.F
using cached fp/pnunew.F
using cached fp/poinsp.F
using cached fp/polinta.F
using cached fp/potpus.F
using cached fp/praugm.F
using cached fp/prrhat.F
using cached fp/prtev.F
using cached fp/pwmat.F
using cached fp/rdovfa.F
using cached fp/rhgcmp.F
using cached fp/rhogkl.F
using cached fp/rhomom.F
using cached fp/rlocbl.F
using cached fp/rsedit.F
using cached fp/rsibl.F
using cached fp/setofl.F
using cached fp/sgvsym.F
using cached fp/smcorm.F
using cached fp/smhsbl.F
using cached fp/smshft.F
using cached fp/smves.F
using cached fp/smvxcm.F
using cached fp/sopert.F
using cached fp/splrho.F
using cached fp/stonerpb.F
using cached fp/stonerrsa.F
using cached fp/sugw.F
using cached fp/suphas.F
using cached fp/supot.F
using cached fp/surho.F
using cached fp/suylg.F
using cached fp/symrho.F
using cached fp/tbhsi.F
using cached fp/totfrc.F
using cached fp/ugcomp.F
using cached fp/vcdmel.F
using cached fp/vesft.F
using cached fp/vesgcm.F
using cached fp/vlm2us.F
using cached fp/vxc0gc.F
using cached fp/vxcnlm.F
using cached fp/vxcnls.F
using cached fp/vxcnsp.F
using cached fp/vxnlcc.F
using cached fp/vxtrap.F
using cached fp/wrhomt.F
using cached subs/addbas.F
using cached subs/addrwf.F
using cached subs/aiocor.F
using cached subs/aiogen.F
using cached subs/aiomom.F
using cached subs/aiomp.F
using cached subs/aiopar.F
using cached subs/aiopot.F
using cached subs/aiorme.F
using cached subs/aiosop.F
using cached subs/aiova.F
using cached subs/asados.F
using cached subs/asars.F
using cached subs/asymop.F
using cached subs/atomsr.F
using cached subs/atwf.F
using cached subs/avwsr.F
using cached subs/baslst.F
using cached subs/besslr.F
using cached subs/bloch.F
using cached subs/bzints.F
using cached subs/bzmesh.F
using cached subs/bzmio.F
using cached subs/bzwts.F
using cached subs/bzwtsf.F
using cached subs/ccutup.F
using cached subs/chgmsh.F
using cached subs/chkdmu.F
using cached subs/clabel.F
using cached subs/clist.F
using cached subs/clsprm.F
using cached subs/clsset.F
using cached subs/cmplat.F
using cached subs/config.F
using cached subs/contet.F
using cached subs/cshear.F
using cached subs/defpq.F
using cached subs/defspc.F
using cached subs/defwsr.F
using cached subs/delstd.F
using cached subs/delstp.F
using cached subs/dfphi.F
using cached subs/dlmn.F
using cached subs/dosio.F
using cached subs/dosspl.F
using cached subs/dostet.F
using cached subs/dpdbyl.F
using cached subs/dpdftr.F
using cached subs/drr2.F
using cached subs/dstrbp.F
using cached subs/dvdos.F
using cached subs/easypbe.F
using cached subs/efrng2.F
using cached subs/evxcp.F
using cached subs/evxcv.F
using cached subs/f100.F
using cached subs/f102.F
using cached subs/fermi.F
using cached subs/findes.F
using cached subs/fixef0.F
using cached subs/fixpos.F
using cached subs/fovlp.F
using cached subs/freeat.F
using cached subs/freeat.bk.F
using cached subs/fswgts.F
using cached subs/gengrp.F
using cached subs/gensym.F
using cached subs/getbzp.F
using cached subs/getcor.F
using cached subs/getef.F
using cached subs/getq.F
using cached subs/getqp.F
using cached subs/groupg.F
using cached subs/grpfnd.F
using cached subs/grpgen.F
using cached subs/grpop.F
using cached subs/gtbsl1.F
using cached subs/gtbvec.F
using cached subs/gtpcor.F
using cached subs/gvctof.F
using cached subs/gvlist.F
using cached subs/gvlst2.F
using cached subs/gvmtch.F
using cached subs/hamfb3.F
using cached subs/hanr.F
using cached subs/hansmd.F
using cached subs/hansmr.F
using cached subs/hansr.F
using cached subs/hansr4.F
using cached subs/hansr5.F
using cached subs/hansrz.F
using cached subs/hft2rs.F
using cached subs/hnsmft.F
using cached subs/hsmq.F
using cached subs/iax2fd.F
using cached subs/iclbas.F
using cached subs/intnos.F
using cached subs/invbl.F
using cached subs/iobsmv.F
using cached subs/ioeula.F
using cached subs/iofa.F
using cached subs/iomomq.F
using cached subs/iomoms.F
using cached subs/iomomx.F
using cached subs/ioorbp.F
using cached subs/iopos.F
using cached subs/iorbtm.F
using cached subs/iors.F
using cached subs/iosave.F
using cached subs/iosite.F
using cached subs/iosits.F
using cached subs/iostr.F
using cached subs/latlim.F
using cached subs/lattc.F
using cached subs/lattdf.F
using cached subs/lattic.F
using cached subs/latvec.F
using cached subs/ldau.F
using cached subs/lx2vec.F
using cached subs/m_gtv.F
using cached subs/m_hamindex.F
using cached subs/m_psigd.F
using cached subs/m_rdctrl.F
using cached subs/m_sstrnsname.F
using cached subs/m_struc_def.F
using cached subs/m_toksw.F
using cached subs/madmat.F
using cached subs/makdla.F
using cached subs/makdos.F
using cached subs/makidx.F
using cached subs/maknos.F
using cached subs/maknrs.F
using cached subs/makrm0.F
using cached subs/makrot.F
using cached subs/makrwf.F
using cached subs/mcasim.F
using cached subs/mchan.F
using cached subs/mkcond.F
using cached subs/mkplat.F
using cached subs/mkqp.F
using cached subs/mkrtab.F
using cached subs/mksym.F
using cached subs/mshsiz.F
using cached subs/mtchae.F
using cached subs/mxmymz.F
using cached subs/nghbor.F
using cached subs/nnrl.F
using cached subs/nosbzm.F
using cached subs/nwit.F
using cached subs/orbl.F
using cached subs/ovlchk.F
using cached subs/ovmin.F
using cached subs/pairc.F
using cached subs/parmxp.F
using cached subs/phidx.F
using cached subs/phvsfp.F
using cached subs/pkli.F
using cached subs/pptrns.F
using cached subs/pqmix.F
using cached subs/prdmts.F
using cached subs/prjpos.F
using cached subs/prmx.F
using cached subs/projql.F
using cached subs/prrmsh.F
using cached subs/psymop.F
using cached subs/pvsms2.F
using cached subs/qdist.F
using cached subs/radgkl.F
using cached subs/radgra.F
using cached subs/radmsh.F
using cached subs/radpkl.F
using cached subs/rdctrl2.F
using cached subs/rdeq.F
using cached subs/rdsigm.F
using cached subs/rdsigm2.F
using cached subs/relax.F
using cached subs/rlxstp.F
using cached subs/rmesh.F
using cached subs/rnatm.F
using cached subs/ropbes.F
using cached subs/ropbes.old.F
using cached subs/ropbes_alternative.F
using cached subs/ropcsm.F
using cached subs/roplat.F
using cached subs/ropyln.F
using cached subs/ropyln1.F
using cached subs/rotevs.F
using cached subs/roth.F
using cached subs/rothrm.F
using cached subs/rotpnt.F
using cached subs/rotspu.F
using cached subs/rotwv.F
using cached subs/rotycs.F
using cached subs/rseq.F
using cached subs/rsmsym.F
using cached subs/rsort.F
using cached subs/rstr0.F
using cached subs/s2sph.F
using cached subs/scg.F
using cached subs/scglp1.F
using cached subs/sclwsr.F
using cached subs/setcg.F
using cached subs/shear.F
using cached subs/shftpp.F
using cached subs/shoist.F
using cached subs/shorbz.F
using cached subs/shorps.F
using cached subs/shortn.F
using cached subs/shoshl.F
using cached subs/siteid.F
using cached subs/slinz.F
using cached subs/slist.F
using cached subs/soprm.F
using cached subs/spackv_array_copy.F
using cached subs/spcgrp.F
using cached subs/splcls.F
using cached subs/splwts.F
using cached subs/stoner.F
using cached subs/struc_strn.F
using cached subs/strx00.F
using cached subs/subasi.F
using cached subs/subzi.F
using cached subs/suclst.F
using cached subs/sudmtu.F
using cached subs/suemph.F
using cached subs/sugcut.F
using cached subs/suham.F
using cached subs/suham2.F
using cached subs/suidx.F
using cached subs/suldau.F
using cached subs/sumlst.F
using cached subs/sumsro.F
using cached subs/suqlst.F
using cached subs/switch.F
using cached subs/sylm.F
using cached subs/sylmnc.F
using cached subs/symcry.F
using cached subs/symdmu.F
using cached subs/symfor.F
using cached subs/symiax.F
using cached subs/symlat.F
using cached subs/symprj.F
using cached subs/symq.F
using cached subs/symstr.F
using cached subs/symtbl.F
using cached subs/tailsm.F
using cached subs/tetirr.F
using cached subs/trysop.F
using cached subs/uspecb.F
using cached subs/vecpkl.F
using cached subs/veecomp.F
using cached subs/vldau.F
using cached subs/volsph.F
using cached subs/vxc0sp.F
using cached subs/vxcgga.F
using cached subs/vxcgr2.F
using cached subs/vxnloc.F
using cached subs/writebasis.F
using cached subs/xcfunc.F
using cached subs/xlgen.F
using cached subs/xxxbnd.F
using cached subs/xxxdif.F
using cached subs/ylmrtg.F
------------ dictionary ------------------
{'hansr4': 'subs/hansr4.F', 'hansr5': 'subs/hansr5.F', 'invbl': 'subs/invbl.F', 'interparam': 'subs/rotwv.F', 'ppi2z': 'fp/gaugm.F', 'hansr1': 'subs/hansr.F', 'hansr2': 'subs/hansr.F', 'scg': 'subs/scg.F', 'imxmnx': 'subs/orbl.F', 'ddet33': 'subs/mkplat.F', 'rotdlmm': 'subs/suham.F', 'aiomp': 'subs/aiomp.F', 'getef': 'subs/getef.F', 'vecpkl': 'subs/vecpkl.F', 'gvlst2': 'subs/gvlst2.F', 'vxcnsp': 'fp/vxcnsp.F', 'iorbtm': 'subs/iorbtm.F', 'clsset': 'subs/clsset.F', 'nwitsv': 'subs/nwit.F', 'getqvc': 'subs/getq.F', 'iclbsj': 'subs/iclbas.F', 'rseq': 'subs/rseq.F', 'poiss0': 'subs/atomsr.F', 'gvsym': 'fp/gvsym.F', 'ioqpp': 'lmv7util.F subs/clsprm.F', 'rdistn': 'subs/qdist.F', 'uham_init': 'subs/m_struc_def.F', 'setcg': 'subs/setcg.F', 'eprod': 'subs/pairc.F', 'gvlstn': 'subs/gvlst2.F', 'pqmixb': 'subs/pqmix.F', 'hansrz': 'subs/hansrz.F', 'fint': 'subs/hnsmft.F', 'addbas': 'subs/addbas.F', 'sclwsr': 'subs/sclwsr.F', 'gvlsts': 'subs/gvlst2.F', 'cshear': 'subs/cshear.F', 'pblch1': 'subs/bloch.F', 'aiosop': 'subs/aiosop.F', 'ovmin': 'subs/ovmin.F', 'symtbl': 'subs/symtbl.F', 'rnatm': 'subs/rnatm.F', 'tocast': 'subs/findes.F', 'bessel': 'subs/ropbes_alternative.F', 'corlsd': 'subs/easypbe.F subs/xcfunc.F', 'gensym': 'subs/gensym.F', 'gwcphi': 'fp/gwcphi.F', 'prelx1': 'subs/relax.F', 'intnos': 'subs/intnos.F', 'mark1': 'subs/bzwts.F', 'gengrp': 'subs/gengrp.F', 'xmpbnd': 'fp/bndfp.F', 'tailsm': 'subs/tailsm.F', 'ioorbp': 'subs/ioorbp.F', 'uspecb': 'subs/uspecb.F', 'sgroup': 'subs/spcgrp.F', 'prlcb1': 'fp/bstrux.F', 'ropbs1': 'subs/ropbes.old.F', 'sopert2': 'fp/sopert.F', 'prlcb2': 'fp/rlocbl.F', 'suqlst': 'subs/suqlst.F', 'xxxadd': 'subs/shear.F', 'vldau': 'subs/vldau.F', 'ifindiv': 'fp/hsibl.F', 'suqlsm': 'subs/suqlst.F', 'ftlxp2': 'fp/ftlxp.F', 'stplat': 'subs/mkplat.F', 'newrho': 'subs/atomsr.F', 'rwftai': 'fp/vxtrap.F', 'upot_size': 'subs/m_struc_def.F', 'makrm0': 'subs/makrm0.F', 'pgvmat': 'subs/gvmtch.F', 'rhgcm3': 'fp/rhgcmp.F', 'rhgcm2': 'fp/rhgcmp.F', 'grdepl': 'fp/lmfp.F', 'm_struc_func': 'subs/m_struc_def.F', 'iosigh': 'subs/rdsigm.F', 'symes': 'subs/findes.F', 'pqmxio': 'subs/pqmix.F', 'product2': 'subs/rdeq.F', 'gtv_i4': 'subs/m_gtv.F', 'igann': 'subs/suham.F', 'atomsc': 'subs/atomsr.F', 'volsph': 'subs/volsph.F', 'hxpbl': 'fp/hxpbl.F', 'groupg': 'subs/groupg.F', 'ifindiv2': 'fp/hsibl.F', 'bzwtsm': 'subs/bzwtsf.F', 'dfphi': 'subs/dfphi.F', 'bzwtsf': 'subs/bzwtsf.F', 'shortn3_initialize': 'subs/shorbz.F', 'xxcnls': 'fp/vxcnls.F', 'chebev': 'subs/ropbes.F', 'cpplat': 'subs/roplat.F', 'getgv2': 'subs/pairc.F', 'cvplat': 'subs/mkplat.F', 'iclbas': 'subs/iclbas.F', 'corpbe': 'subs/easypbe.F subs/xcfunc.F', 'writebasis': 'subs/writebasis.F', 'sugw': 'fp/sugw.F', 'bessel_yl': 'subs/ropbes_alternative.F', 'upot_init': 'subs/m_struc_def.F', 'gennlat': 'subs/pairc.F', 'chkes': 'subs/findes.F', 'hansr': 'subs/hansr.F', 'gtv_setst': 'subs/m_gtv.F', 'rhgcmp': 'fp/rhgcmp.F', 'asars1': 'subs/asars.F', 'prlrho': 'fp/prrhat.F', 'uspec_size': 'subs/m_struc_def.F', 'upacks': 'subs/struc_strn.F', 's3pklx': 'subs/pkli.F', 'iosiga': 'subs/mcasim.F', 'pvgtkn': 'fp/mkekin.F', 'fpchk': 'fp/fpchk.F', 'ropynx': 'subs/ropyln1.F', 'mcasho': 'subs/mcasim.F', 'ropbes': 'subs/ropbes.F subs/ropbes.old.F subs/ropbes_alternative.F', 'rlxstp': 'subs/rlxstp.F', 'getuk': 'subs/easypbe.F subs/xcfunc.F', 'hklos': 'fp/hklos.F', 'symsmr': 'fp/symrho.F', 'baslst': 'subs/baslst.F', 'pwmat': 'fp/pwmat.F', 'initialize': 'subs/m_sstrnsname.F', 'bndfp': 'fp/bndfp.F', 'pvmix3': 'fp/mixrho.F', 'paugnl': 'fp/paug1.F', 'shortn3': 'subs/shorbz.F', 'ghibl': 'fp/ghibl.F', 'mshdot': 'fp/mshdot.F', 'flocbl': 'fp/flocbl.F', 'pvmix6': 'fp/mixrho.F', 'swrho': 'fp/splrho.F', 'findctrlstart': 'lmv7.F lmfav7.F lmv7util.F', 'bzmio': 'subs/bzmio.F', 'jxpos': 'fp/jxpos.F', 'prrmsh': 'subs/prrmsh.F', 'rotspu': 'subs/rotspu.F', 'utb_init': 'subs/m_struc_def.F', 'ovlchk': 'subs/ovlchk.F', 'atwf': 'subs/atwf.F', 'shoist': 'subs/shoist.F', 'lsets_bitop_i8': 'subs/spackv_array_copy.F', 'clabel': 'subs/clabel.F', 'aiocls': 'lmv7util.F', 'prmx': 'subs/prmx.F', 'dvdos': 'subs/dvdos.F', 'relax': 'subs/relax.F', 'paug2': 'fp/paug1.F', 'paug3': 'fp/paug1.F', 'paug1': 'fp/paug1.F', 'paug4': 'fp/paug1.F', 'ylmrtg': 'subs/ylmrtg.F', 'sigswitch': 'subs/switch.F', 'ustr_show': 'subs/m_struc_def.F', 'prodx2d': 'subs/rotwv.F', 'totfrc': 'fp/totfrc.F', 'freeat': 'subs/freeat.F subs/freeat.bk.F', 'fullmesh': 'subs/switch.F', 'shortn': 'subs/shortn.F', 'gtbsl2': 'fp/gtbsl2.F', 'defpq': 'subs/defpq.F', 'mkewgt': 'fp/mkewgt.F', 'smhsbl': 'fp/smhsbl.F', 'supot': 'fp/supot.F', 'splwts': 'subs/splwts.F', 'pysmr1': 'subs/symq.F', 'setuk': 'subs/easypbe.F subs/xcfunc.F', 'ppair1': 'subs/pairc.F', 'evcflg': 'subs/rotevs.F', 'flocb2': 'fp/flocbl.F', 'mtchae': 'subs/mtchae.F', 'lx2vec': 'subs/lx2vec.F', 'grpgen': 'subs/grpgen.F', 'parsop': 'subs/psymop.F', 'prothr': 'subs/roth.F', 'addes2': 'subs/findes.F', 'makusq': 'fp/makusq.F', 'shoshl': 'subs/shoshl.F', 'grdep2': 'subs/relax.F', 'makusp': 'fp/makusp.F', 'pvang1': 'subs/shoshl.F', 'pvang2': 'subs/shoshl.F', 'paioc2': 'lmv7util.F', 'rdist': 'subs/qdist.F', 'addrwf': 'subs/addrwf.F', 'gtv_setio': 'subs/m_gtv.F', 'lmfp': 'fp/lmfp.F', 'shorbz': 'subs/shorbz.F', 'pairc': 'subs/pairc.F', 'pchms2': 'subs/chgmsh.F', 'aginv': 'subs/mksym.F', 'prpos': 'subs/findes.F', 'surho': 'fp/surho.F', 'pz2idx': 'subs/suidx.F', 'mkekin': 'fp/mkekin.F', 'config': 'subs/config.F', 'praugm': 'fp/praugm.F', 'dosio': 'subs/dosio.F', 'yprm': 'subs/prmx.F', 'gvgvcomp': 'fp/rsibl.F', 'trysop': 'subs/trysop.F', 'augq3z': 'fp/augmbl.F', 'mkcond': 'subs/mkcond.F', 'lattc': 'subs/lattc.F', 'deflmx': 'subs/findes.F', 'zclabl': 'subs/findes.F', 'rotwv': 'subs/rotwv.F', 'splrho': 'fp/splrho.F', 'fradhd': 'fp/fradhd.F', 'hgugbl': 'fp/hgugbl.F', 'uspec_show': 'subs/m_struc_def.F', 'iax2fd': 'subs/iax2fd.F', 'siged': 'subs/rdsigm.F', 'ugw_size': 'subs/m_struc_def.F', 'rsedit': 'fp/rsedit.F', 'sylm': 'subs/sylm.F', 'conv2int': 'subs/rotwv.F', 'pdstlb': 'subs/dstrbp.F', 'pmtsig': 'subs/switch.F', 'pchmsh': 'subs/chgmsh.F', 'avwsr': 'subs/avwsr.F', 'spkli': 'subs/pkli.F', 'rsibl': 'fp/rsibl.F', 'dfratm': 'fp/dfratm.F', 'popta5': 'subs/freeat.F subs/freeat.bk.F', 'popta2': 'subs/freeat.F subs/freeat.bk.F', 'popta3': 'subs/freeat.F subs/freeat.bk.F', 'popta1': 'subs/freeat.F subs/freeat.bk.F', 'delstd': 'subs/delstd.F', 'getqp': 'subs/getqp.F', 'mkrout': 'fp/mkrout.F', 'hamfb3k': 'subs/hamfb3.F', 'symstr': 'subs/symstr.F', 'ghios': 'fp/ghios.F', 'vxcgr2': 'subs/vxcgr2.F', 'asprjq': 'subs/atomsr.F', 'delstp': 'subs/delstp.F', 'bzmsh0': 'subs/bzmesh.F', 'rsmsym': 'subs/rsmsym.F', 'bstrux': 'fp/bstrux.F', 'lmhelp': 'lmv7.F lmfav7.F lmv7util.F', 'tbhsi': 'fp/tbhsi.F', 'soprm': 'subs/soprm.F', 'ftfalo': 'subs/freeat.F subs/freeat.bk.F', 'suham2': 'subs/suham2.F', 'freats': 'subs/freeat.F subs/freeat.bk.F', 'gcor': 'subs/easypbe.F subs/xcfunc.F', 'nnrl': 'subs/nnrl.F', 'makrwf': 'subs/makrwf.F', 'pnunew': 'fp/pnunew.F', 'radmwt': 'subs/radmsh.F', 'chkxpn': 'fp/fpchk.F', 'poinsp': 'fp/poinsp.F', 'usite_size': 'subs/m_struc_def.F', 'adbkql': 'fp/addbkg.F', 'iostr': 'subs/iostr.F', 'shear': 'subs/shear.F', 'rmesh': 'subs/rmesh.F', 'mkrou1': 'fp/mkrout.F', 'mkrou2': 'fp/mkrout.F', 'mkrou3': 'fp/mkrout.F', 'mkrou4': 'fp/mkrout.F', 'mkrou5': 'fp/mkrout.F', 'mkrou6': 'fp/mkrout.F', 'xlgen': 'subs/xlgen.F', 'zprm3': 'subs/prmx.F', 'gvgetf': 'subs/gvlist.F', 'clsprp': 'lmv7util.F subs/clsprm.F', 'augqs3': 'fp/augmbl.F', 'clsprm': 'lmv7util.F subs/clsprm.F', 'shorps': 'subs/shorps.F', 'hklgbl': 'fp/hklgbl.F', 'debugmode': 'subs/switch.F', 'tkadd': 'subs/m_toksw.F', 'sortea': 'subs/pairc.F', 'lcrho': 'fp/splrho.F', 'bigges': 'subs/findes.F', 'rhomom': 'fp/rhomom.F', 'gtv_r8v': 'subs/m_gtv.F', 'hsmq': 'subs/hsmq.F', 'spgcop': 'subs/spcgrp.F', 'cppos': 'fp/lmfp.F', 'zevl': 'fp/stonerrsa.F', 'pvioeu': 'subs/ioeula.F', 'mcasan': 'subs/mcasim.F', 'prmx0': 'subs/prmx.F', 'gtpmin': 'subs/findes.F', 'suqlse': 'subs/suqlst.F', 'hansz1': 'subs/hansrz.F', 'hansz2': 'subs/hansrz.F', 'divctakao': 'subs/rdsigm.F', 'suphas': 'fp/suphas.F', 'gtbvec': 'subs/gtbvec.F', 'mkidx2': 'subs/makidx.F', 'pvrhm2': 'fp/rhomom.F', 'projql': 'subs/projql.F', 'latrel': 'subs/findes.F', 'beschb': 'subs/ropbes.F', 'ovcall': 'subs/ovmin.F', 'getinput_i4v': 'subs/m_gtv.F', 'chkdmu': 'subs/chkdmu.F', 'lgstar': 'fp/lgstar.F', 'prodln': 'subs/roplat.F', 'rstr0': 'subs/rstr0.F', 'paugq1': 'fp/bstrux.F', 'paugq2': 'fp/bstrux.F', 'f100': 'subs/f100.F', 'optfab': 'subs/freeat.F subs/freeat.bk.F', 'uoptic_show': 'subs/m_struc_def.F', 'hnsmft': 'subs/hnsmft.F', 'hsibl1': 'fp/hsibl.F', 'wripp': 'subs/invbl.F', 'pairtakao': 'subs/pairc.F', 'spec2c': 'fp/lmaux.F', 'makus2': 'fp/makusp.F', 'sugcut': 'subs/sugcut.F', 'pqmixa': 'subs/pqmix.F', 'pqmixc': 'subs/pqmix.F', 'lattic': 'subs/lattic.F', 'pvaioc': 'lmv7util.F', 'vxc0sp': 'subs/vxc0sp.F', 'fswgts': 'subs/fswgts.F', 'matm': 'fp/bndconn_v2.F', 'nosbzm': 'subs/nosbzm.F', 'uordn_show': 'subs/m_struc_def.F', 'ortrwf': 'subs/addrwf.F', 'ubz_init': 'subs/m_struc_def.F', 'spacks_copy': 'subs/spackv_array_copy.F', 'pvmix9': 'fp/mixrho.F', 'uordn_size': 'subs/m_struc_def.F', 'pusq2': 'fp/makusq.F', 'hambl': 'fp/hambl.F', 'polinta': 'fp/polinta.F', 'pusq1': 'fp/makusq.F', 'paugqp': 'fp/bstrux.F', 'pvmix7': 'fp/mixrho.F', 'pvmix4': 'fp/mixrho.F', 'pvmix5': 'fp/mixrho.F', 'sumlst': 'subs/sumlst.F', 'pairs': 'subs/pairc.F', 'pviomx': 'subs/iomomx.F', 'sttmpd': 'lmv7.F lmfav7.F', 'vxcns4': 'fp/vxcnsp.F', 'vxcns5': 'fp/vxcnsp.F', 'vxcns2': 'fp/vxcnsp.F', 'vxcns3': 'fp/vxcnsp.F', 'lindsc': 'fp/lindsc.F', 'vxnlcc': 'fp/vxnlcc.F subs/xcfunc.F', 'corpw91': 'subs/easypbe.F subs/xcfunc.F', 'rdsigm': 'subs/rdsigm.F', 'hsmbl': 'fp/hsmbl.F', 'radpkl': 'subs/radpkl.F', 'fradpk': 'fp/fradpk.F', 'rhogkl': 'fp/rhogkl.F', 'bessl2': 'subs/besslr.F', 'uham_size': 'subs/m_struc_def.F', 'suham': 'subs/suham.F', 'phidx': 'subs/phidx.F', 'mchan': 'subs/mchan.F', 'getinput_char': 'subs/m_gtv.F', 'm_events': 'fp/m_events.F', 'atwf2l': 'subs/atwf.F', 'psymrf': 'fp/symrho.F', 'm_hamindex': 'subs/m_hamindex.F', 'mkcfus': 'fp/mkrout.F', 'easypbe': 'subs/easypbe.F subs/xcfunc.F', 'shorbzm': 'subs/shorbz.F', 'prmr': 'subs/prmx.F', 'psymrq': 'fp/symrho.F', 'uoptic_size': 'subs/m_struc_def.F', 'wrirsh': 'subs/invbl.F', 'dosspl': 'subs/dosspl.F', 'mkpdos': 'fp/mkpdos.F', 'radmsh': 'subs/radmsh.F', 'addzbk': 'subs/atomsr.F', 'dlmn': 'subs/dlmn.F', 'rhopos': 'fp/symrho.F', 'pxsmr1': 'subs/symq.F', 'strx00': 'subs/strx00.F', 'm_gtv': 'subs/m_gtv.F', 'prlcb3': 'fp/rlocbl.F', 'radgkl': 'subs/radgkl.F', 'uspec_init': 'subs/m_struc_def.F', 'besslr': 'subs/besslr.F', 'phvsfp': 'subs/phvsfp.F', 'aiorme': 'subs/aiorme.F', 'clear_swtok': 'subs/m_toksw.F', 'mcasw': 'subs/mcasim.F', 'prm3': 'subs/prmx.F', 'chimedit': 'fp/chimedit.F', 'psymr1': 'fp/symrho.F', 'psymr0': 'subs/symq.F', 'besslm': 'subs/besslr.F', 'suqlsw': 'subs/suqlst.F', 'sgvsym': 'fp/sgvsym.F', 'fctp': 'subs/atomsr.F', 'xyrhsr': 'subs/atomsr.F', 'optimise': 'subs/dstrbp.F', 'm_toksw': 'subs/m_toksw.F', 'gtv_r8': 'subs/m_gtv.F', 'aiopar': 'subs/aiopar.F', 'nghbor': 'subs/nghbor.F', 'radgra': 'subs/radgra.F', 'gvaddf': 'subs/gvlist.F', 'atqval': 'fp/atqval.F', 'pptrns': 'subs/pptrns.F', 'suphs0': 'fp/suphas.F', 'mkrtab': 'subs/mkrtab.F', 'parmx0': 'subs/parmxp.F', 'mcasms': 'subs/mcasim.F', 'prm': 'subs/prmx.F', 'ropqln': 'subs/ropyln1.F', 'tpkli': 'subs/pkli.F', 'mcasme': 'subs/mcasim.F', 'bndconn_v2': 'fp/bndconn_v2.F', 'ropyln': 'subs/ropyln.F', 'suqlsw2': 'subs/suqlst.F', 'matgg2': 'fp/pwmat.F', 'ebcpl': 'subs/bzwts.F', 'gvgetf_test': 'subs/gvlist.F', 'rotmat': 'subs/mkplat.F', 'exchpw91': 'subs/easypbe.F subs/xcfunc.F', 'gvmtch': 'subs/gvmtch.F', 'nwit': 'subs/nwit.F', 'rdsigm2': 'subs/rdsigm2.F', 'mxxyz': 'subs/bzmesh.F', 'iors': 'subs/iors.F', 'scglp1': 'subs/scglp1.F', 'distes': 'subs/findes.F', 'pvstr0': 'subs/rstr0.F', 'hansmd': 'subs/hansmd.F', 'readctrlpq': 'subs/m_rdctrl.F', 'parms0': 'subs/parmxp.F', 'fixpos': 'subs/fixpos.F', 'multiple': 'subs/dstrbp.F', 'dpdftr': 'subs/dpdftr.F', 'mcasm2': 'subs/mcasim.F', 'prsed1': 'fp/rsedit.F', 'prsed2': 'fp/rsedit.F', 'prsed3': 'fp/rsedit.F', 'prsed4': 'fp/rsedit.F', 'prsed5': 'fp/rsedit.F', 'sigflg': 'subs/rdsigm.F', 'noshorbz': 'subs/switch.F', 'gvlist': 'subs/gvlist.F', 'iosits': 'subs/iosits.F', 'utb_size': 'subs/m_struc_def.F', 'popta4': 'subs/freeat.F subs/freeat.bk.F', 'find_region': 'subs/m_toksw.F', 'renam': 'subs/findes.F', 'symvvl': 'fp/mshvmt.F', 'mkpot': 'fp/mkpot.F', 'potpus': 'fp/potpus.F', 'getinput_r8': 'subs/m_gtv.F', 'grpfnd': 'subs/grpfnd.F', 'danrm2': 'subs/roplat.F', 'makidx': 'subs/makidx.F', 'toksw_init': 'subs/m_rdctrl.F', 'hklft': 'fp/hklft.F', 'stoner': 'subs/stoner.F', 'mkqp': 'subs/mkqp.F', 'symia1': 'subs/symiax.F', 'symprj': 'subs/symprj.F', 'symia0': 'subs/symiax.F', 'uctrl_size': 'subs/m_struc_def.F', 'hsmblq': 'fp/hsmbl.F', 'hhibl': 'fp/hhibl.F', 'makdos': 'subs/makdos.F', 'mdeses': 'subs/findes.F', 'locpt2': 'fp/locpot.F', 'sumsro': 'subs/sumsro.F', 'hsmbld': 'fp/hsmbl.F', 'radsum': 'subs/radmsh.F', 'mkorbm': 'fp/mkorbm.F', 'gaugm': 'fp/gaugm.F', 'umix_show': 'subs/m_struc_def.F', 'mkplat': 'subs/mkplat.F', 'hhugbl': 'fp/hhugbl.F', 'sphbes': 'subs/ropbes.F', 'cosvec': 'subs/mkplat.F', 'suldau': 'subs/suldau.F', 'ldau': 'subs/ldau.F', 'pqmix': 'subs/pqmix.F', 'madmat': 'subs/madmat.F', 'intnb': 'subs/stoner.F', 'hansmr': 'subs/hansmr.F', 'pvsym2': 'subs/mksym.F', 'maknos': 'subs/maknos.F', 'fixef0': 'subs/fixef0.F', 'prothl': 'subs/roth.F', 'gtv_entrance': 'subs/m_gtv.F', 'loctsh': 'fp/loctsh.F', 'pvrotd': 'subs/roth.F', 'ioden2': 'fp/ioden.F', 'suidx': 'subs/suidx.F', 'm_rdctrl': 'subs/m_rdctrl.F', 'dfaugm': 'fp/dfaugm.F', 'pkl2r': 'subs/pkli.F', 'pvrott': 'subs/roth.F', 'spackv_array_copy_i8_i': 'subs/spackv_array_copy.F', 'ubz_size': 'subs/m_struc_def.F', 'protht': 'subs/roth.F', 'pvrots': 'subs/roth.F', 'dfqkkl': 'fp/dfqkkl.F', 's3pkl0': 'subs/pkli.F', 'p2ovlc': 'fp/ovlocr.F', 'ioeula': 'subs/ioeula.F', 'chksgr': 'subs/rdsigm.F', 'dpdbyl': 'subs/dpdbyl.F', 'm_rdctrl2_func': 'subs/rdctrl2.F', 'd3nrm2': 'subs/findes.F', 'efldos': 'fp/efldos.F', 'hsibl2': 'fp/hsibl.F', 'hsibl3': 'fp/hsibl.F', 'hsibl4': 'fp/hsibl.F', 'hsibl5': 'fp/hsibl.F', 'hsibl6': 'fp/hsibl.F', 'fsmbpw': 'fp/fsmbpw.F', 'getinput_none': 'subs/m_gtv.F', 'makrot': 'subs/makrot.F', 'rsiblp': 'fp/rsibl.F', 'elocp': 'fp/elocp.F', 'augqp3': 'fp/augmbl.F', 'prjpos': 'subs/prjpos.F', 'wrhomt': 'fp/wrhomt.F', 'drr2': 'subs/drr2.F', 'ggugbl': 'fp/ggugbl.F', 'mcmet': 'subs/mcasim.F', 'mcasim': 'subs/mcasim.F', 'iopos': 'subs/iopos.F', 'ulat_init': 'subs/m_struc_def.F', 'rtoint': 'subs/rotwv.F', 'rhocor': 'subs/atomsr.F', 'mullmf': 'fp/mullmf.F', 'smcorm': 'fp/smcorm.F', 'rdctrl2': 'subs/rdctrl2.F', 'rsibl5': 'fp/rsibl.F', 'momusl': 'fp/momusl.F', 'vxcnlm': 'fp/vxcnlm.F', 'vxcnls': 'fp/vxcnls.F', 'clist': 'subs/clist.F', 'ubz_show': 'subs/m_struc_def.F', 'fctail': 'subs/freeat.F subs/freeat.bk.F', 'iobzwt': 'subs/subzi.F', 'subzi': 'subs/subzi.F', 'hft2rs': 'subs/hft2rs.F', 'sint': 'subs/hnsmft.F', 'rsibl2': 'fp/rsibl.F', 'usite_show': 'subs/m_struc_def.F', 'rsibl1': 'fp/rsibl.F', 'rsibl6': 'fp/rsibl.F', 'rsibl7': 'fp/rsibl.F', 'rsibl4': 'fp/rsibl.F', 'pvaglc': 'fp/gaugm.F', 'prtev': 'fp/prtev.F', 'phkl2r': 'subs/pkli.F', 'gklq': 'fp/gklq.F', 'fovlp': 'subs/fovlp.F', 'pwmat2': 'fp/pwmat.F', 'pvsms3': 'subs/pvsms2.F', 'dstrbp': 'subs/dstrbp.F', 'mxmymz': 'subs/mxmymz.F', 'fctor1': 'subs/veecomp.F', 'bzmesh': 'subs/bzmesh.F', 'vxtrap': 'fp/vxtrap.F', 'idxpr': 'subs/makidx.F', 'setofl': 'fp/setofl.F', 'corprm': 'fp/corprm.F', 'splcls': 'subs/splcls.F', 'symrat': 'fp/symrho.F', 'sclp': 'subs/xxxbnd.F', 'rangedq': 'subs/rotwv.F', 'pqmxup': 'subs/pqmix.F', 't3j_all': 'subs/veecomp.F', 'hft2r1': 'subs/hft2rs.F', 'hft2r2': 'subs/hft2rs.F', 'hft2r3': 'subs/hft2rs.F', 'makrvl': 'subs/rnatm.F', 'hxpgbl': 'fp/hxpgbl.F', 'symiax': 'subs/symiax.F', 'aiogen': 'subs/aiogen.F', 'praldm': 'subs/prdmts.F', 'asymop': 'subs/asymop.F', 'p2pkl': 'subs/pkli.F', 'grpcop': 'subs/grpgen.F', 'offshp': 'subs/orbl.F', 'mshn3p': 'fp/mshn3p.F', 'pvsms1': 'fp/smshft.F', 'mdesat': 'subs/findes.F', 'pvsms2': 'subs/pvsms2.F', 'spackv_array_copy_r8_r8': 'subs/spackv_array_copy.F', 'iget': 'subs/bzwts.F', 'rdm3': 'subs/prmx.F', 'latlim': 'subs/latlim.F', 'vxcgga': 'subs/vxcgga.F subs/xcfunc.F', 'umix_init': 'subs/m_struc_def.F', 'getfmt': 'subs/findes.F', 'vlm2us': 'fp/vlm2us.F', 'umove_size': 'subs/m_struc_def.F', 'uarray_show': 'subs/m_struc_def.F', 'gintsr': 'subs/atomsr.F', 'ropcsm': 'subs/ropcsm.F', 'hsibl': 'fp/hsibl.F', 'spgeql': 'subs/spcgrp.F', 'xxxdif': 'subs/xxxdif.F', 'm_sstrnsname': 'subs/m_sstrnsname.F', 'pvclst': 'subs/clsset.F', 'mtchre': 'subs/mtchae.F', 'mul22': 'subs/rdeq.F', 'iomomx': 'subs/iomomx.F', 'mshn31': 'fp/mshn3p.F', 'fctp0': 'subs/atomsr.F', 'mshn32': 'fp/mshn3p.F', 'iomomq': 'subs/iomomq.F', 'gintsl': 'subs/atomsr.F', 'iomoms': 'subs/iomoms.F', 'gfigbl': 'fp/gfigbl.F', 'ulat_show': 'subs/m_struc_def.F', 'hambls': 'fp/hambls.F', 'ustr_size': 'subs/m_struc_def.F', 'smshft': 'fp/smshft.F', 'uordn_init': 'subs/m_struc_def.F', 'ioden': 'fp/ioden.F', 'subasi': 'subs/subasi.F', 'gvctof': 'subs/gvctof.F', 'gtv_setrcd': 'subs/m_gtv.F', 'gtpcor': 'subs/gtpcor.F', 'getkin': 'subs/stoner.F', 'symqmp': 'subs/symq.F', 's3pkl': 'subs/pkli.F', 'psho1': 'subs/shoshl.F', 'ncutcorrect': 'fp/ncutcorrect.F', 'psymq0': 'subs/symq.F', 'uctrl_init': 'subs/m_struc_def.F', 'lctoff': 'subs/lattc.F', 'pvpus1': 'fp/potpus.F', 'ustr_init': 'subs/m_struc_def.F', 'istbpm': 'subs/symtbl.F', 'ppair2': 'subs/pairc.F', 'ppair3': 'subs/pairc.F', 'upot_show': 'subs/m_struc_def.F', 'ppair4': 'subs/pairc.F', 'ppair5': 'subs/pairc.F', 'uctrl_show': 'subs/m_struc_def.F', 'makdla': 'subs/makdla.F', 'contet': 'subs/contet.F', 'utb_show': 'subs/m_struc_def.F', 'xxxse': 'subs/shear.F', 'pqsclb': 'subs/pqmix.F', 'gtv_lg': 'subs/m_gtv.F', 'clsctr': 'subs/clsset.F', 'gtv_char': 'subs/m_gtv.F', 'grfmsh': 'fp/grfmsh.F', 'rsq2': 'subs/rseq.F', 'rsq1': 'subs/rseq.F', 'tksw': 'subs/m_toksw.F', 'iobsmv': 'subs/iobsmv.F', 'ppratf': 'subs/freeat.F subs/freeat.bk.F', 'qparam': 'subs/rotwv.F', 'rothph': 'subs/rothrm.F', 'pvsug1': 'fp/sugw.F', 'getq': 'subs/getq.F', 'stonerrsa': 'fp/stonerrsa.F', 'rsmesh': 'subs/findes.F', 'getikt': 'subs/m_hamindex.F', 'vesgcm': 'fp/vesgcm.F', 'nsitsh': 'subs/siteid.F', 'getcor': 'subs/getcor.F', 'iosite': 'subs/iosite.F', 'qmpkl': 'subs/pkli.F', 'wlattc': 'fp/sugw.F', 'vesft': 'fp/vesft.F', 'bravsy': 'subs/mkplat.F', 'ellipsoidxmax': 'subs/shorbz.F', 'defspc': 'subs/defspc.F', 'evxcv_new': 'subs/evxcv.F subs/xcfunc.F', 'sopert': 'fp/sopert.F', 'symdmu': 'subs/symdmu.F', 'hanr': 'subs/hanr.F', 'clebsh': 'subs/rdeq.F', 'uoptic_init': 'subs/m_struc_def.F', 'mshint': 'fp/mshint.F', 'umix_size': 'subs/m_struc_def.F', 'spcgrp': 'subs/spcgrp.F', 'prrhat': 'fp/prrhat.F', 'gklbld': 'fp/gklbl.F', 'rsort': 'subs/rsort.F', 'gcor2': 'subs/easypbe.F subs/xcfunc.F', 'prdmts': 'subs/prdmts.F', 'gtcsym': 'subs/gengrp.F', 'rdeq': 'subs/rdeq.F', 'iprmsb': 'subs/orbl.F', 'gklblq': 'fp/gklbl.F', 'iobsm0': 'subs/iobsmv.F', 'addsds': 'fp/addrbl.F', 'pratfs': 'subs/freeat.F subs/freeat.bk.F', 'ordbas': 'subs/findes.F', 'wf2lo': 'subs/addrwf.F', 'tetirr': 'subs/tetirr.F', 'xxxes': 'subs/shear.F', 'bzints': 'subs/bzints.F', 'atmoms': 'subs/defpq.F', 'mtchr2': 'subs/mtchae.F', 'dfrce': 'fp/dfrce.F', 'grpprd': 'subs/grpgen.F', 'mksym': 'subs/mksym.F', 'psymop': 'subs/psymop.F', 'smvxc4': 'fp/smvxcm.F', 'maknrs': 'subs/maknrs.F', 'getirr': 'subs/findes.F', 'uarray_init': 'subs/m_struc_def.F', 'smvxc3': 'fp/smvxcm.F', 'smvxc2': 'fp/smvxcm.F', 'gklbl': 'fp/gklbl.F', 'exchpbe': 'subs/easypbe.F subs/xcfunc.F', 'fklbl': 'fp/fklbl.F', 'defwsr': 'subs/defwsr.F', 'permhk': 'fp/hambls.F', 'phmbl3': 'fp/hambls.F', 'orbl': 'subs/orbl.F', 'ioaindx': 'fp/sugw.F', 'spgprd': 'subs/spcgrp.F', 'efrng2': 'subs/efrng2.F', 'umove_init': 'subs/m_struc_def.F', 'pkl2ro': 'fp/pkl2ro.F', 'findes': 'subs/findes.F', 'lattdf': 'subs/lattdf.F', 'ioposs': 'subs/iopos.F', 'tri_rule': 'subs/veecomp.F', 'stonerpb': 'fp/stonerpb.F', 'addbkgl': 'fp/addbkg.F', 'hxpos': 'fp/hxpos.F', 'gpfndx': 'subs/spcgrp.F', 'uarray_size': 'subs/m_struc_def.F', 'iosave': 'subs/iosave.F', 'dlmtor': 'subs/lattc.F', 'pvdf1': 'fp/dfrce.F', 'makr': 'subs/ropyln.F', 'pvdf3': 'fp/dfrce.F', 'pvdf2': 'fp/dfrce.F', 'gtv_i4v': 'subs/m_gtv.F', 'pvdf4': 'fp/dfrce.F', 'ovlpfa': 'fp/ovlpfa.F', 'shftpp': 'subs/shftpp.F', 'zprm': 'subs/prmx.F', 'fmain': 'subs/ropyln.F subs/shorps.F subs/shorps.F', 'iofa': 'subs/iofa.F', 'rothrm': 'subs/rothrm.F', 'roth': 'subs/roth.F', 'suylg': 'fp/suylg.F', 'phmbls': 'fp/hambls.F', 'ghigbl': 'fp/ghigbl.F', 'smvxcm': 'fp/smvxcm.F', 'yprm0': 'subs/prmx.F', 'ii8copy': 'subs/spackv_array_copy.F', 'qdistn': 'subs/qdist.F', 'parmxp': 'subs/parmxp.F', 'fill3in': 'subs/m_rdctrl.F', 'setcc': 'subs/rseq.F', 'rotpnt': 'subs/rotpnt.F', 'mkdmtu': 'fp/mkdmtu.F', 'asados': 'subs/asados.F', 'pvcdm2': 'fp/vcdmel.F', 'pvcdm1': 'fp/vcdmel.F', 'latvec': 'subs/latvec.F', 'pvhmb1': 'fp/hambl.F', 'hhigbl': 'fp/hhigbl.F', 'vxnloc': 'subs/vxnloc.F subs/xcfunc.F', 'veecomp': 'subs/veecomp.F', 'suemph': 'subs/suemph.F', 'fdpp': 'subs/rdeq.F', 'vxc0gc': 'fp/vxc0gc.F', 'getbzp': 'subs/getbzp.F', 'p1ovlc': 'fp/ovlocr.F', 'rlocbl': 'fp/rlocbl.F', 'clean0': 'subs/invbl.F', 'pvrgkl': 'fp/rhogkl.F', 'bessjy': 'subs/ropbes.F', 'latpar': 'subs/mkplat.F', 'dostet': 'subs/dostet.F', 'grpop': 'subs/grpop.F', 'nswadd': 'subs/m_toksw.F', 'hklbl': 'fp/hklbl.F', 'augq12': 'fp/augmbl.F', 'augmat': 'fp/augmat.F', 'rotsig': 'subs/rotwv.F', 'cmplat': 'subs/cmplat.F', 'ulat_size': 'subs/m_struc_def.F', 'mshvmt': 'fp/mshvmt.F', 'pvagm3': 'fp/gaugm.F', 'pvagm2': 'fp/gaugm.F', 'pvagm1': 'fp/gaugm.F', 'matmul_pwhovl': 'subs/switch.F', 'gtpfac': 'subs/mshsiz.F', 'readctrl': 'subs/m_rdctrl.F', 'rotycs': 'subs/rotycs.F', 'iostr4': 'subs/iostr.F', 'iostr1': 'subs/iostr.F', 'sclws2': 'subs/sclwsr.F', 'iostr2': 'subs/iostr.F', 'aiopot': 'subs/aiopot.F', 'pair3c': 'subs/pairc.F', 'gvputf': 'subs/gvlist.F', 'grpeql': 'subs/grpgen.F', 'pvglst': 'subs/gvlist.F', 'phhigb': 'fp/hhigbl.F', 'rlocb1': 'fp/rlocbl.F', 'getinput_i4': 'subs/m_gtv.F', 'siteid': 'subs/siteid.F', 'asars': 'subs/asars.F', 'hsmqe0': 'subs/hsmq.F', 'bloch': 'subs/bloch.F', 'chgmsh': 'subs/chgmsh.F', 'addbkgsm': 'fp/addbkg.F', 'augq2z': 'fp/augmbl.F', 'sudmtu': 'subs/sudmtu.F', 'spinav': 'lmv7util.F subs/clsprm.F', 'slist': 'subs/slist.F', 'fsmbl': 'fp/fsmbl.F', 'shoang': 'subs/shoshl.F', 'mptauof': 'subs/suham.F', 'aiomom': 'subs/aiomom.F', 'nrmliz': 'subs/mkplat.F', 'xxxbnd': 'subs/xxxbnd.F', 'radgrx': 'subs/vxcgr2.F', 'mixrho': 'fp/mixrho.F', 'symrho': 'fp/symrho.F', 'pvrhom': 'fp/rhomom.F', 'hamfb3': 'subs/hamfb3.F', 'uham_show': 'subs/m_struc_def.F', 'xxsho': 'subs/shoshl.F', 'i8icopy': 'subs/spackv_array_copy.F', 'pvhsmq': 'subs/hsmq.F', 'gklft': 'fp/gklft.F', 'mkehkf': 'fp/mkehkf.F', 's2sph': 'subs/s2sph.F', 'radwgt': 'subs/radmsh.F', 'mkppovl2': 'fp/sugw.F', 'getinput_entrance': 'subs/m_gtv.F', 'lmaux': 'fp/lmaux.F', 'm_psigd': 'subs/m_psigd.F', 'suqlsr': 'subs/suqlst.F', 'suclst': 'subs/suclst.F', 'seneinterp': 'subs/rdsigm2.F', 'smves': 'fp/smves.F', 'blsig': 'fp/hambls.F', 'addrbl': 'fp/addrbl.F', 'vcdmel': 'fp/vcdmel.F', 'roplat': 'subs/roplat.F', 'fermi': 'subs/fermi.F', 'wsymops': 'fp/sugw.F', 'rotevs': 'subs/rotevs.F', 'bessl': 'subs/besslr.F', 'getinput_r8v': 'subs/m_gtv.F', 'rhoqm': 'fp/symrho.F', 'augmbl': 'fp/augmbl.F', 'aiocor': 'subs/aiocor.F', 'aiova': 'subs/aiova.F', 'm_struc_def': 'subs/m_struc_def.F', 'getde': 'subs/stoner.F', 'single': 'subs/dstrbp.F', 'iomomn': 'subs/iomoms.F', 'elfigr': 'fp/locpot.F', 'pqsclc': 'subs/pqmix.F', 'evxcp': 'subs/evxcp.F subs/xcfunc.F', 'evxcv': 'subs/evxcv.F subs/xcfunc.F', 'pqsclf': 'subs/pqmix.F', 'phhibl': 'fp/hhibl.F', 'fillat': 'subs/findes.F', 'regioncheck': 'subs/rotwv.F', 'packs': 'subs/struc_strn.F', 'f102': 'subs/f102.F', 'symfor': 'subs/symfor.F', 'symlat': 'subs/symlat.F', 'ftlxp': 'fp/ftlxp.F', 'rdovfa': 'fp/rdovfa.F', 'locpot': 'fp/locpot.F', 'oalpha': 'subs/pptrns.F', 'ipwovl': 'fp/pwmat.F', 'sylmnc': 'subs/sylmnc.F', 'reducv': 'subs/findes.F', 'umove_show': 'subs/m_struc_def.F', 'ccutup': 'subs/ccutup.F', 'pbevxc': 'subs/vxnloc.F subs/xcfunc.F', 'gen_hamindex': 'subs/suham.F', 'mshsiz': 'subs/mshsiz.F', 'csymop': 'subs/asymop.F', 'psigd': 'subs/m_psigd.F', 'ovlocr': 'fp/ovlocr.F', 'slinz': 'subs/slinz.F', 'prtrkl': 'fp/rhogkl.F', 'bzwts': 'subs/bzwts.F', 'ugcomp': 'fp/ugcomp.F', 'newsigmasw': 'subs/switch.F', 'gtbsl1': 'subs/gtbsl1.F', 'radext': 'subs/radmsh.F', 'gtv_none': 'subs/m_gtv.F', 'qdist': 'subs/qdist.F', 'symcry': 'subs/symcry.F', 'usite_init': 'subs/m_struc_def.F'}
------------ Used sub/fun ----------------
set(['hansr4', 'hansr5', 'rotdlmm', 'interparam', 'ppi2z', 'hansr1', 'hansr2', 'scg', 'setcg', 'ddet33', 'setcc', 'tailsm', 'gvlst2', 'vxcnsp', 'clean0', 'vxcns3', 'getqvc', 'iclbsj', 'rseq', 'poiss0', 'gvsym', 'ioqpp', 'rdistn', 'imxmnx', 'eprod', 'gvlstn', 'pqmixb', 'hsmblq', 'rdsigm2', 'sclwsr', 'gvlsts', 'cshear', 'pblch1', 'aiomp', 'ovmin', 'popta2', 'fctail', 'symtbl', 'rnatm', 'tocast', 'gtbvec', 'hhibl', 'gwcphi', 'prelx1', 'intnos', 'mark1', 'sclws2', 'xmpbnd', 'ioorbp', 'sgroup', 'prlcb1', 'ropbs1', 'prlcb3', 'prlcb2', 'suqlst', 'xxxadd', 'vldau', 'nghbor', 'freeat', 'suqlsm', 'ftlxp2', 'stplat', 'suqlse', 'rwftai', 'upot_size', 'makrm0', 'pgvmat', 'rhgcm3', 'rhgcm2', 'grdepl', 'm_struc_func', 'iosigh', 'symes', 'pqmxio', 'product2', 'igann', 'atomsc', 'volsph', 'hxpbl', 'mkcond', 'ifindiv2', 'bzwtsm', 'sint', 'bzwtsf', 'shortn3_initialize', 'xxcnls', 'chebev', 'cpplat', 'getgv2', 'cvplat', 'iclbas', 'corpbe', 'writebasis', 'sugw', 'gennlat', 'chkes', 'hansr', 'gtv_setst', 'rhgcmp', 'asars1', 'addbas', 'prlrho', 'uspec_size', 'upacks', 'iosiga', 'pvgtkn', 'fpchk', 'ropynx', 'ropbes', 'rlxstp', 'getuk', 'hklos', 'symsmr', 'beschb', 'pwmat', 'ffnam', 'zprm', 'ncutcorrect', 'pvmix3', 'paugnl', 'shortn3', 'ghibl', 'mshdot', 'flocbl', 'pvmix6', 'swrho', 'findctrlstart', 'bzmio', 'jxpos', 'prrmsh', 'rotspu', 'ovlchk', 'atwf', 'shoist', 'lsets_bitop_i8', 'clabel', 'aiocls', 'dvdos', 'relax', 'paug2', 'paug3', 'paug1', 'paug4', 'ylmrtg', 'sigswitch', 'rothph', 'prodx2d', 'totfrc', 'nwitsv', 'fullmesh', 'gtbsl2', 'defpq', 'mkewgt', 'smhsbl', 'supot', 'pysmr1', 'setuk', 'ppair1', 'flocb2', 'mtchae', 'lx2vec', 'grpgen', 'addes2', 'vxcns2', 'grdep2', 'seneinterp', 'pvang1', 'pvang2', 'paioc2', 'rdist', 'addrwf', 'gtv_setio', 'lmfp', 'regioncheck', 'shorbz', 'pairc', 'pchms2', 'aginv', 'prpos', 'surho', 'pz2idx', 'mkekin', 'config', 'aiopot', 'praugm', 'dosio', 'yprm', 'gvgvcomp', 'trysop', 'augq3z', 'lattc', 'deflmx', 'zclabl', 'rotwv', 'splrho', 'fradhd', 'hgugbl', 'iax2fd', 'siged', 'rsedit', 'bloch', 'mxxyz', 'pdstlb', 'pmtsig', 'pchmsh', 'dpdftr', 'rsibl', 'dfratm', 'popta5', 'nrmliz', 'popta3', 'popta1', 'delstd', 'getqp', 'mkrout', 'hamfb3k', 'symstr', 'ghios', 'vxcgr2', 'noshorbz', 'delstp', 'bzmsh0', 'rsmsym', 'bstrux', 'rsq1', 'lmhelp', 'tbhsi', 'soprm', 'gtv_setrcd', 'iobsmv', 'freats', 'gcor', 'vxcgga', 'makrwf', 'pnunew', 'chkxpn', 'poinsp', 'usite_size', 'adbkql', 'mksym', 'shear', 'rmesh', 'mkrou1', 'mkrou2', 'mkrou3', 'mkrou4', 'mkrou5', 'mkrou6', 'xlgen', 'zprm3', 'gvgetf', 'clsprp', 'augqs3', 'clsprm', 'fint', 'shorps', 'hklgbl', 'tkadd', 'sortea', 'lcrho', 'bigges', 'rhomom', 'hsmq', 'spgcop', 'cppos', 'zevl', 'pvioeu', 'gtpmin', 'hansz1', 'hansz2', 'suphas', 'iofa', 'mkidx2', 'pvrhm2', 'projql', 'm_psigd', 'gensym', 'ovcall', 'chkdmu', 'lgstar', 'prodln', 'paugq1', 'paugq2', 'reducv', 'optfab', 'hnsmft', 'hsibl1', 'wripp', 'spec2c', 'makus2', 'sugcut', 'pqmixa', 'pqmixc', 'lattic', 'pvaioc', 'vxc0sp', 'fswgts', 'matm', 'fovlp', 'ortrwf', 'ubz_init', 'spacks_copy', 'pvmix9', 'mcasho', 'pusq2', 'hambl', 'polinta', 'pusq1', 'paugqp', 'pvmix7', 'pvmix4', 'pvmix5', 'ellipsoidxmax', 'pairs', 'pviomx', 'vxcns4', 'vxcns5', 'makusq', 'makusp', 'lindsc', 'vxnlcc', 'corpw91', 'hsmbl', 'radpkl', 'fradpk', 'rhogkl', 'bessl2', 'uham_size', 'suham', 'phidx', 'mchan', 'm_events', 'psymrf', 'm_hamindex', 'mkcfus', 'easypbe', 'shorbzm', 'psymrq', 'uoptic_size', 'prmx', 'fixpos', 'mkpdos', 'addzbk', 'dlmn', 'pxsmr1', 'strx00', 'sopert2', 'radgkl', 'uspec_init', 'besslr', 'mshint', 'hansmd', 'clear_swtok', 'drr2', 'symia1', 'chimedit', 'psymr1', 'psymr0', 'shortn', 'hansmr', 'loctsh', 'xyrhsr', 'initialize', 'optimise', 'm_toksw', 'aiopar', 'ifindiv', 'gklft', 'gvaddf', 'atqval', 'suphs0', 'mkrtab', 'parmx0', 'mcasms', 'ropqln', 'mcasme', 'bndconn_v2', 'ropyln', 'conv2int', 'matgg2', 'ebcpl', 'symcry', 'rotmat', 'nosbzm', 'nwit', 'newrho', 'iors', 'distes', 'pvstr0', 'iprmsb', 'uspecb', 'parms0', 'parmxp', 'vxnloc', 'avwsr', 'mcasm2', 'prsed1', 'prsed2', 'prsed3', 'prsed4', 'prsed5', 'sigflg', 'gvlist', 'ubz_size', 'utb_size', 'popta4', 'find_region', 'renam', 'symvvl', 'mkpot', 'potpus', 'grpfnd', 'danrm2', 'makidx', 'toksw_init', 'hklft', 'getef', 'symprj', 'symia0', 'uctrl_size', 'sylm', 'getcor', 'makdos', 'mdeses', 'locpt2', 'sumsro', 'hsmbld', 'radsum', 'mkorbm', 'gaugm', 'shoshl', 'hhugbl', 'exchpw91', 'sphbes', 'cosvec', 'suldau', 'ldau', 'madmat', 'intnb', 'sgvsym', 'pvsym2', 'maknos', 'fixef0', 'prothl', 'fctp', 'pvrotd', 'ioden2', 'suidx', 'm_rdctrl', 'dfaugm', 'pkl2r', 'pvrott', 'spackv_array_copy_i8_i', 'prothr', 'protht', 'pvrots', 'dfqkkl', 'p2ovlc', 'chksgr', 'dpdbyl', 'm_rdctrl2_func', 'd3nrm2', 'efldos', 'hsibl2', 'hsibl3', 'hsibl4', 'hsibl5', 'hsibl6', 'fsmbpw', 'makrot', 'f102', 'rsiblp', 'elocp', 'gintsr', 'augqp3', 'prjpos', 'wrhomt', 'mcasw', 'ggugbl', 'mcmet', 'iopos', 'rtoint', 'mullmf', 'smcorm', 'rdctrl2', 'mkqp', 'momusl', 'vxcnls', 'clist', 'spackv_array_copy_r8_r8', 'iobzwt', 'fermi', 'hft2rs', 'dfphi', 'rsibl2', 'iostr', 'rsibl1', 'rsibl6', 'rhocor', 'rsibl4', 'pvaglc', 'prtev', 'phkl2r', 'gklq', 'm_gtv', 'dstrbp', 'mxmymz', 'fctor1', 'bzmesh', 'vxtrap', 'idxpr', 'setofl', 'corprm', 'splcls', 'symrat', 'sclp', 'bessl', 'pqmxup', 't3j_all', 'hft2r1', 'hft2r2', 'hft2r3', 'makrvl', 'hxpgbl', 'symiax', 'aiogen', 'praldm', 'asymop', 'aiosop', 'grpcop', 'offshp', 'mshn3p', 'pvsms1', 'mdesat', 'pvsms2', 'iget', 'latlim', 'baslst', 'nnrl', 'umix_init', 'vlm2us', 'iomomn', 'ropcsm', 'hsibl', 'ioaindx', 'm_sstrnsname', 'ftfalo', 'mul22', 'iomomx', 'mshn31', 'fctp0', 'mshn32', 'iomomq', 'gintsl', 'iomoms', 'gfigbl', 'ustr_size', 'smshft', 'ioden', 'subasi', 'gvctof', 'gtpcor', 'symqmp', 'psho1', 'bndfp', 'psymq0', 'lctoff', 'pvpus1', 'istbpm', 'ppair2', 'ppair3', 'splwts', 'ppair4', 'ppair5', 'makdla', 'contet', 'radmsh', 'xxxse', 'evxcp', 'm_struc_def', 'clsctr', 'grfmsh', 'rsq2', 'dosspl', 'tksw', 'suham2', 'ppratf', 'qparam', 'pvsug1', 'debugmode', 'stonerrsa', 'makr', 'getikt', 'vesgcm', 'iosite', 'wlattc', 'vesft', 'bravsy', 'sumlst', 'defspc', 'sopert', 'symdmu', 'hanr', 'phvsfp', 'umix_size', 'prrhat', 'gklbld', 'rsort', 'gcor2', 'prdmts', 'gtcsym', 'suqlsw2', 'gklblq', 'iobsm0', 'addsds', 'pratfs', 'ordbas', 'wf2lo', 'tetirr', 'xxxes', 'bzints', 'rangedq', 'atmoms', 'mtchr2', 'dfrce', 'gvmtch', 'pvsms3', 'psymop', 'smvxc4', 'maknrs', 'getirr', 'smvxc3', 'smvxc2', 'gklbl', 'exchpbe', 'fklbl', 'defwsr', 'iosits', 'umove_size', 'orbl', 'xxxdif', 'spgprd', 'efrng2', 'pkl2ro', 'findes', 'lattdf', 'mtchre', 'tri_rule', 'stonerpb', 'addbkgl', 'hxpos', 'uarray_size', 'iosave', 'dlmtor', 'pvdf1', 'pvdf3', 'pvdf2', 'pvdf4', 'ovlpfa', 'groupg', 'shftpp', 'readctrlpq', 'rothrm', 'roth', 'suylg', 'phmbls', 'augq12', 'smvxcm', 'ii8copy', 'qdistn', 'fill3in', 'uordn_size', 'rotpnt', 'mkdmtu', 'asados', 'pvcdm2', 'pvcdm1', 'latvec', 'hhigbl', 'multiple', 'veecomp', 'suemph', 'vxc0gc', 'getbzp', 'p1ovlc', 'rlocbl', 'iorbtm', 'pvrgkl', 'ccutup', 'latpar', 'dostet', 'grpop', 'bessel', 'hklbl', 'ghigbl', 'augmat', 'rotsig', 'cmplat', 'ulat_size', 'mshvmt', 'aiova', 'pvagm3', 'pvagm2', 'pvagm1', 'matmul_pwhovl', 'gtpfac', 'readctrl', 'rotycs', 'iostr4', 'iostr1', 'iostr2', 'rsmesh', 'grpeql', 'bzwts', 'gvputf', 'parsop', 'pvglst', 'phhigb', 'rlocb1', 'siteid', 'asars', 'hsmqe0', 'vecpkl', 'chgmsh', 'addbkgsm', 'augq2z', 'sudmtu', 'slist', 'fsmbl', 'shoang', 'mptauof', 'aiomom', 'aiorme', 'radgrx', 'mixrho', 'symrho', 'pvrhom', 'hamfb3', 'xxsho', 'i8icopy', 'pvhsmq', 'radgra', 'mkehkf', 's2sph', 'radwgt', 'mkppovl2', 'scglp1', 'lmaux', 'latrel', 'suclst', 'smves', 'blsig', 'addrbl', 'vcdmel', 'roplat', 'subzi', 'wsymops', 'rotevs', 'rsibl5', 'mcasan', 'rhoqm', 'augmbl', 'aiocor', 'getfmt', 'spgeql', 'getde', 'single', 'nswadd', 'elfigr', 'pqsclc', 'pqsclb', 'evxcv', 'pqsclf', 'phhibl', 'fillat', 'corlsd', 'packs', 'grpprd', 'symfor', 'symlat', 'ftlxp', 'rdovfa', 'locpot', 'oalpha', 'ipwovl', 'sylmnc', 'f100', 'bessjy', 'gen_hamindex', 'mshsiz', 'csymop', 'psigd', 'ovlocr', 'slinz', 'prtrkl', 'hambls', 'ugcomp', 'newsigmasw', 'gtbsl1', 'radext', 'qdist', 'usite_init'])
------------ Used files ------------------
['subs/hansr4.F']
['subs/hansr5.F']
['subs/suham.F']
['subs/rotwv.F']
['fp/gaugm.F']
['subs/hansr.F']
['subs/hansr.F']
['subs/scg.F']
['subs/setcg.F']
['subs/mkplat.F']
['subs/rseq.F']
['subs/tailsm.F']
['subs/gvlst2.F']
['fp/vxcnsp.F']
['subs/invbl.F']
['fp/vxcnsp.F']
['subs/getq.F']
['subs/iclbas.F']
['subs/rseq.F']
['subs/atomsr.F']
['fp/gvsym.F']
['lmv7util.F', 'subs/clsprm.F']
['subs/qdist.F']
['subs/orbl.F']
['subs/pairc.F']
['subs/gvlst2.F']
['subs/pqmix.F']
['fp/hsmbl.F']
['subs/rdsigm2.F']
['subs/sclwsr.F']
['subs/gvlst2.F']
['subs/cshear.F']
['subs/bloch.F']
['subs/aiomp.F']
['subs/ovmin.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/symtbl.F']
['subs/rnatm.F']
['subs/findes.F']
['subs/gtbvec.F']
['fp/hhibl.F']
['fp/gwcphi.F']
['subs/relax.F']
['subs/intnos.F']
['subs/bzwts.F']
['subs/sclwsr.F']
['fp/bndfp.F']
['subs/ioorbp.F']
['subs/spcgrp.F']
['fp/bstrux.F']
['subs/ropbes.old.F']
['fp/rlocbl.F']
['fp/rlocbl.F']
['subs/suqlst.F']
['subs/shear.F']
['subs/vldau.F']
['subs/nghbor.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/suqlst.F']
['fp/ftlxp.F']
['subs/mkplat.F']
['subs/suqlst.F']
['fp/vxtrap.F']
['subs/m_struc_def.F']
['subs/makrm0.F']
['subs/gvmtch.F']
['fp/rhgcmp.F']
['fp/rhgcmp.F']
['fp/lmfp.F']
['subs/m_struc_def.F']
['subs/rdsigm.F']
['subs/findes.F']
['subs/pqmix.F']
['subs/rdeq.F']
['subs/suham.F']
['subs/atomsr.F']
['subs/volsph.F']
['fp/hxpbl.F']
['subs/mkcond.F']
['fp/hsibl.F']
['subs/bzwtsf.F']
['subs/hnsmft.F']
['subs/bzwtsf.F']
['subs/shorbz.F']
['fp/vxcnls.F']
['subs/ropbes.F']
['subs/roplat.F']
['subs/pairc.F']
['subs/mkplat.F']
['subs/iclbas.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/writebasis.F']
['fp/sugw.F']
['subs/pairc.F']
['subs/findes.F']
['subs/hansr.F']
['subs/m_gtv.F']
['fp/rhgcmp.F']
['subs/asars.F']
['subs/addbas.F']
['fp/prrhat.F']
['subs/m_struc_def.F']
['subs/struc_strn.F']
['subs/mcasim.F']
['fp/mkekin.F']
['fp/fpchk.F']
['subs/ropyln1.F']
['subs/ropbes.F', 'subs/ropbes.old.F', 'subs/ropbes_alternative.F']
['subs/rlxstp.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['fp/hklos.F']
['fp/symrho.F']
['subs/ropbes.F']
['fp/pwmat.F']
['subs/prmx.F']
['fp/ncutcorrect.F']
['fp/mixrho.F']
['fp/paug1.F']
['subs/shorbz.F']
['fp/ghibl.F']
['fp/mshdot.F']
['fp/flocbl.F']
['fp/mixrho.F']
['fp/splrho.F']
['lmv7.F', 'lmfav7.F', 'lmv7util.F']
['subs/bzmio.F']
['fp/jxpos.F']
['subs/prrmsh.F']
['subs/rotspu.F']
['subs/ovlchk.F']
['subs/atwf.F']
['subs/shoist.F']
['subs/spackv_array_copy.F']
['subs/clabel.F']
['lmv7util.F']
['subs/dvdos.F']
['subs/relax.F']
['fp/paug1.F']
['fp/paug1.F']
['fp/paug1.F']
['fp/paug1.F']
['subs/ylmrtg.F']
['subs/switch.F']
['subs/rothrm.F']
['subs/rotwv.F']
['fp/totfrc.F']
['subs/nwit.F']
['subs/switch.F']
['fp/gtbsl2.F']
['subs/defpq.F']
['fp/mkewgt.F']
['fp/smhsbl.F']
['fp/supot.F']
['subs/symq.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/pairc.F']
['fp/flocbl.F']
['subs/mtchae.F']
['subs/lx2vec.F']
['subs/grpgen.F']
['subs/findes.F']
['fp/vxcnsp.F']
['subs/relax.F']
['subs/rdsigm2.F']
['subs/shoshl.F']
['subs/shoshl.F']
['lmv7util.F']
['subs/qdist.F']
['subs/addrwf.F']
['subs/m_gtv.F']
['fp/lmfp.F']
['subs/rotwv.F']
['subs/shorbz.F']
['subs/pairc.F']
['subs/chgmsh.F']
['subs/mksym.F']
['subs/findes.F']
['fp/surho.F']
['subs/suidx.F']
['fp/mkekin.F']
['subs/config.F']
['subs/aiopot.F']
['fp/praugm.F']
['subs/dosio.F']
['subs/prmx.F']
['fp/rsibl.F']
['subs/trysop.F']
['fp/augmbl.F']
['subs/lattc.F']
['subs/findes.F']
['subs/findes.F']
['subs/rotwv.F']
['fp/splrho.F']
['fp/fradhd.F']
['fp/hgugbl.F']
['subs/iax2fd.F']
['subs/rdsigm.F']
['fp/rsedit.F']
['subs/bloch.F']
['subs/bzmesh.F']
['subs/dstrbp.F']
['subs/switch.F']
['subs/chgmsh.F']
['subs/dpdftr.F']
['fp/rsibl.F']
['fp/dfratm.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/mkplat.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/delstd.F']
['subs/getqp.F']
['fp/mkrout.F']
['subs/hamfb3.F']
['subs/symstr.F']
['fp/ghios.F']
['subs/vxcgr2.F']
['subs/switch.F']
['subs/delstp.F']
['subs/bzmesh.F']
['subs/rsmsym.F']
['fp/bstrux.F']
['subs/rseq.F']
['lmv7.F', 'lmfav7.F', 'lmv7util.F']
['fp/tbhsi.F']
['subs/soprm.F']
['subs/m_gtv.F']
['subs/iobsmv.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/vxcgga.F', 'subs/xcfunc.F']
['subs/makrwf.F']
['fp/pnunew.F']
['fp/fpchk.F']
['fp/poinsp.F']
['subs/m_struc_def.F']
['fp/addbkg.F']
['subs/mksym.F']
['subs/shear.F']
['subs/rmesh.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['subs/xlgen.F']
['subs/prmx.F']
['subs/gvlist.F']
['lmv7util.F', 'subs/clsprm.F']
['fp/augmbl.F']
['lmv7util.F', 'subs/clsprm.F']
['subs/hnsmft.F']
['subs/shorps.F']
['fp/hklgbl.F']
['subs/m_toksw.F']
['subs/pairc.F']
['fp/splrho.F']
['subs/findes.F']
['fp/rhomom.F']
['subs/hsmq.F']
['subs/spcgrp.F']
['fp/lmfp.F']
['fp/stonerrsa.F']
['subs/ioeula.F']
['subs/findes.F']
['subs/hansrz.F']
['subs/hansrz.F']
['fp/suphas.F']
['subs/iofa.F']
['subs/makidx.F']
['fp/rhomom.F']
['subs/projql.F']
['subs/m_psigd.F']
['subs/gensym.F']
['subs/ovmin.F']
['subs/chkdmu.F']
['fp/lgstar.F']
['subs/roplat.F']
['fp/bstrux.F']
['fp/bstrux.F']
['subs/findes.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/hnsmft.F']
['fp/hsibl.F']
['subs/invbl.F']
['fp/lmaux.F']
['fp/makusp.F']
['subs/sugcut.F']
['subs/pqmix.F']
['subs/pqmix.F']
['subs/lattic.F']
['lmv7util.F']
['subs/vxc0sp.F']
['subs/fswgts.F']
['fp/bndconn_v2.F']
['subs/fovlp.F']
['subs/addrwf.F']
['subs/m_struc_def.F']
['subs/spackv_array_copy.F']
['fp/mixrho.F']
['subs/mcasim.F']
['fp/makusq.F']
['fp/hambl.F']
['fp/polinta.F']
['fp/makusq.F']
['fp/bstrux.F']
['fp/mixrho.F']
['fp/mixrho.F']
['fp/mixrho.F']
['subs/shorbz.F']
['subs/pairc.F']
['subs/iomomx.F']
['fp/vxcnsp.F']
['fp/vxcnsp.F']
['fp/makusq.F']
['fp/makusp.F']
['fp/lindsc.F']
['fp/vxnlcc.F', 'subs/xcfunc.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['fp/hsmbl.F']
['subs/radpkl.F']
['fp/fradpk.F']
['fp/rhogkl.F']
['subs/besslr.F']
['subs/m_struc_def.F']
['subs/suham.F']
['subs/phidx.F']
['subs/mchan.F']
['fp/m_events.F']
['fp/symrho.F']
['subs/m_hamindex.F']
['fp/mkrout.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/shorbz.F']
['fp/symrho.F']
['subs/m_struc_def.F']
['subs/prmx.F']
['subs/fixpos.F']
['fp/mkpdos.F']
['subs/atomsr.F']
['subs/dlmn.F']
['subs/symq.F']
['subs/strx00.F']
['fp/sopert.F']
['subs/radgkl.F']
['subs/m_struc_def.F']
['subs/besslr.F']
['fp/mshint.F']
['subs/hansmd.F']
['subs/m_toksw.F']
['subs/drr2.F']
['subs/symiax.F']
['fp/chimedit.F']
['fp/symrho.F']
['subs/symq.F']
['subs/shortn.F']
['subs/hansmr.F']
['fp/loctsh.F']
['subs/atomsr.F']
['subs/m_sstrnsname.F']
['subs/dstrbp.F']
['subs/m_toksw.F']
['subs/aiopar.F']
['fp/hsibl.F']
['fp/gklft.F']
['subs/gvlist.F']
['fp/atqval.F']
['fp/suphas.F']
['subs/mkrtab.F']
['subs/parmxp.F']
['subs/mcasim.F']
['subs/ropyln1.F']
['subs/mcasim.F']
['fp/bndconn_v2.F']
['subs/ropyln.F']
['subs/rotwv.F']
['fp/pwmat.F']
['subs/bzwts.F']
['subs/symcry.F']
['subs/mkplat.F']
['subs/nosbzm.F']
['subs/nwit.F']
['subs/atomsr.F']
['subs/iors.F']
['subs/findes.F']
['subs/rstr0.F']
['subs/orbl.F']
['subs/uspecb.F']
['subs/parmxp.F']
['subs/parmxp.F']
['subs/vxnloc.F', 'subs/xcfunc.F']
['subs/avwsr.F']
['subs/mcasim.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['subs/rdsigm.F']
['subs/gvlist.F']
['subs/m_struc_def.F']
['subs/m_struc_def.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/m_toksw.F']
['subs/findes.F']
['fp/mshvmt.F']
['fp/mkpot.F']
['fp/potpus.F']
['subs/grpfnd.F']
['subs/roplat.F']
['subs/makidx.F']
['subs/m_rdctrl.F']
['fp/hklft.F']
['subs/getef.F']
['subs/symprj.F']
['subs/symiax.F']
['subs/m_struc_def.F']
['subs/sylm.F']
['subs/getcor.F']
['subs/makdos.F']
['subs/findes.F']
['fp/locpot.F']
['subs/sumsro.F']
['fp/hsmbl.F']
['subs/radmsh.F']
['fp/mkorbm.F']
['fp/gaugm.F']
['subs/shoshl.F']
['fp/hhugbl.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/ropbes.F']
['subs/mkplat.F']
['subs/suldau.F']
['subs/ldau.F']
['subs/madmat.F']
['subs/stoner.F']
['fp/sgvsym.F']
['subs/mksym.F']
['subs/maknos.F']
['subs/fixef0.F']
['subs/roth.F']
['subs/atomsr.F']
['subs/roth.F']
['fp/ioden.F']
['subs/suidx.F']
['subs/m_rdctrl.F']
['fp/dfaugm.F']
['subs/pkli.F']
['subs/roth.F']
['subs/spackv_array_copy.F']
['subs/roth.F']
['subs/roth.F']
['subs/roth.F']
['fp/dfqkkl.F']
['fp/ovlocr.F']
['subs/rdsigm.F']
['subs/dpdbyl.F']
['subs/rdctrl2.F']
['subs/findes.F']
['fp/efldos.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/fsmbpw.F']
['subs/makrot.F']
['subs/f102.F']
['fp/rsibl.F']
['fp/elocp.F']
['subs/atomsr.F']
['fp/augmbl.F']
['subs/prjpos.F']
['fp/wrhomt.F']
['subs/mcasim.F']
['fp/ggugbl.F']
['subs/mcasim.F']
['subs/iopos.F']
['subs/rotwv.F']
['fp/mullmf.F']
['fp/smcorm.F']
['subs/rdctrl2.F']
['subs/mkqp.F']
['fp/momusl.F']
['fp/vxcnls.F']
['subs/clist.F']
['subs/spackv_array_copy.F']
['subs/subzi.F']
['subs/fermi.F']
['subs/hft2rs.F']
['subs/dfphi.F']
['fp/rsibl.F']
['subs/iostr.F']
['fp/rsibl.F']
['fp/rsibl.F']
['subs/atomsr.F']
['fp/rsibl.F']
['fp/gaugm.F']
['fp/prtev.F']
['subs/pkli.F']
['fp/gklq.F']
['subs/m_gtv.F']
['subs/dstrbp.F']
['subs/mxmymz.F']
['subs/veecomp.F']
['subs/bzmesh.F']
['fp/vxtrap.F']
['subs/makidx.F']
['fp/setofl.F']
['fp/corprm.F']
['subs/splcls.F']
['fp/symrho.F']
['subs/xxxbnd.F']
['subs/besslr.F']
['subs/pqmix.F']
['subs/veecomp.F']
['subs/hft2rs.F']
['subs/hft2rs.F']
['subs/hft2rs.F']
['subs/rnatm.F']
['fp/hxpgbl.F']
['subs/symiax.F']
['subs/aiogen.F']
['subs/prdmts.F']
['subs/asymop.F']
['subs/aiosop.F']
['subs/grpgen.F']
['subs/orbl.F']
['fp/mshn3p.F']
['fp/smshft.F']
['subs/findes.F']
['subs/pvsms2.F']
['subs/bzwts.F']
['subs/latlim.F']
['subs/baslst.F']
['subs/nnrl.F']
['subs/m_struc_def.F']
['fp/vlm2us.F']
['subs/iomoms.F']
['subs/ropcsm.F']
['fp/hsibl.F']
['fp/sugw.F']
['subs/m_sstrnsname.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/rdeq.F']
['subs/iomomx.F']
['fp/mshn3p.F']
['subs/atomsr.F']
['fp/mshn3p.F']
['subs/iomomq.F']
['subs/atomsr.F']
['subs/iomoms.F']
['fp/gfigbl.F']
['subs/m_struc_def.F']
['fp/smshft.F']
['fp/ioden.F']
['subs/subasi.F']
['subs/gvctof.F']
['subs/gtpcor.F']
['subs/symq.F']
['subs/shoshl.F']
['fp/bndfp.F']
['subs/symq.F']
['subs/lattc.F']
['fp/potpus.F']
['subs/symtbl.F']
['subs/pairc.F']
['subs/pairc.F']
['subs/splwts.F']
['subs/pairc.F']
['subs/pairc.F']
['subs/makdla.F']
['subs/contet.F']
['subs/radmsh.F']
['subs/shear.F']
['subs/evxcp.F', 'subs/xcfunc.F']
['subs/m_struc_def.F']
['subs/clsset.F']
['fp/grfmsh.F']
['subs/rseq.F']
['subs/dosspl.F']
['subs/m_toksw.F']
['subs/suham2.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/rotwv.F']
['fp/sugw.F']
['subs/switch.F']
['fp/stonerrsa.F']
['subs/ropyln.F']
['subs/m_hamindex.F']
['fp/vesgcm.F']
['subs/iosite.F']
['fp/sugw.F']
['fp/vesft.F']
['subs/mkplat.F']
['subs/sumlst.F']
['subs/defspc.F']
['fp/sopert.F']
['subs/symdmu.F']
['subs/hanr.F']
['subs/phvsfp.F']
['subs/m_struc_def.F']
['fp/prrhat.F']
['fp/gklbl.F']
['subs/rsort.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/prdmts.F']
['subs/gengrp.F']
['subs/suqlst.F']
['fp/gklbl.F']
['subs/iobsmv.F']
['fp/addrbl.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/findes.F']
['subs/addrwf.F']
['subs/tetirr.F']
['subs/shear.F']
['subs/bzints.F']
['subs/rotwv.F']
['subs/defpq.F']
['subs/mtchae.F']
['fp/dfrce.F']
['subs/gvmtch.F']
['subs/pvsms2.F']
['subs/psymop.F']
['fp/smvxcm.F']
['subs/maknrs.F']
['subs/findes.F']
['fp/smvxcm.F']
['fp/smvxcm.F']
['fp/gklbl.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['fp/fklbl.F']
['subs/defwsr.F']
['subs/iosits.F']
['subs/m_struc_def.F']
['subs/orbl.F']
['subs/xxxdif.F']
['subs/spcgrp.F']
['subs/efrng2.F']
['fp/pkl2ro.F']
['subs/findes.F']
['subs/lattdf.F']
['subs/mtchae.F']
['subs/veecomp.F']
['fp/stonerpb.F']
['fp/addbkg.F']
['fp/hxpos.F']
['subs/m_struc_def.F']
['subs/iosave.F']
['subs/lattc.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/ovlpfa.F']
['subs/groupg.F']
['subs/shftpp.F']
['subs/m_rdctrl.F']
['subs/rothrm.F']
['subs/roth.F']
['fp/suylg.F']
['fp/hambls.F']
['fp/augmbl.F']
['fp/smvxcm.F']
['subs/spackv_array_copy.F']
['subs/qdist.F']
['subs/m_rdctrl.F']
['subs/m_struc_def.F']
['subs/rotpnt.F']
['fp/mkdmtu.F']
['subs/asados.F']
['fp/vcdmel.F']
['fp/vcdmel.F']
['subs/latvec.F']
['fp/hhigbl.F']
['subs/dstrbp.F']
['subs/veecomp.F']
['subs/suemph.F']
['fp/vxc0gc.F']
['subs/getbzp.F']
['fp/ovlocr.F']
['fp/rlocbl.F']
['subs/iorbtm.F']
['fp/rhogkl.F']
['subs/ccutup.F']
['subs/mkplat.F']
['subs/dostet.F']
['subs/grpop.F']
['subs/ropbes_alternative.F']
['fp/hklbl.F']
['fp/ghigbl.F']
['fp/augmat.F']
['subs/rotwv.F']
['subs/cmplat.F']
['subs/m_struc_def.F']
['fp/mshvmt.F']
['subs/aiova.F']
['fp/gaugm.F']
['fp/gaugm.F']
['fp/gaugm.F']
['subs/switch.F']
['subs/mshsiz.F']
['subs/m_rdctrl.F']
['subs/rotycs.F']
['subs/iostr.F']
['subs/iostr.F']
['subs/iostr.F']
['subs/findes.F']
['subs/grpgen.F']
['subs/bzwts.F']
['subs/gvlist.F']
['subs/psymop.F']
['subs/gvlist.F']
['fp/hhigbl.F']
['fp/rlocbl.F']
['subs/siteid.F']
['subs/asars.F']
['subs/hsmq.F']
['subs/vecpkl.F']
['subs/chgmsh.F']
['fp/addbkg.F']
['fp/augmbl.F']
['subs/sudmtu.F']
['subs/slist.F']
['fp/fsmbl.F']
['subs/shoshl.F']
['subs/suham.F']
['subs/aiomom.F']
['subs/aiorme.F']
['subs/vxcgr2.F']
['fp/mixrho.F']
['fp/symrho.F']
['fp/rhomom.F']
['subs/hamfb3.F']
['subs/shoshl.F']
['subs/spackv_array_copy.F']
['subs/hsmq.F']
['subs/radgra.F']
['fp/mkehkf.F']
['subs/s2sph.F']
['subs/radmsh.F']
['fp/sugw.F']
['subs/scglp1.F']
['fp/lmaux.F']
['subs/findes.F']
['subs/suclst.F']
['fp/smves.F']
['fp/hambls.F']
['fp/addrbl.F']
['fp/vcdmel.F']
['subs/roplat.F']
['subs/subzi.F']
['fp/sugw.F']
['subs/rotevs.F']
['fp/rsibl.F']
['subs/mcasim.F']
['fp/symrho.F']
['fp/augmbl.F']
['subs/aiocor.F']
['subs/findes.F']
['subs/spcgrp.F']
['subs/stoner.F']
['subs/dstrbp.F']
['subs/m_toksw.F']
['fp/locpot.F']
['subs/pqmix.F']
['subs/pqmix.F']
['subs/evxcv.F', 'subs/xcfunc.F']
['subs/pqmix.F']
['fp/hhibl.F']
['subs/findes.F']
['subs/easypbe.F', 'subs/xcfunc.F']
['subs/struc_strn.F']
['subs/grpgen.F']
['subs/symfor.F']
['subs/symlat.F']
['fp/ftlxp.F']
['fp/rdovfa.F']
['fp/locpot.F']
['subs/pptrns.F']
['fp/pwmat.F']
['subs/sylmnc.F']
['subs/f100.F']
['subs/ropbes.F']
['subs/suham.F']
['subs/mshsiz.F']
['subs/asymop.F']
['subs/m_psigd.F']
['fp/ovlocr.F']
['subs/slinz.F']
['fp/rhogkl.F']
['fp/hambls.F']
['fp/ugcomp.F']
['subs/switch.F']
['subs/gtbsl1.F']
['subs/radmsh.F']
['subs/qdist.F']
['subs/m_struc_def.F']
set(['subs/shoshl.F', 'subs/intnos.F', 'subs/dosspl.F', 'subs/fixpos.F', 'subs/sumlst.F', 'subs/pkli.F', 'subs/vldau.F', 'subs/tetirr.F', 'fp/supot.F', 'subs/gensym.F', 'subs/ropbes.F', 'subs/freeat.bk.F', 'fp/sopert.F', 'fp/stonerpb.F', 'fp/ghigbl.F', 'subs/lattic.F', 'fp/mkorbm.F', 'subs/iomomq.F', 'fp/hsmbl.F', 'fp/ovlocr.F', 'subs/pairc.F', 'subs/symfor.F', 'subs/pqmix.F', 'subs/radmsh.F', 'fp/ioden.F', 'fp/hhibl.F', 'fp/bndfp.F', 'subs/radgkl.F', 'subs/mtchae.F', 'fp/hklft.F', 'fp/rsibl.F', 'fp/gaugm.F', 'fp/pkl2ro.F', 'subs/rseq.F', 'fp/stonerrsa.F', 'subs/getqp.F', 'subs/hsmq.F', 'fp/augmat.F', 'subs/gvlst2.F', 'fp/mkpdos.F', 'fp/hklbl.F', 'subs/hansr.F', 'fp/hxpos.F', 'subs/aiogen.F', 'subs/ropbes_alternative.F', 'subs/symiax.F', 'subs/rdctrl2.F', 'subs/dpdbyl.F', 'subs/psymop.F', 'subs/splwts.F', 'subs/lx2vec.F', 'subs/grpfnd.F', 'subs/m_hamindex.F', 'subs/gtbvec.F', 'subs/s2sph.F', 'subs/vxcgga.F', 'subs/dstrbp.F', 'subs/dlmn.F', 'subs/latvec.F', 'subs/rnatm.F', 'subs/prrmsh.F', 'subs/aiomom.F', 'subs/getcor.F', 'subs/gvctof.F', 'fp/rlocbl.F', 'subs/cshear.F', 'subs/nwit.F', 'subs/delstd.F', 'subs/latlim.F', 'fp/vxcnsp.F', 'subs/mkqp.F', 'fp/polinta.F', 'subs/symq.F', 'subs/getbzp.F', 'subs/iorbtm.F', 'subs/iors.F', 'fp/addbkg.F', 'subs/asymop.F', 'subs/radpkl.F', 'subs/sclwsr.F', 'subs/delstp.F', 'subs/spackv_array_copy.F', 'fp/ovlpfa.F', 'subs/rotycs.F', 'subs/iosite.F', 'fp/momusl.F', 'fp/pwmat.F', 'subs/ovmin.F', 'fp/sgvsym.F', 'subs/iopos.F', 'fp/bndconn_v2.F', 'fp/addrbl.F', 'subs/aiosop.F', 'subs/hnsmft.F', 'fp/ghibl.F', 'fp/mshdot.F', 'subs/clabel.F', 'subs/aiomp.F', 'fp/fpchk.F', 'fp/rdovfa.F', 'fp/flocbl.F', 'fp/ugcomp.F', 'subs/gengrp.F', 'fp/setofl.F', 'fp/mkehkf.F', 'subs/makdos.F', 'subs/makrot.F', 'fp/hxpbl.F', 'subs/suham2.F', 'subs/mcasim.F', 'subs/rotevs.F', 'subs/nghbor.F', 'fp/mkewgt.F', 'subs/radgra.F', 'fp/potpus.F', 'fp/mkekin.F', 'fp/lmfp.F', 'subs/chkdmu.F', 'subs/switch.F', 'subs/soprm.F', 'subs/ropyln1.F', 'fp/hhugbl.F', 'fp/ghios.F', 'subs/vecpkl.F', 'subs/baslst.F', 'fp/mshint.F', 'fp/elocp.F', 'subs/m_psigd.F', 'subs/sylmnc.F', 'subs/suemph.F', 'subs/ccutup.F', 'subs/m_toksw.F', 'subs/avwsr.F', 'subs/struc_strn.F', 'subs/maknrs.F', 'subs/rdsigm2.F', 'fp/paug1.F', 'subs/aiocor.F', 'subs/defwsr.F', 'subs/rmesh.F', 'subs/nnrl.F', 'subs/rsort.F', 'subs/tailsm.F', 'subs/subasi.F', 'subs/iosits.F', 'fp/mixrho.F', 'subs/hanr.F', 'subs/rdeq.F', 'fp/ftlxp.F', 'subs/hansr4.F', 'fp/gwcphi.F', 'subs/fermi.F', 'subs/symlat.F', 'subs/getq.F', 'subs/hamfb3.F', 'subs/scglp1.F', 'subs/iclbas.F', 'subs/f100.F', 'subs/ropcsm.F', 'subs/rotspu.F', 'subs/f102.F', 'fp/gklq.F', 'subs/symprj.F', 'subs/mksym.F', 'subs/defspc.F', 'fp/ncutcorrect.F', 'fp/hhigbl.F', 'fp/hgugbl.F', 'subs/besslr.F', 'subs/strx00.F', 'fp/dfrce.F', 'subs/lattdf.F', 'subs/spcgrp.F', 'subs/rdsigm.F', 'subs/nosbzm.F', 'fp/makusp.F', 'subs/addbas.F', 'fp/corprm.F', 'subs/suham.F', 'subs/iofa.F', 'subs/trysop.F', 'subs/dosio.F', 'subs/gvlist.F', 'fp/pnunew.F', 'subs/ropbes.old.F', 'subs/aiorme.F', 'fp/gtbsl2.F', 'subs/bzmio.F', 'fp/vesft.F', 'subs/addrwf.F', 'fp/wrhomt.F', 'fp/lgstar.F', 'subs/efrng2.F', 'subs/mchan.F', 'subs/evxcp.F', 'subs/bzints.F', 'subs/aiova.F', 'subs/prmx.F', 'fp/loctsh.F', 'subs/rotwv.F', 'subs/rotpnt.F', 'fp/augmbl.F', 'subs/sugcut.F', 'subs/grpgen.F', 'subs/invbl.F', 'subs/symstr.F', 'fp/fsmbl.F', 'subs/rlxstp.F', 'subs/iostr.F', 'subs/suidx.F', 'subs/symtbl.F', 'fp/efldos.F', 'subs/phvsfp.F', 'fp/m_events.F', 'subs/mkplat.F', 'subs/atwf.F', 'subs/evxcv.F', 'fp/dfaugm.F', 'subs/writebasis.F', 'subs/m_struc_def.F', 'fp/fradpk.F', 'subs/veecomp.F', 'subs/lattc.F', 'fp/mkdmtu.F', 'subs/getef.F', 'subs/shortn.F', 'subs/cmplat.F', 'subs/uspecb.F', 'fp/prtev.F', 'subs/ylmrtg.F', 'subs/symcry.F', 'subs/vxcgr2.F', 'fp/gfigbl.F', 'subs/atomsr.F', 'fp/vesgcm.F', 'subs/mxmymz.F', 'subs/asados.F', 'subs/shear.F', 'subs/makdla.F', 'fp/smcorm.F', 'subs/clsset.F', 'fp/rsedit.F', 'subs/xxxdif.F', 'subs/subzi.F', 'subs/symdmu.F', 'subs/iomomx.F', 'fp/splrho.F', 'fp/gvsym.F', 'subs/slist.F', 'subs/shoist.F', 'subs/clsprm.F', 'lmv7util.F', 'subs/stoner.F', 'subs/iomoms.F', 'subs/defpq.F', 'fp/dfratm.F', 'subs/makrm0.F', 'subs/iobsmv.F', 'subs/roth.F', 'subs/suldau.F', 'subs/vxnloc.F', 'subs/gvmtch.F', 'subs/bzwtsf.F', 'subs/sylm.F', 'subs/ioeula.F', 'subs/dostet.F', 'fp/suylg.F', 'subs/suclst.F', 'fp/gklbl.F', 'subs/freeat.F', 'fp/smshft.F', 'fp/hambl.F', 'subs/pptrns.F', 'subs/prjpos.F', 'fp/rhgcmp.F', 'subs/ldau.F', 'subs/makrwf.F', 'subs/xxxbnd.F', 'fp/hxpgbl.F', 'subs/xlgen.F', 'subs/gtbsl1.F', 'fp/vcdmel.F', 'subs/sumsro.F', 'fp/gklft.F', 'subs/aiopar.F', 'fp/mshn3p.F', 'subs/setcg.F', 'subs/makidx.F', 'fp/vxc0gc.F', 'subs/groupg.F', 'subs/iax2fd.F', 'fp/lmaux.F', 'subs/m_sstrnsname.F', 'subs/bzwts.F', 'fp/fklbl.F', 'fp/dfqkkl.F', 'subs/rsmsym.F', 'fp/vxnlcc.F', 'subs/m_rdctrl.F', 'subs/config.F', 'subs/gtpcor.F', 'fp/mkrout.F', 'subs/sudmtu.F', 'subs/fswgts.F', 'subs/aiopot.F', 'subs/vxc0sp.F', 'fp/rhomom.F', 'fp/fsmbpw.F', 'subs/mshsiz.F', 'fp/hambls.F', 'subs/ovlchk.F', 'fp/jxpos.F', 'subs/mkcond.F', 'subs/bloch.F', 'subs/dpdftr.F', 'subs/shorbz.F', 'subs/rothrm.F', 'subs/iosave.F', 'subs/grpop.F', 'subs/fovlp.F', 'fp/hsibl.F', 'subs/chgmsh.F', 'subs/projql.F', 'fp/hklos.F', 'fp/hklgbl.F', 'lmv7.F', 'subs/scg.F', 'subs/volsph.F', 'subs/fixef0.F', 'fp/prrhat.F', 'subs/bzmesh.F', 'fp/bstrux.F', 'subs/madmat.F', 'fp/sugw.F', 'subs/xcfunc.F', 'fp/vxtrap.F', 'fp/mshvmt.F', 'subs/hansrz.F', 'fp/praugm.F', 'subs/clist.F', 'subs/rstr0.F', 'fp/totfrc.F', 'subs/splcls.F', 'subs/mkrtab.F', 'subs/phidx.F', 'fp/symrho.F', 'fp/smvxcm.F', 'fp/vlm2us.F', 'subs/slinz.F', 'fp/smhsbl.F', 'subs/hft2rs.F', 'subs/asars.F', 'lmfav7.F', 'subs/orbl.F', 'subs/drr2.F', 'subs/maknos.F', 'fp/mullmf.F', 'subs/contet.F', 'fp/smves.F', 'subs/dfphi.F', 'subs/shftpp.F', 'subs/suqlst.F', 'subs/dvdos.F', 'subs/hansmd.F', 'fp/grfmsh.F', 'fp/ggugbl.F', 'fp/poinsp.F', 'subs/hansmr.F', 'subs/prdmts.F', 'fp/rhogkl.F', 'subs/roplat.F', 'fp/locpot.F', 'subs/hansr5.F', 'fp/mkpot.F', 'subs/m_gtv.F', 'subs/easypbe.F', 'subs/pvsms2.F', 'subs/ropyln.F', 'fp/fradhd.F', 'subs/qdist.F', 'fp/suphas.F', 'subs/ioorbp.F', 'fp/vxcnls.F', 'fp/surho.F', 'fp/makusq.F', 'subs/relax.F', 'subs/siteid.F', 'fp/lindsc.F', 'subs/shorps.F', 'fp/tbhsi.F', 'fp/chimedit.F', 'fp/atqval.F', 'subs/findes.F', 'subs/parmxp.F'])
------------ UnUsed files ------------

set(['fp/vxcnlm.F'])
