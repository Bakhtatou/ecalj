WARNING while processing 'lmv7.F' (mode='fix')..
    4:      program main
    5:      implicit none
    6:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
    5:      implicit none
    6:#if MPI|MPIK
    7:      include 'mpif.h' <== 'mpif.h' not found in ':.'. The INCLUDE line will be turned to a comment.
    8:      integer ierr, nsize, id
WARNING while processing 'lmv7.F' (mode='fix')..
   14:      write(*,*) 'mpi: size and id=',nsize,id
   15:cend-----
   16:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   16:#endif
   17:      call fmain()
   18:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   18:#if MPI|MPIK
   19:      call mpi_finalize(ierr)
   20:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   28:      implicit none
   29:      integer procid, master, mpipid, nproc
   30:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   29:      integer procid, master, mpipid, nproc
   30:#if MPI | MPIK
   31:      include "mpif.h" <== 'mpif.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   32:#if MPE
WARNING while processing 'lmv7.F' (mode='fix')..
   30:#if MPI | MPIK
   31:      include "mpif.h"
   32:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   31:      include "mpif.h"
   32:#if MPE
   33:      include "mpef.h" <== 'mpef.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   34:#endif
WARNING while processing 'lmv7.F' (mode='fix')..
   32:#if MPE
   33:      include "mpef.h"
   34:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   43:      double precision starttime, endtime
   44:      logical mlog
   45:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'lmv7.F' (mode='fix')..
   44:      logical mlog
   45:#if MPE
   46:C Event numbers:
   47:      include "fp/events.ins" <== including file 'fp/events.ins'
   48:#endif MPE
WARNING while processing 'lmv7.F' (mode='fix')..
   46:C Event numbers:
   47:      include "fp/events.ins"
   48:#endif MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   47:      include "fp/events.ins"
   48:#endif MPE
   49:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   51:C Heap allocation
   52:      integer wksize
   53:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   53:#if MPI | MPIK
   54:      parameter(wksize= 300 000 000)
   55:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
   55:#else
   56:      parameter(wksize= 300 000 000)
   57:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  102:C$$$      integer fopnn
  103:C$$$#endif
  104:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  104:#if MPI | MPIK
  105:      integer fext
  106:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  114:c#elif LM
  115:c#elif LMFA
  116:#if LMFA <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  116:#if LMFA
  117:      data prgnam /'LMFA'/
  118:#elif LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  118:#elif LMFGWD
  119:      data prgnam /'LMFGWD'/
  120:#elif LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  122:c#elif LMAQU
  123:c      data prgnam /'LMAQU'/
  124:#elif  LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  155:c#elif  MMAG
  156:c      data prgnam /'MMAG'/
  157:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  176:c      data prgnam /'LMSTR'/
  177:c#elif LMCHK
  178:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  186:c      data prgnam /'LMXBS'/
  187:c      data auxmod /4/
  188:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  216:c      vn(2) = 7.00d0
  217:c      vn2(2) = 0
  218:#if LMFA | LMF | LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  232:c      vn(2) = 2.00d0
  233:c      vn2(2) = 0
  234:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  251:
  252:C --- Dynamic memory allocation and other initialization ---
  253:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  256:      namelen(procid) = i-1
  257:      mlog = cmdopt('--mlog',6,0,strn)
  258:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  288:      EVENT_START_BARRIER= MPE_LOG_GET_EVENT_NUMBER()
  289:      EVENT_END_BARRIER  = MPE_LOG_GET_EVENT_NUMBER()
  290:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  301:      call MPI_BCAST(ext,20,MPI_CHARACTER,master,MPI_COMM_WORLD,ierr)
  302:      if (procid .eq. master) then
  303:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  332:        ierr = MPE_DESCRIBE_STATE(EVENT_START_BARRIER,EVENT_END_BARRIER,
  333:     .                            "barrier","yellow")
  334:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  356:      endif
  357:      call MPI_BARRIER( MPI_COMM_WORLD, ierr )
  358:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  373:      if (ext(j:j) .eq. '.') j=j-1
  374:      if (j .ge. i) call ptenv('EXT='//ext(i:j))
  375:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  375:#endif
  376:
  377:#if BLM <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  378:      call suctrl(prgnam)
  379:      call fexit(0,0,' ',0)
  380:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  382:C ... Abort with error message if ctrl file is missing (swtmp = .true.)
  383:      swtmp = .false.
  384:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  384:#if MPI | MPIK
  385:      if (procid .eq. master) then
  386:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  394:        endif
  395:      endif
  396:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  396:#if MPI | MPIK
  397:      endif
  398:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  414:c#endif
  415:c#if LM | LMDOS | LMGF
  416:#if LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  417:      i = fadd('MOMS',-1,4)
  418:      i = fadd('CLS',-1,4)
  419:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  453:      endif
  454:      endif
  455:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  457:      call MPI_BCAST(recrd,recln0*(nrecs+1),MPI_CHARACTER,
  458:     .  master,MPI_COMM_WORLD,ierr)
  459:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  483:cccccccccccccccccc
  484:
  485:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  484:
  485:#if MPI | MPIK
  486:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  487:      ierr = MPE_LOG_EVENT(EVENT_END_RDCTRL,procid,"rdctrl")
  488:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  489:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  489:#endif
  490:      call MPI_BARRIER( MPI_COMM_WORLD, ierr )
  491:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  491:#if MPE
  492:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  493:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  492:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  493:#endif
  494:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  590:c#endif
  591:
  592:#if LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  592:#if LMF
  593:      lc = 10
  594:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  594:#endif
  595:
  596:#ifndef LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  597:Cgetarg       if (.not. lgors('ctrl lqp,1',v_sctrl)) lc = lc+2
  598:       if ( .not. iand(1,int(v_sctrl%lqp)) .ne.0 ) lc = lc+2
  599:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  619:C --- Read available class parameters from file ---
  620:c#if LMCTL | LMCHK
  621:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  631:cc$$$     .  slabl,v_sbz,v_sctrl,v_sham,v_spot,v_slat,v_smix,v_sspec,v_ssite,v_sstr,
  632:cc$$$     .  v_sarry,v_smove,v_stb,sstrn)
  633:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  633:#if MPI | MPIK
  634:      call MPI_BARRIER( MPI_COMM_WORLD, ierr )
  635:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  641:     .  v_slat,v_sbz,v_sstr,sstrn)
  642:c#endif
  643:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  665:C ... Patch for now ... maybe replace
  666:c#if LM | TBE | LMGF | LMF
  667:#if LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  666:c#if LM | TBE | LMGF | LMF
  667:#if LMF
  668:#ifndef LMFGWD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  671:       ltet = iand(1,int(v_sctrl%lmet)) .ne.0 .or. iand(4+2+1,int(v_sctrl%ldos)) .ne.0
  672:      call mkqp(v_sctrl,v_sbz,v_slat,ltet,F,1,-2)
  673:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  672:      call mkqp(v_sctrl,v_sbz,v_slat,ltet,F,1,-2)
  673:#endif
  674:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  683:
  684:
  685:#if LMFA <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  685:#if LMFA
  686:      call freeat(v_sctrl,v_sspec,v_sham,v_spot)
  687:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  687:#endif
  688:
  689:#if LMCHK & FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  692:        call cexit(0,1)
  693:      endif
  694:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  695:
  696:c#if LMCHK | LMXBS | LMGPOL | LMSHF
  697:#if LMCHK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  699:      call lmaux(prgnam,v_sctrl,v_sham,v_spot,v_slat,v_sspec,
  700:     .  v_ssite,v_sstr,v_sarry,v_sbz,slabl,sstrn,auxmod,wksize)
  701:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  706:c#endif
  707:
  708:#if LMF <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  709:      call lmfp(prgnam,v_sbz,v_sctrl,v_sham,v_spot,v_slat,
  710:     .  v_smix,v_sspec,v_ssite,v_sstr,v_smove,v_sarry,sstrn)
  711:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  766:C$$$#endif
  767:
  768:#if LMDOS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  769:      call asados(prgnam,v_sbz,v_sctrl,v_sham,v_slat,
  770:     .  v_sspec,v_ssite,v_sarry)
  771:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  797:C$$$     .  v_ssite,v_sstr,v_sarry,v_sbz,slabl,sstrn,2**1,wksize)
  798:C$$$#endif
  799:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  801:C -------------- End of program -------------
  802: 1000 continue
  803:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  802: 1000 continue
  803:#if MPI | MPIK
  804:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  808:      call skp2bl(ext,20,i)
  809:      ierr = MPE_FINISH_LOG(ext(2:i))
  810:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  815:        call fexit(0,0,' ',0)
  816:      endif
  817:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmv7.F' (mode='fix')..
  817:#else
  818:      call rx0(prgnam)
  819:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
   82:      real(8),parameter::    NULLR =-99999
   83:cMay1 patch for MPI from y.Yoshimoto
   84:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
   83:cMay1 patch for MPI from y.Yoshimoto
   84:#if MPI|MPIK
   85:      include 'mpif.h' <== 'mpif.h' not found in ':.'. The INCLUDE line will be turned to a comment.
   86:      integer ierr
WARNING while processing 'lmfav7.F' (mode='fix')..
   85:      include 'mpif.h'
   86:      integer ierr
   87:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
  109:      stdo = lgunit(1)
  110:      i = dglob('stdo',dble(stdo),1)
  111:#if MPI|MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'lmfav7.F' (mode='fix')..
  111:#if MPI|MPIK
  112:      call mpi_init(ierr)
  113:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
    4:Cgetarg...info...           structure ['addrbl', 'spec', 'sspec']
    5:Cgetarg...info...           use_to_add ['addrbl', 'm_struc_def']
    6:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  124:      double precision vavg,wgt,alat,qlat(3,3),tpiba,vol
  125:      equivalence (n1,ngabc(1)),(n2,ngabc(2)),(n3,ngabc(3))
  126:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  128:      complex(8),allocatable:: evecc(:,:,:,:),work(:,:,:,:)
  129:      real(8),allocatable:: qpgv(:,:),qpg2v(:),ylv(:,:)
  130:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  130:#else
  131:      double precision qpgv,qpg2v,ylv
  132:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  131:      double precision qpgv,qpg2v,ylv
  132:#endif
  133:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  133:#if F90 | AUTO_ARRAY
  134:      double precision ewgt(ndimh*nspc*numq)
  135:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  137:      parameter(ndimx=1000)
  138:      double precision ewgt(3,ndimx)
  139:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  154:       call i8icopy(i_copy_size,slat%nabc,1,ngabc,1)
  155:
  156:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  156:#if ! (F90 | AUTO_ARRAY)
  157:      if (ndimhx.gt.ndimx) call rxi('addrbl: increase ndimx to',ndimh)
  158:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  187:      enddo
  188:      nlmax=(lmxax+1)**2
  189:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  199:        allocate(ylv(1,1),qpgv(1,1),qpg2v(1))
  200:      endif
  201:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  203:        call rx('require F90 for PW code')
  204:      endif
  205:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  298:          lswtk = -2
  299:        else
  300:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  316:        deallocate(evecc,work)
  317:        endif
  318:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  318:#else
  319:      lswtk = -2
  320:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  321:      endif
  322:
  323:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/addrbl.F' (mode='fix')..
  323:#if F90
  324:      deallocate(qpgv,qpg2v,ylv)
  325:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
    3:Cgetarg...info...           structure ['augmbl', 'spec', 'sspec']
    4:Cgetarg...info...           use_to_add ['augmbl', 'm_struc_def']
    5:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   87:C     implicit none
   88:C ... Passed parameters
   89:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   88:C ... Passed parameters
   89:#if MPI
   90:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   89:#if MPI
   90:#if MPE
   91:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   92:#endif
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   90:#if MPE
   91:      include "mpef.h"
   92:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
   91:      include "mpef.h"
   92:#endif
   93:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   94:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  105:      integer i,lgunit
  106:      character*120 strn
  107:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  118:      integer nlmbx,nlmax,ktop0,lofb,mode0
  119:      parameter (ktop0=20, nlmbx=49, nlmax=49, lofb=(ktop0+1)*nlmax)
  120:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  120:#if F90
  121:      complex(8),allocatable:: b(:)
  122:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  122:#else
  123:      double complex b(lofb*ndimh),b0(lofb*nlmbx),bos(lofb)
  124:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  127:     .  nlmha,nkaph,ocg,ocy,oidxcg,ojcg,mode1,nlmto
  128:      double precision rsma,pa(3),xx,alat,qlat(3,3),vol
  129:#ifndef F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  136:      double precision eh(n0,nkap0),rsmh(n0,nkap0)
  137:      integer ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0),norb
  138:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  137:      integer ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0),norb
  138:#endif
  139:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  140:      integer, dimension(:), allocatable :: bproc
  141:      integer oh,ohbuf,os,osbuf,ohso
  142:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  141:      integer oh,ohbuf,os,osbuf,ohso
  142:#endif
  143:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/augmbl.F' (mode='fix')..
  142:#endif
  143:#if MPE
  144:C Event numbers:
  145:      include "events.ins" <== including file 'fp/events.ins'
  146:#endif
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  144:C Event numbers:
  145:      include "events.ins"
  146:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  154:      call tcn ('augmbl')
  155:
  156:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  162:      master = 0
  163:      mlog = cmdopt('--mlog',6,0,strn)
  164:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  164:#else
  165:      numprocs=1
  166:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  195:C     tpiba = 2d0*4d0*datan(1d0)/alat
  196:
  197:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  197:#if F90
  198:      allocate (b(lofb*ndimh))
  199:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  200:
  201:C --- Loop over augmentation sites --- ---
  202:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  201:C --- Loop over augmentation sites --- ---
  202:#if MPI
  203:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  203:#if MPE
  204:      ierr = MPE_LOG_EVENT(EVENT_START_AUGMBL,procid,"augmbl")
  205:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  213:      initbas=bproc(procid)
  214:      endbas =bproc(procid+1)-1
  215:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  216:      initbas=1
  217:      endbas=nbas
  218:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  219:
  220:      do  ia = initbas, endbas
  221:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  227:     .        procid,numprocs,bproc(procid),bproc(procid+1)-1)
  228:        endif
  229:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  255:C   --- Make strux to expand all orbitals at site ia ---
  256:        call rxx((kmax+1)*nlma .gt. lofb, 'augmbl: increase lofb')
  257:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  261:     .    iprmb,nbas,ia,pa,rsma,q,kmax,nlma,ndimh,
  262:     .    napw,igapw,b,xx)
  263:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  291:     .        kmax,nlma,w(ocg),w(oidxcg),w(ojcg),w(ocy),slat,b0)
  292:C       ... Subtract strux of on-site heads if ib=ia
  293:#ifndef ALL3C <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  296:              call paugq2(kmax,nlmh,nlma,bos,b0)
  297:            endif
  298:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  300:          enddo
  301:        enddo
  302:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  303:
  304:C   --- Add 1-center and 2-center terms ---
  305:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  313:     .    w(oppi(2,ia)),b,ndimh,nlmto,w(os),w(oh),w(ohso))
  314:        endif
  315:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  314:        endif
  315:#else
  316:#ifndef ALL3C <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  324:     .      w(oppi(2,ia)),b,ndimh,nlmto,s,h,hso)
  325:        endif
  326:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  325:        endif
  326:#endif
  327:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  328:
  329:C   --- Add B+ sig B to S and B+ ppi B to H ---
  330:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  336:     .   w(ohso))
  337:        endif
  338:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  344:     .                hso)
  345:        endif
  346:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  349:C ... end loop over ia
  350:      enddo
  351:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  350:      enddo
  351:#if MPI
  352:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  353:      ierr = MPE_LOG_EVENT(EVENT_END_AUGMBL,procid,"augmbl")
  354:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  355:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  355:#endif
  356:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  357:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  358:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  359:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  360:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  401:      call rlse(os)
  402:      deallocate(bproc, stat=ierr)
  403:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  403:#if MPE
  404:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  405:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  404:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  405:#endif
  406:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  411:C      call zprm('s-aug',2,s,ndimh,ndimh,ndimh)
  412:
  413:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  413:#if F90
  414:      deallocate (b)
  415:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  611:      double precision xx
  612:      double complex cadd,cadd1
  613:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  613:#if F90
  614:      complex(8),allocatable:: tso(:,:,:,:)
  615:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  615:#else
  616:      double complex tso(ndimh,ndimh,2,2)
  617:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  618:
  619:      if (mode1 .eq. 1) then
  620:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  620:#if F90
  621:        allocate (tso(ndimh,ndimh,2,2))
  622:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  708:      if (mode1 .eq. 1) then
  709:        call dpadd(hso(1,1),tso(1,1,1,2),1,2*ndimh*ndimh,1d0)
  710:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/augmbl.F' (mode='fix')..
  710:#if F90
  711:        deallocate (tso)
  712:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  181:C ... Passed parameters
  182:      logical :: llmfgw
  183:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  182:      logical :: llmfgw
  183:#if MPI | MPIK
  184:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  185:#if MPE
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  183:#if MPI | MPIK
  184:      include "mpif.h"
  185:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  184:      include "mpif.h"
  185:#if MPE
  186:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  187:#endif
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  185:#if MPE
  186:      include "mpef.h"
  187:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  196:      integer namelen(0:MAX_PROCS-1)
  197:      double precision starttime, endtime
  198:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  198:#if MPI
  199:      integer dims(2)
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  199:      integer dims(2)
  200:#endif
  201:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  204:      integer:: pidorigin, ndimhx_iq, nev_iq
  205:      integer:: work_mpi(10)  ! use only 1 and 2 now
  206:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  205:      integer:: work_mpi(10)  ! use only 1 and 2 now
  206:#endif
  207:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/bndfp.F' (mode='fix')..
  206:#endif
  207:#if MPE
  208:C Event numbers:
  209:      include "events.ins" <== including file 'fp/events.ins'
  210:#endif
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  208:C Event numbers:
  209:      include "events.ins"
  210:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  209:      include "events.ins"
  210:#endif
  211:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  302:                               !for 'make check',
  303:                               !because fp/test/test.fp assumes 'something not inserted in console output'.
  304:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  307:      integer, dimension(:),allocatable :: kpproc
  308:      double precision sttime,entime
  309:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  364:      master = 0
  365:      mlog = cmdopt('--mlog',6,0,strn)
  366:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  369:      call strcop(shortname(procid),name,10,'.',i)
  370:      namelen(procid) = i-1
  371:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  472:      lpdiag = isw(cmdopt('--pdiag',7,0,strn))
  473:
  474:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  474:#if MPIK
  475:      lpdiag = 0
  476:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  504:
  505:
  506:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  520:        endif
  521:      endif
  522:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  816:          ef0 = eferm
  817:        endif
  818:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
  820:          call defrr(oeomin,nsp*nkp)
  821:        endif
  822:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1007:        iopq = 0
 1008:C       suqlst in MPIK mode; returns cumulative number of k-points
 1009:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1009:#if MPIK
 1010:        iopq = 2
 1011:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1032:
 1033:C MPIK: Setup to assemble all k-points into single list with qp table
 1034:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1072:        endif
 1073:        call mpibc1(w(oqp),3*nkp,4,.false.,'bndfp','qp')
 1074:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1290:C     evl is dimensioned evl(ndham,2)
 1291:C     w(oevl), w(owtkb), w(oswtk) are dimensioned (ndham,nsp,nkp)
 1292:#if MPE & MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1292:#if MPE & MPIK
 1293:      ierr = MPE_LOG_EVENT(EVENT_START_KLOOP,procid,"k-loop")
 1294:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1293:      ierr = MPE_LOG_EVENT(EVENT_START_KLOOP,procid,"k-loop")
 1294:#endif
 1295:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1308:          endif
 1309:        endif
 1310:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1311:c      nsmidb = ndham
 1312:      do 2010 iq = 1, nkp
 1313:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1316:
 1317:
 1318:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1326:c        endif
 1327:        qp=qplist(:,iq)
 1328:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1328:#else
 1329:        call dpscop(w(oqp),qp,3,3*iq-2,1,1d0) !this should be modified as in non-MPIK mode.
 1330:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1815:
 1816:        if (mod(iq,10) .ne. 1) call pshpr(iprint()-6)
 1817:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1819:     .    '%?#n#   ndimh = %i##',
 1820:     .    iq,nkp,qp,mod(pwmode/10,10),ndimh)
 1821:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1841:        if(lpdiag .eq. 1) then
 1842:          call rxx(nspc.ne.1,'parallel diag not implemented for noncol')
 1843:#if MPE & MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1843:#if MPE & MPI
 1844:          ierr = MPE_LOG_EVENT(EVENT_START_PZHEV,procid,"pzhev")
 1845:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1852:
 1853:          nevl = ndimh
 1854:#if MPE & MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1854:#if MPE & MPI
 1855:          ierr = MPE_LOG_EVENT(EVENT_END_PZHEV,procid,"pzhev")
 1856:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1920:        if(debug) print *,'iq isp nevls=',iq,isp,nevls(iq,isp)
 1921:
 1922:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1933:          if (nev .gt. 0) call zprm('evecs',2,w(ot),ndimhx,ndimhx,nev)
 1934:        endif
 1935:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1937:
 1938:C ...  In k-parallel mode, defer this section until all qp available
 1939:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1944:        if (lmet .eq. 0 .and. iq .eq. 1 .and. jsp .eq. 1) ef0 = evtop
 1945:        if (plbnd .eq. 0) then
 1946:#if ! (MPI | MPIK | MPE) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1948:     .  write (stdl,712) (evl(i,jsp),i=1,nev)
 1949:  712   format('fp evl',8f8.4)
 1950:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1980:        endif
 1981:        endif
 1982:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1988:        call dpscop(evl(1,jsp),w(oevl),ndhamx,
 1989:     .              1,1+ndham*(jsp-1+isqp),1d0)
 1990:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 1992:          call dpscop(eomin,w(oeomin),1,1,1+(jsp-1+isqp),1d0)
 1993:        endif
 1994:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2018:        if (procid .eq. master) then
 2019:        if (cmdopt('--mull',6,0,strn)) then
 2020:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2020:#if MPIK
 2021:          call rx('MULL not k-parallel.')
 2022:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2037:          call rlse(odoswt)
 2038:        elseif (cmdopt('--pdos',6,0,strn)) then
 2039:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2039:#if MPIK
 2040:          call rx('PDOS not k-parallel.')
 2041:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2050:     .      nchan,1,lsites,nsites,w(oppnl),w(oausp),w(odoswt))
 2051:          call iomomn(.true.,2,.false.,1,nspc,1,1,i)
 2052:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2054:     .      ndham,ndimh,nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,
 2055:     .      0d0,0d0)
 2056:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2057:          i1 = iomoms(-nfilem,nl,nsp,nspc,2,ndimh,i,1,1,1,ndham,ndimh,
 2058:     .      nchan,nchan,nev,evl(1,jsp),0d0,w(odoswt),0d0,0d0,0d0)
 2059:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2087:        if (icls .ne. 0 .and. lwtkb .ne. -1) then
 2088:          call rxx(nspc.ne.1,'CLS not implemented in noncoll case')
 2089:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2089:#if MPI
 2090:            call rx('CLS only k-parallel')
 2091:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2107:C  399     format(' after addrbl: frc(3,1)=',i4,2f12.6)
 2108:        endif
 2109:#ifndef MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2127:     .        w(ot),evl)
 2128:          endif
 2129:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2135:            call dpscop(eomin,w(oeomin),1,1,1+(jsp-1+isqp),1d0)
 2136:          endif
 2137:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2201:C --- Second loop over qp, needed to make k-parallelisation possible: ---
 2202:C     You can't do this until you have all the evals.
 2203:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2202:C     You can't do this until you have all the evals.
 2203:#if MPIK
 2204:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2204:#if MPE
 2205:      ierr = MPE_LOG_EVENT(EVENT_END_KLOOP,procid,"k-loop")
 2206:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2446:ckino 05Feb09
 2447:      if (allocated(kpproc)) deallocate(kpproc, stat=ierr)
 2448:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2792:        call defrr(oqm2, nvl)
 2793:        call upacks('strn mix',i1,i2)
 2794:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2794:#if MPE
 2795:        ierr = MPE_LOG_EVENT(EVENT_START_MIXRHO,procid,"mixrho")
 2796:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2807:ccccccccccccccccccccccccc
 2808:
 2809:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2809:#if MPE
 2810:        ierr = MPE_LOG_EVENT(EVENT_END_MIXRHO,procid,"mixrho")
 2811:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2835:
 2836:
 2837:#if MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2855:C ----------------------------------------------------------------------
 2856:      implicit none
 2857:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
 2858:C ... Passed parameters
 2859:      integer kpproc(0:*),ndham,nkp,nsp
WARNING while processing 'fp/bndfp.F' (mode='fix')..
 2900:       end subroutine xmpbnd
 2901:
 2902:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
    2:Cgetarg...info...           structure ['bstrux', 'site', 'ssite']
    3:Cgetarg...info...           use_to_add ['bstrux', 'm_struc_def']
    4:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
   80:      integer ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0)
   81:      double precision p(3),xx,alat,qlat(3,3),vol,srvol
   82:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  146:          endif
  147:
  148:#ifndef ALL3C <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  151:            call paugq2(kmax,nlmh,nlma,bos,b0)
  152:          endif
  153:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  180:      endif
  181:
  182:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  182:#else
  183:      call rx('bstrux requires F90')
  184:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  298:      if (napw .eq. 0) return
  299:
  300:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  439:C     deallocate(fac2l,yl,bpw)
  440:
  441:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/bstrux.F' (mode='fix')..
  441:#else
  442:      call rx('bstrux requires F90')
  443:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  235:C 306 format(' Failed to parse string ',a,' ... try again.')
  236:  100 continue
  237:#if PRTNOCR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  237:#if PRTNOCR
  238:      print '(/'' Option : '',$)'
  239:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/chimedit.F' (mode='fix')..
  239:#else
  240:      print '(/'' Option : '')'
  241:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   65:C     implicit none
   66:C ... Passed parameters
   67:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   66:C ... Passed parameters
   67:#if MPI | MPIK
   68:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   69:#if MPE
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   67:#if MPI | MPIK
   68:      include "mpif.h"
   69:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   68:      include "mpif.h"
   69:#if MPE
   70:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   71:#endif
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   69:#if MPE
   70:      include "mpef.h"
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   81:      double precision starttime, endtime
   82:      logical mlog,cmdopt
   83:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   82:      logical mlog,cmdopt
   83:#endif
   84:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/dfrce.F' (mode='fix')..
   83:#endif
   84:#if MPE
   85:C Event numbers:
   86:      include "events.ins" <== including file 'fp/events.ins'
   87:#endif
WARNING while processing 'fp/dfrce.F' (mode='fix')..
   85:C Event numbers:
   86:      include "events.ins"
   87:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  107:      parameter (npmx=32)
  108:      integer oicdn(npmx),oicdn0(npmx),oicdv(npmx),oics(npmx),oisn(npmx)
  109:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  110:      integer, dimension(:), allocatable :: bproc, iiv0
  111:      integer pid,jb
  112:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  128:      call tcn('dfrce')
  129:
  130:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  144:        enddo
  145:      endif
  146:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  273:
  274:C --- For each site, get correction to force ---
  275:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  280:        write(stdo,201) strn
  281:      endif
  282:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  288:
  289:C ... Setup array iiv0 = (vector of iv0 for parallel); allocate work arrays
  290:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  302:        iv0 = iv0+nlm
  303:   12 continue
  304:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  330:C$&        SHARED (job,ng,iiv0,ocnomi,ocvin,ocdvx)
  331:C$&        MP_SCHEDTYPE=RUNTIME
  332:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  331:C$&        MP_SCHEDTYPE=RUNTIME
  332:#if MPI | MPIK
  333:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  333:#if MPE
  334:      ierr = MPE_LOG_EVENT(EVENT_START_DFRCE,procid,"dfrce")
  335:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  338:      ibini = bproc(procid)
  339:      ibend = bproc(procid+1)-1
  340:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  341:      ibini=1
  342:      ibend=nbas
  343:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  344:
  345:      do  ib = ibini, ibend
  346:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  353:        endif
  354:        iv0 = iiv0(ib)
  355:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  385:        enddo
  386:
  387:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  390:     .    (c*fxc(m),m=1,3),(c*dfh(m,ib),m=1,3)
  391:  200   format(i4,3f8.2,1x,3f8.2,1x,3f8.2:1x,3f8.2)
  392:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  395:   20 continue
  396:      enddo
  397:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  396:      enddo
  397:#if MPI | MPIK
  398:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  399:      ierr = MPE_LOG_EVENT(EVENT_END_DFRCE,procid,"dfrce")
  400:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  401:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  401:#endif
  402:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  403:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  404:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  405:      ierr = MPE_LOG_EVENT(EVENT_START_BCAST,procid,"broadcast")
  406:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  423:      deallocate (bproc, stat=ierr)
  424:      deallocate (iiv0, stat=ierr)
  425:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  425:#if MPE
  426:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  427:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  426:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  427:#endif
  428:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  433:
  434:C ... MPI printout
  435:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/dfrce.F' (mode='fix')..
  443:  202   format(i4,50x,3f8.2)
  444:      endif
  445:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
    1:Cgetarg...info...           structure ['fklbl', 'lat', 'slat']
    2:Cgetarg...info...           use_to_add ['fklbl', 'm_struc_def']
    3:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   39:      double complex fsm(nlm0),gklsav,gklnew
   40:      parameter (faca=1d0)
   41:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   41:#if F90
   42:      real(8),allocatable:: wk(:),yl(:)
   43:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
   94:      call shorbz(p,p1,plat,qlat)
   95:      nrx = max(nkd,nkq)
   96:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
  106:      endif
  107:      deallocate(wk,yl)
  108:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fklbl.F' (mode='fix')..
  119:      endif
  120:      call rlse(owk)
  121:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   44:C     implicit none
   45:C ... Passed parameters
   46:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   45:C ... Passed parameters
   46:#if MPI
   47:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   46:#if MPI
   47:#if MPE
   48:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   49:#endif
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   47:#if MPE
   48:      include "mpef.h"
   49:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   48:      include "mpef.h"
   49:#endif
   50:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   51:      integer pid, procid, master, numprocs, ierr,
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   62:      logical mlog,cmdopt
   63:      character*120 strn
   64:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   63:      character*120 strn
   64:#endif
   65:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/fsmbl.F' (mode='fix')..
   64:#endif
   65:#if MPE
   66:C Event numbers:
   67:      include "events.ins" <== including file 'fp/events.ins'
   68:#endif
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   66:C Event numbers:
   67:      include "events.ins"
   68:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   90:      double complex  s(nlms,nlms,0:k0,nkap0,nkap0)
   91:      double complex ds(nlms,nlms,0:k0,3,nkap0,nkap0),ccc,sum
   92:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
   95:      integer, dimension(:,:), allocatable :: index
   96:      integer iloop,ib
   97:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  105:      call tcn ('fsmbl')
  106:
  107:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  123:        enddo
  124:      endif
  125:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  139:
  140:C --- Loop over first and second site indices ---
  141:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  140:C --- Loop over first and second site indices ---
  141:#if MPI
  142:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  142:#if MPE
  143:      ierr = MPE_LOG_EVENT(EVENT_START_FSMBL,procid,"fsmbl")
  144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  147:c      do  iloop = 1, index(procid,0)
  148:      iloopend=index(procid,0)
  149:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  149:#else
  150:      iloopend=nbas
  151:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  153:
  154:      do  iloop = 1, iloopend
  155:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  162:     .        procid,numprocs,ib1,index(procid,0))
  163:        endif
  164:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  164:#else
  165:        ib1=iloop
  166:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  243:                do  iq = 1, numq
  244:                  wt = ewgt(iq,ivec)
  245:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  246:                  xf(m,ib1,iq) = xf(m,ib1,iq) - 2*wt*sum
  247:                  xf(m,ib2,iq) = xf(m,ib2,iq) + 2*wt*sum
  248:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  249:                  f(m,ib1,iq) = f(m,ib1,iq) - 2*wt*sum
  250:                  f(m,ib2,iq) = f(m,ib2,iq) + 2*wt*sum
  251:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  262:      enddo
  263:
  264:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  263:
  264:#if MPI
  265:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  266:      ierr = MPE_LOG_EVENT(EVENT_END_FSMBL,procid,"fsmbl")
  267:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  268:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  268:#endif
  269:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  270:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  271:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  272:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  273:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  284:      call daxpy(3*nbas*numq,1d0,buffer,1,f,1)
  285:      deallocate(buffer, stat=ierr)
  286:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  286:#if MPE
  287:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  288:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbl.F' (mode='fix')..
  288:#endif
  289:      deallocate(index, stat=ierr)
  290:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   43:C     implicit none
   44:C ... Passed parameters
   45:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   44:C ... Passed parameters
   45:#if MPI
   46:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   47:#if MPE
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   45:#if MPI
   46:      include "mpif.h"
   47:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   46:      include "mpif.h"
   47:#if MPE
   48:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   49:#endif
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   47:#if MPE
   48:      include "mpef.h"
   49:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   61:      logical mlog,cmdopt
   62:      character*120 strn
   63:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   62:      character*120 strn
   63:#endif
   64:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/fsmbpw.F' (mode='fix')..
   63:#endif
   64:#if MPE
   65:C Event numbers:
   66:      include "events.ins" <== including file 'fp/events.ins'
   67:#endif
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   65:C Event numbers:
   66:      include "events.ins"
   67:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   86:      double complex phase,srm1,fach,ovl,ccc(3),sum,srm1l(0:n0)
   87:      parameter (srm1=(0d0,1d0))
   88:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
   91:      integer, dimension(:,:), allocatable :: index
   92:      integer iloop,ib
   93:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  101:      call tcn ('fsmbpw')
  102:
  103:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  119:        enddo
  120:      endif
  121:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  131:
  132:C --- Loop over first and second site indices ---
  133:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  132:C --- Loop over first and second site indices ---
  133:#if MPI
  134:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  134:#if MPE
  135:      ierr = MPE_LOG_EVENT(EVENT_START_FSMBPW,procid,"fsmbpw")
  136:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  140:      ibini=1
  141:      ibend=index(procid,0)
  142:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  144:      ibini=1
  145:      ibend=nbas
  146:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  147:
  148:      do iloop = ibini,ibend
  149:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  156:     .        procid,numprocs,ib1,index(procid,0))
  157:        endif
  158:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  158:#else
  159:        ib1=iloop
  160:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  210:              do  iq = 1, numq
  211:                wt = ewgt(iq,ivec)
  212:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  212:#if MPI
  213:                      xf(m,ib1,iq) = xf(m,ib1,iq) - 2*wt*sum
  214:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  214:#else
  215:                      f(m,ib1,iq) = f(m,ib1,iq) - 2*wt*sum
  216:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  224:        enddo                   !ig
  225:      enddo                     !ib1
  226:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  225:      enddo                     !ib1
  226:#if MPI
  227:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  228:      ierr = MPE_LOG_EVENT(EVENT_END_FSMBPW,procid,"fsmbpw")
  229:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  230:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  230:#endif
  231:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  232:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  233:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  234:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  235:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  246:      call daxpy(3*nbas*numq,1d0,buffer,1,f,1)
  247:      deallocate(buffer, stat=ierr)
  248:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  248:#if MPE
  249:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  250:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/fsmbpw.F' (mode='fix')..
  251:      deallocate(index, stat=ierr)
  252:      deallocate(xf, stat=ierr)
  253:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  219:     .  qm(nf1*nf2*(lmx1+1)*(lmx2+1)*(lmxl+1)),
  220:     .  sum((lmx1+1)*(lmx2+1)*nlml)
  221:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  221:#if F90
  222:      complex(8),allocatable:: hso(:,:,:,:,:,:),ppiz(:,:,:,:,:,:)
  223:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  224:      double complex hso(nf1,nf2,nlx1,nlx2,2,2)
  225:      double complex ppiz(nf1,nf2,nlx1,nlx2,2,2)
  226:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  225:      double complex ppiz(nf1,nf2,nlx1,nlx2,2,2)
  226:#endif
  227:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  231:      data kount /0/
  232:      kount = kount + 1
  233:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  238:      nspc = nglob('nspc')
  239:
  240:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  240:#if F90
  241:      allocate(hso(nf1,nf2,nlx1,nlx2,2,2),ppiz(nf1,nf2,nlx1,nlx2,2,2))
  242:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  333:C     stdo = 88
  334:
  335:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  338:      i1 = fopna('ppi',-1,4)
  339:      write(i1) ppi
  340:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  408:C     pause
  409:
  410:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gaugm.F' (mode='fix')..
  410:#if F90
  411:      deallocate(hso,ppiz)
  412:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   43:     .  icg,lm,ip,nlmxx
   44:      double precision dr(3),gamh,gamg,rsmx,cz,cx1,cx2,cy1,cy2,fac
   45:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   45:#if F90
   46:      complex(8),allocatable:: hkl(:,:),ghkl(:,:,:)
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   48:      parameter (nlm0=196, ktop0=7)
   49:      double complex hkl(0:ktop0,nlm0),ghkl(0:ktop0,nlm0,3)
   50:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   65:
   66:C     Memory allocation
   67:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
   69:      ktop0 = ktopp1
   70:      allocate(hkl(0:ktop0,nlm0),ghkl(0:ktop0,nlm0,3))
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
  125:   11 continue
  126:
  127:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gfigbl.F' (mode='fix')..
  127:#if F90
  128:      deallocate(hkl,ghkl)
  129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   43:      integer nlm0,ktop0,icg,icg1,icg2,ii,ilg,ilh,ilm,indx,ip,jlm,k,
   44:     .  ktop,lg,lh,ll,lm,lmaxg,lmaxh,lmaxx,m,nlmx,l1,l2,ilm1,ilm2
   45:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   45:#if F90
   46:      complex(8),allocatable:: hkl(:,:)
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   48:      parameter (nlm0=144, ktop0=21)
   49:      double complex hkl(0:ktop0,nlm0)
   50:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   62:      ktop = max0(lmaxg,lmaxh)+kmax
   63:
   64:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   66:      nlm0  = nlmx
   67:      allocate( hkl(0:ktop0,nlm0))
   68:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
   69:      if (nlmx .gt. nlm0)  call rxi('ghibl: increase nlm0 to',nlmx)
   70:      if (ktop .gt. ktop0) call rxi('ghibl: increase ktop0 to',ktop)
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
  113:   20   continue
  114:
  115:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghibl.F' (mode='fix')..
  115:#if F90
  116:        deallocate(hkl)
  117:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   46:     .  ktop0,l1,l2,lg,lh,ll,lm,lmaxg,lmaxh,lmaxx,m,nlm0,nlmx
   47:      double precision ee,fac,gamg,gamh,rsmx,dr(3),e,rsm
   48:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   48:#if F90
   49:      complex(8),allocatable:: hkl(:,:),dhkl(:,:,:)
   50:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   51:      parameter (nlm0=144, ktop0=20)
   52:      double complex hkl(0:ktop0,nlm0),dhkl(0:ktop0,nlm0,3)
   53:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   64:      ktop = max0(lmaxg,lmaxh)+kmax
   65:
   66:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   68:      nlm0  = (lmaxx+2)**2
   69:      allocate( hkl(0:ktop0,nlm0),dhkl(0:ktop0,nlm0,3))
   70:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
   71:      if (nlmx .gt. nlm0)  call rxi('ghigbl: increase nlm0 to',nlmx)
   72:      if (ktop .gt. ktop0) call rxi('ghigbl: increase ktop0 to',ktop)
   73:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
  124:   20 continue
  125:
  126:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ghigbl.F' (mode='fix')..
  126:#if F90
  127:      deallocate(hkl,dhkl)
  128:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
    1:Cgetarg...info...           structure ['gklbl', 'lat', 'slat']
    2:Cgetarg...info...           use_to_add ['gklbl', 'm_struc_def']
    3:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   35:      integer ilm,k,ll,lmax,nkd,nkq,odlv,oqlv,owk,l,m
   36:      double precision alat,awald,pi,sp,vol,plat(9),qlat(9),p1(3),rwald
   37:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   37:#if F90
   38:      real(8),allocatable:: wk(:)
   39:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   86:        call gklblq(p1,rsm,q,kmax,nlm,k0,alat,w(oqlv),nkq,vol,gkl)
   87:      else
   88:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   90:        call gklbld(p1,rsm,q,kmax,nlm,k0,alat,w(odlv),nkd,wk,gkl)
   91:        deallocate(wk)
   92:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/gklbl.F' (mode='fix')..
   94:        call gklbld(p1,rsm,q,kmax,nlm,k0,alat,w(odlv),nkd,w(owk),gkl)
   95:        call rlse(owk)
   96:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
    4:Cgetarg...info...           use_to_add ['blsig', 'm_struc_def']
    5:Cgetarg...info...           use_to_add ['hambls', 'm_struc_def']
    6:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  774:      endif
  775:
  776:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  779:      allocate(zqi(ndimh,ndimh))
  780:      allocate(z0(ndimh,ndimh))
  781:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  781:#else
  782:      if (nsim .gt. 1) call rx('compile hambls with F90 option')
  783:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  838:      enddo
  839:
  840:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  840:#if F90
  841:      deallocate(hqi,sqi,zqi,z0)
  842:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  926:      double precision eterms(20),rhosig,swgt
  927:      equivalence (eterms(19),rhosig)
  928:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  928:#if F90
  929:      complex(8),allocatable:: wk(:,:,:,:)
  930:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  930:#else
  931:      double complex wk(ndimh,nspc,ndimh,nspc)
  932:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  966:      ndimhx = ndimh*nspc
  967:
  968:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
  968:#if F90
  969:      allocate(wk(ndimh,nspc,ndimh,nspc))
  970:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1044:      endif
 1045:
 1046:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1046:#if F90
 1047:        deallocate(wk)
 1048:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1211:      parameter (zer=(0d0,0d0),one=(1d0,0d0))
 1212:      integer i,j,k
 1213:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1213:#if F90
 1214:      integer ipiv(ndimh)
 1215:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1215:#elif AUTO_ARRAY
 1216:      integer ipiv(ndimh)
 1217:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hambls.F' (mode='fix')..
 1218:      integer ipiv
 1219:      call rx('phmbls: requires compiler with allocatable arrays')
 1220:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
    1:Cgetarg...info...           structure ['hklbl', 'lat', 'slat']
    2:Cgetarg...info...           use_to_add ['hklbl', 'm_struc_def']
    3:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   45:      common /w/ w
   46:
   47:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
   47:#if F90
   48:      real(8),allocatable:: wk(:),yl(:)
   49:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
  100:
  101:      nrx = max(nkd,nkq)
  102:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
  114:      endif
  115:      deallocate(wk,yl)
  116:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hklbl.F' (mode='fix')..
  127:      endif
  128:      call rlse(owk)
  129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
    3:Cgetarg...info...           structure ['hsibl', 'spec', 'sspec']
    4:Cgetarg...info...           use_to_add ['hsibl', 'm_struc_def']
    5:#define SGI 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   60:C ----------------------------------------------------------------------
   61:      implicit none
   62:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   61:      implicit none
   62:#if MPI
   63:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   62:#if MPI
   63:#if MPE
   64:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   65:#endif
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   63:#if MPE
   64:      include "mpef.h"
   65:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   64:      include "mpef.h"
   65:#endif
   66:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   67:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   78:      integer lgunit
   79:      character*120 strn
   80:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   79:      character*120 strn
   80:#endif
   81:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/hsibl.F' (mode='fix')..
   80:#endif
   81:#if MPE
   82:C Event numbers:
   83:      include "events.ins" <== including file 'fp/events.ins'
   84:#endif
WARNING while processing 'fp/hsibl.F' (mode='fix')..
   82:C Event numbers:
   83:      include "events.ins"
   84:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  121:      integer ig1,i1,ig2,i2,igx(3),igx1,igx2,igx3,oiv1
  122:C$    integer mp_numthreads,mp_my_threadnum
  123:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  124:      double precision, dimension(:), allocatable :: buffer
  125:      integer, dimension(:,:), allocatable :: index
  126:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  135:      call tcn('hsibl')
  136:
  137:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  143:      master = 0
  144:      mlog = cmdopt('--mlog',6,0,strn)
  145:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  218:C$    if (mp .gt. npmx) call rxi('hsibl: increase npmx, needed',mp)
  219:      do  ip = 1, min(mp,nbas)
  220:#if SGI | MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  221:        call defcc(oic1(ip),   ng*ndimx)
  222:        call defcc(oicf1(ip),  nhblk*ndimx)
  223:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  224:        call defcc(oic1(ip),   ng*nhblk)
  225:        call defcc(oicf1(ip),  nhblk)
  226:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  244:C$&       SHARED(nbas,n1,n2,n3,k1,k2,k3,ng,vol,ndimh,oiv)
  245:C$&       MP_SCHEDTYPE=RUNTIME
  246:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  245:C$&       MP_SCHEDTYPE=RUNTIME
  246:#if MPI
  247:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  247:#if MPE
  248:      ierr = MPE_LOG_EVENT(EVENT_START_HSIBL,procid,"hsibl")
  249:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  255:      ibini=1
  256:      ibend=index(procid,0)
  257:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  259:      ibini=1
  260:      ibend=nbas
  261:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  262:
  263:      do  iloop = ibini,ibend
  264:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  271:     .        procid,numprocs,ib1,index(procid,0))
  272:        endif
  273:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  273:#else
  274:        ib1=iloop
  275:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  380:
  381:C     ... Add to hamiltonian
  382:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  383:          call hsibl5(norb1,blks1,offl1,ndim1,norb2,blks2,offl2,ndim2,
  384:     .                ndimh,w(owk2),w(oh))
  385:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  387:          call hsibl5(norb1,blks1,offl1,ndim1,norb2,blks2,offl2,ndim2,
  388:     .                ndimh,w(owk2),h)
  389:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  394:
  395:C   ... Matrix elements <Hsm| Vsm |PW>
  396:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  397:        call hsibl6(ndimh,nlmto,norb1,blks1,offl1,ng,w(oiv),napw,igapw,
  398:     .  w(oc1),w(ocf1),w(oh))
  399:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  400:        call hsibl6(ndimh,nlmto,norb1,blks1,offl1,ng,w(oiv),napw,igapw,
  401:     .  w(oc1),w(ocf1),h)
  402:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  405:      enddo
  406:
  407:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  406:
  407:#if MPI
  408:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  409:      ierr = MPE_LOG_EVENT(EVENT_END_HSIBL,procid,"hsibl")
  410:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  411:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  411:#endif
  412:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  413:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  414:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  415:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  416:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  428:      call rlse(oh)
  429:      deallocate(index, stat=ierr)
  430:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  430:#if MPE
  431:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  432:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  431:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  432:#endif
  433:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  557:      integer i,i1,i2,ncut
  558:      double complex csum
  559:#if NBAR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  561:      double precision xx
  562:      double complex wk(n1,n2)
  563:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  562:      double complex wk(n1,n2)
  563:#endif
  564:#if CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  564:#if CRAY
  565:      double complex wk(n1)
  566:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  568:      call tcn('hsibl2')
  569:
  570:#if NBAR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  595:        enddo
  596:      enddo
  597:#elif CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  611:        enddo
  612:      enddo
  613:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hsibl.F' (mode='fix')..
  623:        enddo
  624:      enddo
  625:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   50:      integer ndim1,ndim2,ktop0,ilmg,ilmh,k,l,ll,lmaxg,m,nm
   51:      double precision a,dfact,eg,fac,factk,fpi
   52:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   52:#if F90
   53:      complex(8),allocatable:: s(:,:,:)
   54:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   55:      parameter (ndim1=49, ndim2=36, ktop0=20)
   56:      double complex s(ndim1,ndim2,0:ktop0)
   57:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   60:      fpi = 16d0*datan(1d0)
   61:C     Memory allocation
   62:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   65:      ktop0 = kmax
   66:      allocate(s(ndim1,ndim2,0:ktop0))
   67:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
   99:  1   continue
  100:
  101:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpbl.F' (mode='fix')..
  101:#if F90
  102:      deallocate(s)
  103:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   49:      integer ndim1,ndim2,ktop0,ilmg,ilmh,k,l,ll,lmaxg,m,nm
   50:      double precision a,dfact,eg,fac,factk,fpi
   51:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   51:#if F90
   52:      complex(8),allocatable:: s(:,:,:),ds(:,:,:,:)
   53:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   54:      parameter (ndim1=49, ndim2=36, ktop0=20)
   55:      double complex s(ndim1,ndim2,0:ktop0),ds(ndim1,ndim2,0:ktop0,3)
   56:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   59:      fpi = 16d0*datan(1d0)
   60:C     Memory allocation
   61:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   64:      ktop0 = kmax
   65:      allocate(s(ndim1,ndim2,0:ktop0),ds(ndim1,ndim2,0:ktop0,3))
   66:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
   99:  1   continue
  100:
  101:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpgbl.F' (mode='fix')..
  101:#if F90
  102:      deallocate(s,ds)
  103:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   35:      integer ndim,ktop0,ilm,k,l,ll,lmax,m,nm
   36:      double precision a,dfact,eg,fac,factk,fpi,sig
   37:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   37:#if F90
   38:      real(8),allocatable:: s(:,:)
   39:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   40:      parameter ( ndim=25, ktop0=25 )
   41:      double precision s(ndim,0:ktop0)
   42:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   45:      fpi = 16d0*datan(1d0)
   46:
   47:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   49:      ndim  = nlmh
   50:      allocate(s(ndim,0:ktop0))
   51:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   52:      if (kmax .gt. ktop0) call rxi('hxpos: increase ktop0, need',kmax)
   53:      if (nlmh .gt. ndim)   call rxi('hxpos: increase ndim, need', nlmh)
   54:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   84:      enddo
   85:
   86:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/hxpos.F' (mode='fix')..
   86:#if F90
   87:      deallocate(s)
   88:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  158:      real(8):: pnu(20),bz_w
  159:      logical :: llmfgw
  160:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  160:#if MPI
  161:      integer:: ierr
  162:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  163:#endif
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  161:      integer:: ierr
  162:      include "mpif.h"
  163:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  197:      mlog = cmdopt('--mlog',6,0,strn)
  198:ckino. Mark says nproc <= nbas should be for MPI.
  199:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/lmfp.F' (mode='fix')..
  220:c             ---------- may be stop is unnecessary.
  221:      endif
  222:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
    3:Cgetarg...info...           structure ['locpot', 'lat', 'slat']
    4:Cgetarg...info...           use_to_add ['locpot', 'm_struc_def']
    5:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  163:      integer kcor,lcor
  164:      double precision qcor(2),qc0,qsc0
  165:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  166:      real(8),allocatable:: wk(:),rhol1(:),rhol2(:),
  167:     .  v1(:),v2(:),v1es(:),v2es(:),efg(:,:),zz(:)
  168:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  173:     .  v2(nrmx*nlmx*2),v1es(nrmx*nlmx*2),v2es(nrmx*nlmx*2),
  174:     .  efg(5,nbasx),zz(nbasx)
  175:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  191:      y0 = 1d0/srfpi
  192:      nkaph = nglob('nkaph')
  193:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  195:      allocate(wk(k),rhol1(k),rhol2(k),v1(k),v2(k),v1es(k),v2es(k))
  196:      allocate(efg(5,nbas),zz(nbas))
  197:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  480:        call elfigr(nbas,stdo,zz,efg)
  481:      endif
  482:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  483:      deallocate(efg,zz)
  484:      deallocate(wk,rhol1,rhol2,v1,v2,v1es,v2es)
  485:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  646:     .  vesn1,vesn2,vnucl,vsum,vtr,y0,ddot,a1,a2,smrhoc
  647:      double precision qs(2)
  648:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  648:#if F90
  649:      real(8), allocatable :: fl(:,:,:)
  650:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  650:#elif AUTO_ARRAY
  651:      double precision fl(nr,nlml,nsp+1)
  652:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  663:      rvvxc = 0
  664:      alocc = 0
  665:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
  669:        allocate (fl(1,1,1))
  670:      endif
  671:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
 1010:      endif
 1011:
 1012:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/locpot.F' (mode='fix')..
 1012:#if F90
 1013:      deallocate (fl)
 1014:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/makusp.F' (mode='fix')..
  112:
  113:C   ... Scale gz so that <|gz-P(g,gp)|^2> = 1
  114:#if SCALEGZ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/makusp.F' (mode='fix')..
  120:          dphz = dphz/D
  121:        endif
  122:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  183:C     implicit none
  184:C ... Passed parameters
  185:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  184:C ... Passed parameters
  185:#if MPI | MPIK
  186:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  187:      integer numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  198:      character*120 strn
  199:      logical mlog,cmdopt
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  273:
  274:
  275:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  281:      master = 0
  282:      mlog = cmdopt('--mlog',6,0,strn)
  283:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  284:      procid = 0
  285:      master = 0
  286:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  621:        rewind ifi
  622:      endif
  623:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
  630:     .      256,lgunit(3),procid,numprocs,ifi)
  631:      endif
  632:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1317:C     implicit none
 1318:C ... Passed parameters
 1319:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1318:C ... Passed parameters
 1319:#if MPI | MPIK
 1320:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
 1321:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1333:      integer iunit
 1334:      logical readerror
 1335:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1358:      common /w/ w
 1359:
 1360:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1366:      master = 0
 1367:      mlog = cmdopt('--mlog',6,0,strn)
 1368:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1532:C   ... File I/O of previous iterations; nmixr is number actually read
 1533:        nmixr = 0
 1534:#if ! (MPI | MPIK) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1553:   30   continue
 1554:   31   continue
 1555:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1627:        endif
 1628:   31   continue
 1629:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1642:C --- Save iterations on disk ---
 1643:      else
 1644:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1644:#if MPI | MPIK
 1645:        if (procid .eq. master) then
 1646:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1658:        enddo
 1659:C       call prm('a after write',a,nda*nsp,nda*nsp,(mxsav+2)*2)
 1660:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mixrho.F' (mode='fix')..
 1660:#if MPI | MPIK
 1661:        endif
 1662:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  172:      integer w(1)
  173:      common /w/ w
  174:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  174:#if DEBUG
  175:      integer fopna
  176:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  202:
  203:C     call zprm3('sm rho-out',0,smrho,k1,k2,k3*nsp)
  204:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  206:      is = fopna('ppi',-1,4)
  207:      rewind is
  208:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  351:      endif
  352:
  353:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mkekin.F' (mode='fix')..
  358:      read (i) ppipp
  359:      read (i) ppihp
  360:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
    7:Cgetarg...info...           use_to_add ['mshvmt', 'm_struc_def']
    8:Cgetarg...info...           use_to_add ['symvvl', 'm_struc_def']
    9:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   69:      equivalence (n1,ngabc(1)),(n2,ngabc(2)),(n3,ngabc(3))
   70:      parameter (lmxx=6, nlmx=(lmxx+1)**2)
   71:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   72:      double precision,allocatable:: phil(:,:),yl(:,:)
   73:      double precision,allocatable:: gv2(:,:),agv(:),cgp(:),sgp(:)
   74:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   75:      double precision phil(ng,0:lmxx),yl(ng,nlmx)
   76:      double precision gv2(ng,3),agv(ng),cgp(ng),sgp(ng)
   77:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   78:
   79:      call tcn('mshvmt')
   80:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
   81:      allocate(phil(ng,0:lmxx),yl(ng,nlmx))
   82:      allocate(gv2(ng,3),agv(ng),cgp(ng),sgp(ng))
   83:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
  183:   10   continue
  184:      enddo
  185:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mshvmt.F' (mode='fix')..
  186:      deallocate(phil,yl)
  187:      deallocate(gv2,agv,cgp,sgp)
  188:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
    2:Cgetarg...info...           structure ['mullmf', 'spec', 'sspec']
    3:Cgetarg...info...           use_to_add ['mullmf', 'm_struc_def']
    4:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   62:      integer io,ikap,l,nlm1,nlm2,ilm,jlm,i,j,norb
   63:      double precision xx
   64:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   66:      complex(8),allocatable:: zt(:,:,:),work(:,:,:)
   67:      allocate(zt(n*nspc,n,nspc),work(n*nspc,n,nspc))
   68:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   69:      integer ipiv(n*nspc)
   70:      double complex zt(n*nspc,n,nspc),work(n*nspc,n,nspc)
   71:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
   73:      double complex zt(1,1,1),work(1,1,1)
   74:      call rx('mullmf only implemented for automatic arrays')
   75:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
  185:C      enddo
  186:
  187:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/mullmf.F' (mode='fix')..
  187:#if F90
  188:      deallocate(zt,work)
  189:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   53:      double complex b((ktop0+1),nlmx)
   54:
   55:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   61:      character strn*120
   62:C     double precision dval
   63:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   72:      stdo = lgunit(1)
   73:      nsp  = nglob('nsp')
   74:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   77:      master = 0
   78:      mlog = cmdopt('--mlog',6,0,strn)
   79:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
   93:      sqloc = 0
   94:      slmom = 0
   95:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  102:C$&        REDUCTION(sqloc,slmom)
  103:C$&        MP_SCHEDTYPE=RUNTIME
  104:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  103:C$&        MP_SCHEDTYPE=RUNTIME
  104:#endif
  105:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  115:      ibini= ibproc(procid)
  116:      ibend= ibproc(procid+1)-1
  117:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  123:      ibini= 1
  124:      ibend= nbas
  125:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  201:      enddo
  202:
  203:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlocr.F' (mode='fix')..
  247:      deallocate(ibproc, stat=ierr)
  248:C     call rx0('done')
  249:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   52:      double complex phase
   53:      equivalence (px,pos(1)),(py,pos(2)),(pz,pos(3))
   54:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   59:      logical mlog,cmdopt
   60:      character strn*120
   61:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   77:      tpiba = 2*pi/alat
   78:      call dpzero(cv,2*ng*nsp)
   79:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   82:      master = 0
   83:      mlog = cmdopt('--mlog',6,0,strn)
   84:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   88:      sum(2) = 0d0
   89:      call info0(31,1,0,' ovlpfa: overlap smooth part of FA densities')
   90:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
   97:      ibini = kpproc(procid)
   98:      ibend = kpproc(procid+1)-1
   99:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
  101:      ibini=1
  102:      ibend=nbas
  103:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
  153:
  154:C ... Combine cv from separate threads
  155:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ovlpfa.F' (mode='fix')..
  161:C     call ywrm(0,'cv',3,ifi,'(9f20.10)',cv,1,ng,ng,1)
  162:C     call rx0('done')
  163:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  333:
  334:C   ... Scale gz so that <|gz-P(g,gp)|^2> = 1
  335:#if SCALEGZ <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  353:
  354:      endif
  355:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  410:
  411:C --- Rescale gp parameters and normalization of gp ---
  412:#if ORTHPHD <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/potpus.F' (mode='fix')..
  422:       p = 1
  423:      endif
  424:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/prtev.F' (mode='fix')..
   29:        write(stdo,103) (evl(i), i=1,j)
   30:  103   format(9f8.4)
   31:#ifndef MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/prtev.F' (mode='fix')..
   35:     .    '= %1;5g',' ',80,stdo,nev,nmx,n,evl(nev),emx)
   36:        call ftflsh(stdo)
   37:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
   39:Cu   25 Apr 04 (K. Beleshenko) workaround scalapack bug
   40:C ----------------------------------------------------------------------
   41:#if MPI & BLACS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
   41:#if MPI & BLACS
   42:      implicit none
   43:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   44:      integer procid, master, numprocs, ierr
WARNING while processing 'fp/pzhev.F' (mode='fix')..
  308:C      call blacs_gridexit(context)
  309:C      call blacs_exit(1)
  310:#if SUN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
  310:#if SUN
  311:      call ieee_flags( 'clear', 'exception', 'underflow', '')
  312:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
  311:      call ieee_flags( 'clear', 'exception', 'underflow', '')
  312:#endif
  313:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
  316:       end subroutine pzhev
  317:
  318:#if MPI & BLACS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/pzhev.F' (mode='fix')..
  351:       end subroutine udstmt
  352:
  353:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  122:  220   format(9x,i4,i6,f12.6,10f12.6)
  123:  221   format(/' rhogkl:    k   ilm      qkl (2l+1)!! ...')
  124:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  128:     .    w(orhoat(2,ib)),w(orhoat(3,ib)),qkl(0,j1))
  129:        endif
  130:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  297:       end subroutine pvrgkl
  298:
  299:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rhogkl.F' (mode='fix')..
  346:       end subroutine prtrkl
  347:
  348:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
    3:Cgetarg...info...           structure ['rlocbl', 'spec', 'sspec']
    4:Cgetarg...info...           use_to_add ['rlocbl', 'm_struc_def']
    5:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   95:C     implicit none
   96:C ... Passed parameters
   97:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   96:C ... Passed parameters
   97:#if MPI
   98:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   99:#if MPE
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   97:#if MPI
   98:      include "mpif.h"
   99:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   98:      include "mpif.h"
   99:#if MPE
  100:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  101:#endif
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
   99:#if MPE
  100:      include "mpef.h"
  101:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  113:      character*120 strn
  114:      logical mlog,cmdopt
  115:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  114:      logical mlog,cmdopt
  115:#endif
  116:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/rlocbl.F' (mode='fix')..
  115:#endif
  116:#if MPE
  117:C Event numbers:
  118:      include "events.ins" <== including file 'fp/events.ins'
  119:#endif
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  117:C Event numbers:
  118:      include "events.ins"
  119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  130:      double complex evec(ndimh,nspc,nevec)
  131:C ... Local parameters or process-shared variables
  132:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  134:      integer, dimension(:), allocatable :: bproc
  135:      integer nelt(3),lgunit,lmxh,nlmh,nsp,i
  136:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  148:     .  oqhh,oqhp,oqpp,oeqhh,oeqhp,oeqpp
  149:      double precision pa(3),rsma,pi,tpiba
  150:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  150:#if F90
  151:      complex(8),allocatable:: cPkL(:),da(:),wk(:)
  152:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  160:      integer lh(nkap0),ltab(n0*nkap0),ktab(n0*nkap0),offl(n0*nkap0)
  161:      double precision eh(n0,nkap0),rsmh(n0,nkap0)
  162:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  167:      integer:: iaini,iaend
  168:
  169:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  184:        enddo
  185:      endif
  186:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  234:      tpiba = 2d0*pi/alat
  235:
  236:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  243:C     .  b0((ktop0+1)*nlmx*nlmbx),db0((ktop0+1)*nlmx*nlmbx*3),
  244:C     .  wk((ktop0+1)*nlmx),bos((ktop0+1)*nlmbx))
  245:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  245:#else
  246:      if (napw .gt. 0) call rx('rlocbl: PWs require F90 compiler')
  247:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  259:
  260:C --- Loop over augmentation sites ---
  261:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  260:C --- Loop over augmentation sites ---
  261:#if MPI
  262:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  262:#if MPE
  263:      ierr = MPE_LOG_EVENT(EVENT_START_RLOCBL,procid,"rlocbl")
  264:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  268:      iaini=bproc(procid)
  269:      iaend=bproc(procid+1)-1
  270:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  271:      iaini=1
  272:      iaend=nbas
  273:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  273:#endif
  274:      do ia = iaini,iaend
  275:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  281:     .        procid,numprocs,bproc(procid),bproc(procid+1)-1)
  282:        endif
  283:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  324:        oxf = oixf(ip)
  325:
  326:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  328:     .    iprmb,nbas,ia,pa,rsma,q,kmax,nlma,ndimh,napw,igvapw,w(ob),
  329:     .    w(odb))
  330:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  370:          enddo
  371:        enddo
  372:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  432:C ... end loop over ia
  433:      enddo
  434:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  433:      enddo
  434:#if MPI
  435:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  436:      ierr = MPE_LOG_EVENT(EVENT_END_RLOCBL,procid,"rlocbl")
  437:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  438:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  438:#endif
  439:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  440:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  441:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  442:      ierr = MPE_LOG_EVENT(EVENT_START_BCAST,procid,"broadcast")
  443:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  506:      endif
  507:      deallocate(bproc, stat=ierr)
  508:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  508:#if MPE
  509:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  510:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  509:      ierr = MPE_LOG_EVENT(EVENT_END_BCAST,procid,"broadcast")
  510:#endif
  511:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  515:        enddo
  516:      endif
  517:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  517:#endif
  518:
  519:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rlocbl.F' (mode='fix')..
  519:#if F90
  520:      deallocate(cPkL,da,wk)
  521:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
    4:Cgetarg...info...           use_to_add ['rsibl', 'm_struc_def']
    5:Cgetarg...info...           use_to_add ['rsibl1', 'm_struc_def']
    6:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   71:C     implicit none
   72:C ... Passed parameters
   73:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   72:C ... Passed parameters
   73:#if MPI
   74:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   75:#if MPE
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   73:#if MPI
   74:      include "mpif.h"
   75:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   74:      include "mpif.h"
   75:#if MPE
   76:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   77:#endif
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   75:#if MPE
   76:      include "mpef.h"
   77:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   89:      integer lgunit
   90:      character*120 strn
   91:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   90:      character*120 strn
   91:#endif
   92:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/rsibl.F' (mode='fix')..
   91:#endif
   92:#if MPE
   93:C Event numbers:
   94:      include "events.ins" <== including file 'fp/events.ins'
   95:#endif
WARNING while processing 'fp/rsibl.F' (mode='fix')..
   93:C Event numbers:
   94:      include "events.ins"
   95:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  119:      integer ivec,nvec
  120:C     Local for parallel threads
  121:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  124:     .  wk(:,:,:)
  125:      real(8),allocatable:: cosi(:),sini(:),wk2(:)
  126:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  127:      integer ivp(napw)
  128:      integer ocos,of,opsi,osin,ovpsi,opsi0,owk2
  129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  129:#endif
  130:
  131:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  135:      complex(8),allocatable:: xsmrho(:,:,:,:,:)
  136:      real(8),allocatable:: fr(:,:,:)
  137:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  137:#endif
  138:
  139:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  140:      complex(8),allocatable:: xsmrho(:,:,:,:,:)
  141:      real(8),allocatable:: fr(:,:,:)
  142:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  151:      nproc  = mpipid(0)
  152:      procid = mpipid(1)
  153:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  157:      master = 0
  158:      mlog = cmdopt('--mlog',6,0,strn)
  159:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  213:C     For PW basis ... for now.
  214:      if (napw .gt. 0) then
  215:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  215:#if F90
  216:        allocate(ivp(napw))
  217:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  218:        call gvgvcomp(ng,w(oiv),napw,igapw,ivp)
  219:      else
  220:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  220:#if F90
  221:        allocate(ivp(1))
  222:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  244:C     call defi(oiv,  ng*3)
  245:C     call suphs0(plat,ng,w(ogv),w(oiv))
  246:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  257:    1   format (3x,i3,3x,i5)
  258:      endif
  259:#elif OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  262:        nblk = max(min(16,nevec/nproc),4)
  263:      endif
  264:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  264:#else
  265:      nblk = 16
  266:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  267:
  268:C  --- Loop over eigenstates ---
  269:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  271:      allocate(psi(ng,nspc,nblk),vpsi(ng,nspc,nblk),wk(ng,nspc,nblk))
  272:      allocate(psir(k1,k2,k3),cosi(ng),sini(ng),wk2(ng))
  273:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  275:      call dpzero(xsmrho,k1*k2*k3*numq*nspc*2)
  276:      call dpzero(fr,3*nbas*numq)
  277:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  276:      call dpzero(fr,3*nbas*numq)
  277:#endif
  278:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  284:      call defcc(ovpsi, ng*nspc*nblk)
  285:      call defcc(of,    k1*k2*k3)
  286:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  287:
  288:
  289:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  288:
  289:#if MPI
  290:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  290:#if MPE
  291:      ierr = MPE_LOG_EVENT(EVENT_START_RSIBL,procid,"rsibl")
  292:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  300:      ivecini= vproc(procid)
  301:      ivecend= vproc(procid+1)-1
  302:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  306:      ivecini= 1
  307:      ivecend= nevec
  308:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  310:
  311:      do  ivec = ivecini,ivecend, nblk
  312:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  323:     .        ',ivec=%i,nvec=%i',' ',256,lgunit(3),procid,vproc(procid),
  324:     .        vproc(procid+1)-1,ivec,nvec)
  325:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  325:#else
  326:        nvec = min(nblk, nevec-ivec+1)
  327:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  328:
  329:
  330:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  338:
  339:C   ... Add to real-space mesh, optionally make smpot*psi for forces
  340:#if MPI | OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  341:        call rsibl2(ng,nspc,nvec,psi,n1,n2,n3,k1,k2,k3,w(okv),numq,
  342:     .    ewgt(1,ivec),lfrce,smpot(1,1,1,isp),psir,xsmrho,vpsi)
  343:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  345:     .    ewgt(1,ivec),lfrce,smpot(1,1,1,isp),psir,smrho(1,1,1,1,isp),
  346:     .    vpsi)
  347:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  349:C    --- Add to forces ---
  350:        if (lfrce .ne. 0) then
  351:#if MPI | OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  354:     .       wk,wk2,vol,iprt,ipet,etab,rtab,ndimh,nlmto,nspc,
  355:     .       numq,ewgt,ivec,nvec,evec,vpsi,psi,fr)
  356:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  359:     .       wk,wk2,vol,iprt,ipet,etab,rtab,ndimh,nlmto,nspc,
  360:     .       numq,ewgt,ivec,nvec,evec,vpsi,psi,f)
  361:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  362:        endif
  363:
  364:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  383:     .       numq,ewgt,ivec,nvec,evec,w(ovpsi),w(opsi),f)
  384:        endif
  385:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  387:      enddo
  388:C$OMP END DO
  389:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  389:#if F90
  390:      deallocate(psi,vpsi,wk,psir,cosi,sini,wk2)
  391:#if OPENMP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  394:      deallocate(xsmrho)
  395:      if (allocated(fr)) deallocate(fr)
  396:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  396:#endif
  397:C$OMP END PARALLEL
  398:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  397:C$OMP END PARALLEL
  398:#else
  399:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  399:#endif
  400:
  401:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  400:
  401:#if MPI
  402:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  403:      ierr = MPE_LOG_EVENT(EVENT_END_RSIBL,procid,"rsibl")
  404:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  405:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  405:#endif
  406:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  407:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  408:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  409:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  410:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  442:C
  443:      deallocate(vproc, stat=ierr)
  444:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  444:#if MPE
  445:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  446:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  445:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  446:#endif
  447:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  447:#endif
  448:      call rlse(ogv)
  449:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  449:#if F90
  450:      deallocate(ivp)
  451:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  938:
  939:C     Redesign ... inefficient.
  940:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/rsibl.F' (mode='fix')..
  952:     .    call rx('bug in gvgvcomp.  Cannot find ivp')
  953:      enddo
  954:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
    3:Cgetarg...info...           structure ['smhsbl', 'spec', 'sspec']
    4:Cgetarg...info...           use_to_add ['smhsbl', 'm_struc_def']
    5:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  137:C     implicit none
  138:C ... Passed parameters
  139:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  138:C ... Passed parameters
  139:#if MPI
  140:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  139:#if MPI
  140:#if MPE
  141:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  142:#endif
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  140:#if MPE
  141:      include "mpef.h"
  142:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  141:      include "mpef.h"
  142:#endif
  143:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
  144:      integer numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  155:      integer i,lgunit
  156:      character*120 strn
  157:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  185:      double precision qpg2,alat,plat(3,3),qlat(3,3),vol,srvol,tpiba,pi,
  186:     .  denom,gam,fpi,ddot
  187:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  190:      complex(8):: ovl,srm1,phase,fach
  191:      parameter (srm1=(0d0,1d0))
  192:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  191:      parameter (srm1=(0d0,1d0))
  192:#endif
  193:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  195:      integer, dimension(:,:), allocatable :: index
  196:      integer obuff
  197:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  196:      integer obuff
  197:#endif
  198:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/smhsbl.F' (mode='fix')..
  197:#endif
  198:#if MPE
  199:C Event numbers:
  200:      include "events.ins" <== including file 'fp/events.ins'
  201:#endif
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  199:C Event numbers:
  200:      include "events.ins"
  201:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  208:      call tcn('smhsbl')
  209:
  210:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  216:      master = 0
  217:      mlog = cmdopt('--mlog',6,0,strn)
  218:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  219:      procid = 0
  220:      master = 0
  221:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  270:        enddo
  271:        nlmax=(lmxax+1)**2
  272:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  283:          srm1l(l1) = (srm1)**l1
  284:        enddo
  285:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  285:#else
  286:      call rx('PW branch requires F90')
  287:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  299:C$&        MP_SCHEDTYPE=RUNTIME
  300:      if (nlmto .ne. 0) then
  301:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  300:      if (nlmto .ne. 0) then
  301:#if MPI
  302:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  302:#if MPE
  303:      ierr = MPE_LOG_EVENT(EVENT_START_SMHSBL,procid,"smhsbl")
  304:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  325:ccccccccccccccccccccc
  326:      iloopmx= index(procid,0)
  327:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  327:#else
  328:      iloopmx= nbas
  329:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  330:
  331:      do iloop = 1,iloopmx
  332:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  339:     .        procid,numprocs,ib1,index(procid,0))
  340:        endif
  341:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  341:#else
  342:        ib1=iloop
  343:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  412:                do  ilm1 = l1**2+1, (l1+1)**2
  413:                  i1 = i1+1
  414:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  416:                  hbuf(i1,i2) = hbuf(i1,i2) - s0(ilm1,ilm2,1,ik1,ik2)
  417:     .              + vavg*s0(ilm1,ilm2,0,ik1,ik2)
  418:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  420:                  h(i1,i2) = h(i1,i2) - s0(ilm1,ilm2,1,ik1,ik2)
  421:     .              + vavg*s0(ilm1,ilm2,0,ik1,ik2)
  422:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  434:                do  ilm1 = l1**2+1, (l1+1)**2
  435:                  i1 = i1+1
  436:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  436:#if MPI
  437:                  sbuf(i1,i2) = sbuf(i1,i2) + s0(ilm1,ilm2,0,ik1,ik2)
  438:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  438:#else
  439:                  s(i1,i2) = s(i1,i2) + s0(ilm1,ilm2,0,ik1,ik2)
  440:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  450:        enddo
  451:C   ... Hsm (i1) \times PW (i2)  Takao. Similar logic in fsmbl
  452:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  472:C             gradient of ovl
  473:C             ovl = srm1*qpgv(1,ig) * ovl
  474:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  475:              sbuf(i1,i2) = sbuf(i1,i2) + ovl
  476:              hbuf(i1,i2) = hbuf(i1,i2) + qpg2*ovl + vavg*ovl
  477:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  478:              s(i1,i2) = s(i1,i2) + ovl
  479:              h(i1,i2) = h(i1,i2) + qpg2*ovl + vavg*ovl
  480:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  482:          enddo
  483:        enddo
  484:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  487:      enddo
  488:
  489:#if MPI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  488:
  489:#if MPI
  490:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  491:      ierr = MPE_LOG_EVENT(EVENT_END_SMHSBL,procid,"smhsbl")
  492:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  493:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  493:#endif
  494:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  495:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  496:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  497:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  498:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  525:      deallocate(hbuf, stat=ierr)
  526:      deallocate(sbuf, stat=ierr)
  527:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  527:#if MPE
  528:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  529:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  528:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  529:#endif
  530:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  540:      enddo
  541:
  542:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/smhsbl.F' (mode='fix')..
  544:        deallocate(yl,ylv,qpgv,qpg2v,srm1l)
  545:      endif
  546:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   64:      allocate(mxevl2_xinvh(nq,nwx) )
   65:
   66:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   75:      enddo
   76:      enddo
   77:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
   93:      enddo
   94:
   95:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  102:      enddo
  103:      call fclose(ifi)
  104:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  180:      endif
  181:
  182:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  192:      enddo
  193:      call fclose(ifi); call fclose(ifi2)
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  205:      enddo
  206:
  207:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  212:      enddo
  213:      call fclose(ifi)
  214:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  340:      enddo
  341:
  342:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/stonerrsa.F' (mode='fix')..
  349:      enddo
  350:      call fclose(ifi)
  351:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
    4:Cgetarg...info...           structure ['sugw', 'spec', 'sspec']
    5:Cgetarg...info...           use_to_add ['sugw', 'm_struc_def']
    6:#define V2 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  190:      integer ndhamx,nspx,nnnx,ifiv
  191:      character strn*120
  192:#if SIGNN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  192:#if SIGNN
  193:      complex(8),allocatable:: sig(:,:)
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  538:        rewind i
  539:
  540:#if V2 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  542:C       write(ifi) nbas,nsp,ndima,ndham,alat,qlat,ef0,nqbz,plat,nqnum !takao 2003 Sep
  543:        write(ifi) nat,nsp,ndima,ndham,alat,qlat,ef0,nqbz,plat,nqnum !mark 2005 Jul
  544:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/sugw.F' (mode='fix')..
  544:#else
  545:        write(ifi) nbas,nsp,nchan,ndham,alat,qlat,ef0,n1q,n2q,n3q,plat
  546:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
    3:Cgetarg...info...           structure ['supot', 'pot', 'spot']
    4:Cgetarg...info...           use_to_add ['supot', 'm_struc_def']
    5:#define FP 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
   92:      endif
   93:
   94:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/supot.F' (mode='fix')..
  177:
  178:      endif
  179:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
    2:Cgetarg...info...           structure ['ugcomp', 'spec', 'sspec']
    3:Cgetarg...info...           use_to_add ['ugcomp', 'm_struc_def']
    4:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   38:C     implicit none
   39:C ... Passed parameters
   40:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   39:C ... Passed parameters
   40:#if MPI | MPIK
   41:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   40:#if MPI | MPIK
   41:#if MPE
   42:      include "mpef.h" <== 'mpef.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   43:#endif
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   41:#if MPE
   42:      include "mpef.h"
   43:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   42:      include "mpef.h"
   43:#endif
   44:      include "mpif.h" <== 'mpif.h' not found in 'fp:.'. The INCLUDE line will be turned to a comment.
   45:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   55:      logical mlog,cmdopt
   56:      character*120 strn
   57:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   56:      character*120 strn
   57:#endif
   58:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
INFORMATION while processing 'fp/ugcomp.F' (mode='fix')..
   57:#endif
   58:#if MPE
   59:C Event numbers:
   60:      include "events.ins" <== including file 'fp/events.ins'
   61:#endif
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   59:C Event numbers:
   60:      include "events.ins"
   61:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   84:c #ifndef SGI_PARALLEL
   85:      parameter (nlmx=64, npmx=1, nbmx=256)
   86:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   87:      double precision xf(3,nbas,npmx),xhpot0(nbas,npmx),
   88:     .  xgpot0(nlmx*nbas,npmx),xugg(npmx)
   89:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   90:      double precision xf(3,nbmx,npmx),xhpot0(nbmx,npmx),
   91:     .  xgpot0(nlmx*nbmx,npmx),xugg(npmx)
   92:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
   99:
  100:
  101:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  103:      double precision , dimension(:), allocatable :: buffer
  104:      integer nvl0,iiv0(nbas)
  105:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  112:      call tcn('ugcomp')
  113:
  114:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  120:      master = 0
  121:      mlog = cmdopt('--mlog',6,0,strn)
  122:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  128:      y0 = 1d0/srfpi
  129:c #if ! (F90 | AUTO_ARRAY | SGI_PARALLEL)
  130:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  130:#if ! (F90 | AUTO_ARRAY)
  131:      if (nbas .gt. nbmx) call rx('ugcomp: increase nbkmx')
  132:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  135:      mp = 1
  136:
  137:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  138:      call setofl(0,ssite,sspec,nbas,nvl0,iiv0)
  139:      if (nlmx*nbas .lt. nvl0) call rx('ugcomp: increase nlmx')
  140:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  150:      call dpzero(xf, 3*nbas*mp)
  151:      call dpzero(xhpot0, nbas*mp)
  152:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  151:      call dpzero(xhpot0, nbas*mp)
  152:#if MPI | MPIK
  153:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  153:#if MPE
  154:      ierr = MPE_LOG_EVENT(EVENT_START_UGCOMP,procid,"ugcomp")
  155:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  159:      ibini= bproc(procid)
  160:      ibend= bproc(procid+1)-1
  161:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  163:      ibini=1
  164:      ibend=nbas
  165:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  166:
  167:      do ib=ibini,ibend
  168:#if MPI |MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  175:        endif
  176:        iv0 = iiv0(ib)
  177:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  218:     .      lfoc2,rh2,z2)
  219:          nlm2 = (lmax2+1)**2
  220:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  220:#if MPI | MPIK
  221:          jv0 = iiv0(jb)
  222:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  301:        endif
  302:      enddo
  303:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  303:#if MPI | MPIK
  304:      nvl = nvl0
  305:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  305:#else
  306:      nvl = iv0
  307:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  308:
  309:C ... Assemble data from separate threads
  310:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  309:C ... Assemble data from separate threads
  310:#if MPI | MPIK
  311:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  312:      ierr = MPE_LOG_EVENT(EVENT_END_UGCOMP,procid,"ugcomp")
  313:      ierr = MPE_LOG_EVENT(EVENT_START_BARRIER,procid,"barrier")
  314:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  314:#endif
  315:      call MPI_BARRIER(MPI_COMM_WORLD,ierr)
  316:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  317:      ierr = MPE_LOG_EVENT(EVENT_END_BARRIER,procid,"barrier")
  318:      ierr = MPE_LOG_EVENT(EVENT_START_ALLRED,procid,"allreduce")
  319:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  366:     .        procid,numprocs)
  367:      endif
  368:#if MPE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  368:#if MPE
  369:      ierr = MPE_LOG_EVENT(EVENT_END_ALLRED,procid,"allreduce")
  370:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  370:#endif
  371:      deallocate(bproc, stat=ierr)
  372:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/ugcomp.F' (mode='fix')..
  382:        ugg = ugg + xugg(ip)
  383:   80 continue
  384:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
    4:Cgetarg...info...           structure ['vcdmel', 'ctrl', 'sctrl']
    5:Cgetarg...info...           use_to_add ['vcdmel', 'm_struc_def']
    6:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
   65:     .  og,os
   66:      double precision pnu(n0,2),pnz(n0,2),a,rmt,z,xx,rsml(n0),ehl(n0)
   67:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
   67:#if F90 | AUTO_ARRAY
   68:      double precision ume(0:lmxax,nsp,nsite),sme(0:lmxax,nsp,nsite)
   69:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
   71:      parameter (nsitmx=256)
   72:      double precision ume(0:lmxax,nsp,nsitmx),sme(0:lmxax,nsp,nsitmx)
   73:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
   80:      call dpzero(rsml,n0)
   81:      call dpzero(ehl,n0)
   82:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vcdmel.F' (mode='fix')..
   82:#if ! (F90 | AUTO_ARRAY)
   83:      if (nsite .gt. nsitmx) call rx('Increase nsitmx in vcdmel')
   84:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  254:      double precision rhot,f1,f2,dfdr,dvdr,f
  255:      double precision qs(2)
  256:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  259:      real(8), allocatable :: vxc(:,:,:),vxcx(:,:,:),
  260:     .  vxcc(:,:,:),vxc2(:,:,:),vxc2x(:,:,:),vxc2c(:,:,:)
  261:#elif AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  264:      double precision vxc(nr,np,nsp),vxcx(nr,np,nsp),vxcc(nr,np,nsp),
  265:     .                 vxc2(nr,np,nsp),vxc2x(nr,np,nsp),vxc2c(nr,np,nsp)
  266:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  266:#endif
  267:
  268:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  268:#if ! (F90 | AUTO_ARRAY)
  269:      call rx('vxcnsp only implemented for automatic arrays')
  270:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  270:#endif
  271:
  272:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  275:      allocate (vxc(nr,np,nsp),vxcx(nr,np,nsp),vxcc(nr,np,nsp),
  276:     .          vxc2(nr,np,nsp),vxc2x(nr,np,nsp),vxc2c(nr,np,nsp))
  277:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  458:      endif
  459:
  460:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'fp/vxcnsp.F' (mode='fix')..
  461:      deallocate (rp,rps,exc,excx,excc)
  462:      deallocate (vxc,vxcx,vxcc,vxc2,vxc2x,vxc2c)
  463:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiocls.F' (mode='fix')..
    5:Cgetarg...info...           structure ['aiocls', 'lat', 'slat']
    6:Cgetarg...info...           use_to_add ['aiocls', 'm_struc_def']
    7:#define ONE_ATOM_UNIT 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiocls.F' (mode='fix')..
  196:        call r8tos8(dval(w(oclabl),ic),clabl)
  197:        if (mode00 .ne. 3) then
  198:#if ONE_ATOM_UNIT <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiocls.F' (mode='fix')..
  198:#if ONE_ATOM_UNIT
  199:          ifi = fopn(clabl)
  200:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiocls.F' (mode='fix')..
  200:#else
  201:         ifi = fopna(clabl,30+ic,0)
  202:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  107:   16   continue
  108:C --- Patch for bug in AIX err= ---
  109:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  113:          backspace ifi
  114:        endif
  115:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  142:
  143:C --- handle read exception ---
  144:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aiomom.F' (mode='fix')..
  145:   19 l = 0
  146:      i = 2
  147:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  940:      integer i,l,ii,j,k,iprint
  941:      logical scat,rdstrn
  942:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  942:#if AIX
  943:      character*72 s
  944:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  965:   16   continue
  966:C --- Patch for bug in AIX err= ---
  967:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  971:          backspace ifi
  972:        endif
  973:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  992:
  993:C --- handle read exception ---
  994:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
  995:   18 l = 0
  996:      i = 2
  997:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1041:      integer i,l,ii,j,k,iprint
 1042:      logical scat,rdstrn
 1043:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1043:#if AIX
 1044:      character*72 s
 1045:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1065:   16   continue
 1066:C --- Patch for bug in AIX err= ---
 1067:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1071:          backspace ifi
 1072:        endif
 1073:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1092:
 1093:C --- handle read exception ---
 1094:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1095:   18 l = 0
 1096:      i = 2
 1097:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1139:      integer i,l,ll,k,iprint,i1mach
 1140:      logical scat,sw
 1141:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1142:      logical rdstrn
 1143:      character*72 s
 1144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1169:   16     continue
 1170:C --- Patch for bug in AIX err= ---
 1171:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1175:          backspace ifi
 1176:        endif
 1177:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1198:
 1199:C --- handle read exception ---
 1200:#if AIX <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1201:   18 l = 0
 1202:      i = 2
 1203:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1448:          if (ll .ne. l) stop 'IO4SPP: bad l quantum number'
 1449:C Map delta into sqrt(delta), preserving sign and 1/sqrt(p) into p
 1450:#ifndef NOMAP_PP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/aioxtn.F' (mode='fix')..
 1451:          x2(3) = dsign(1.d0,x2(3))*dsqrt(dabs(x2(3)))
 1452:          x2(4) = 1/x2(4)**2
 1453:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/asamad.F' (mode='fix')..
    4:Cgetarg...info...           structure ['asamad', 'lat', 'slat']
    5:Cgetarg...info...           use_to_add ['asamad', 'm_struc_def']
    6:#define NSPH 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/asamad.F' (mode='fix')..
  268:*      call dvset(w(oqt),nclass+2,nclass+2,-.2d0)
  269:
  270:#if NSPH <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/asamad.F' (mode='fix')..
  295:      endif
  296:      endif
  297:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
    2:Cgetarg...info...           structure ['atscpp', 'spec', 'sspec']
    3:Cgetarg...info...           use_to_add ['atscpp', 'm_struc_def']
    4:#define ONE_ATOM_UNIT 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  273:      call rmesh(z,rmx,isw(lrell),isw(lgrad),nrmx,a,nr)
  274:C     if (ipr .gt. 20) print *
  275:#if ONE_ATOM_UNIT <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  275:#if ONE_ATOM_UNIT
  276:      ifi = fopna(clabl,30,0)
  277:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  277:#else
  278:      ifi = fopna(clabl,30+ic,0)
  279:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  510:      elseif (imake .ne. 0) then
  511:      call dfclos(ifi)
  512:#if ONE_ATOM_UNIT <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  512:#if ONE_ATOM_UNIT
  513:      ifi = fopna(clabl,30,0)
  514:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
  514:#else
  515:      ifi = fopna(clabl,30+ic,0)
  516:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
 1963:          dlmins = dlphi - el(2)/phi**2/rmax
 1964:
 1965:#ifndef FIRST_ORDER_PRESSURE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/atomsr.F' (mode='fix')..
 1973:          call gintsr(g,g,a,b,nr,z,el(2)+e,l,v(1,i),rofi,sum)
 1974:          phmins = val(1)/rmax/dsqrt(sum)
 1975:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  114:     .         grpop,iinit,projql,rx,rxx
  115:      character*1 chr(0:2)
  116:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  117:      character*30 sg
  118:      double precision ag(3)
  119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  118:      double precision ag(3)
  119:#endif
  120:#if QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  125:      data q0 /0.339995d0,0.339995d0,0.339995d0/,dq/.15d0/
  126:      integer k,m
  127:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  145:
  146:      call bzmsh0(plat,lshft,lpbc01,n1,n2,n3,is,ifac,rb,qb)
  147:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  149:  356 format(/' BZMESH: qp mapping'/' i1..i3',25x,'qp',16x,'iq   ig g')
  150:      call dpzero(ag,3)
  151:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  192:          v(3) = ii1*qb(3,1) + ii2*qb(3,2) + ii3*qb(3,3)
  193:C         call prmx('kpt',v,3,3,1)
  194:#if QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  198:C  156     format(4f15.6)
  199:          if (ddot(3,v1,1,v1,1) .gt. dq*dq) goto 20
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  270:C                igstar(ii) = ig
  271:C              endif
  272:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  278:     .          v1,ipq(j1,j2,j3),ig)
  279:              endif
  280:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  318:     .    lgunit(2),nq,n1,n2,n3,lshft)
  319:      endif
  320:#if  QP0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  327:   70 write(ifi,334) iq,(qp(m,iq),m=1,3), wgt(iq)
  328:  334 format(i5,1p,4d18.10)
  329:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/bzmesh.F' (mode='fix')..
  333:      if (dabs(swgt-2) .gt. 1.d-9) call fexit(-1,111,
  334:     .' Exit -1 BZMESH: QP weights sum to %1;6d but must sum to 2',swgt)
  335:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/chgmsh.F' (mode='fix')..
   48:        if (m3 .eq. 1) n3 = 1
   49:      endif
   50:#if AWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/chgmsh.F' (mode='fix')..
   54:     .    lgunit(1),m1,m2,m3,n1,n2,n3,iopt)
   55:      endif
   56:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/clsprm.F' (mode='fix')..
  511:      equivalence (s,ss)
  512:      character*13 LIBPTH
  513:#if unix <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/clsprm.F' (mode='fix')..
  513:#if unix
  514:      data LIBPTH /'/usr/lmto/lib'/
  515:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   31:Cu   Written by Karen Johnston
   32:C ----------------------------------------------------------------------
   33:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   69:        WRITE (*,'(3x,3i7)') i,inode(i),xnode(i)
   70:      END DO
   71:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
   72:      END SUBROUTINE dstrbp
   73:
   74:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/dstrbp.F' (mode='fix')..
  343:C      call pdstlb(nloop,np,index)
  344:C      end
  345:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
    1:#if VOSKO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
   56:      RETURN
   57:      END
   58:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
  108:      EXC = -EPSX0/RS + EPSCP + FOFXI(XI)*(EPSCF - EPSCP - EPSX1/RS)
  109:      END
  110:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
  109:      END
  110:#endif
  111:#if PERD91 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
  403:       end subroutine xperdew
  404:
  405:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/evxc.F' (mode='fix')..
  483:       end subroutine nlocxc
  484:
  485:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   27:      integer ibas,jbas,m,ig,lgunit
   28:      double precision dbas(3),bast(3),sum,tol2,qlat(3,3),vol,ddot
   29:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   29:#if F90 | AUTO_ARRAY
   30:      double precision sdpos(3,nbas)
   31:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/fixpos.F' (mode='fix')..
   34:      double precision sdpos(3,nbmx)
   35:      if (nbas .gt. nbmx) call rx('fixpos: increase nbmx')
   36:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  187:
  188:
  189:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  190:            if ((nint(s1)-s1)**2+(nint(s2)-s2)**2+(nint(s3)-s3)**2
  191:     .        .gt. 1d-12) call rx('bug in gvlist')
  192:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  223:C ... Printout
  224:      if (iprint() .ge. PRTG) then
  225:#if AWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  234:     .    len(outs),0,n1,n2,n3,s1,s2,s3)
  235:        call awrit0('%a',outs,len(outs),-stdo)
  236:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlist.F' (mode='fix')..
  238:  861 format(/' gvlist: cutoff radius ',f7.3,' gives',i7,
  239:     .  '   recips of max',i7)
  240:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  324:C Local variables
  325:      integer ig,m,jg
  326:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  327:      integer kk(ngmx),iprm(ngmx)
  328:      double precision gg(ngmx)
  329:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/gvlst2.F' (mode='fix')..
  333:      double precision gg(ngmxx)
  334:      if (ng .gt. ngmxx) call rxi('gvlst2: increase ngmx, need',ng)
  335:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  160:      integer oiwk
  161:      double precision dmx(2)
  162:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  163:      integer iaxi(5)
  164:      double precision tau(3)
  165:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  279:      call tcx('hft2rs')
  280:
  281:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hft2rs.F' (mode='fix')..
  299:  393 format(9f12.6)
  300:      goto 998
  301:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmladb.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmladb.F' (mode='fix')..
  152:      double complex b00,b01,b10,b11
  153:      double complex B0(ldim,2,2),B1(ldim,2,2),Bd(ldim,2,2),B2(ldim,2,2)
  154:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmladb.F' (mode='fix')..
  154:#if F90
  155:      complex(8),allocatable:: wk(:,:,:,:)
  156:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmladb.F' (mode='fix')..
  156:#else
  157:      double complex wk(ldim,2,ldim,2)
  158:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmltns.F' (mode='fix')..
  119:    2 wk(i) = pph(5,i) + pph(4,i)*(pph(2,i) - pph(1,i))
  120:      if (ccor) call daxpy(ldim,1d0,ccd(1,1),1,wk,1)
  121:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmltns.F' (mode='fix')..
  121:#if SGI_PARALLEL
  122:C$DOACROSS local(j,i)
  123:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmltns.F' (mode='fix')..
  155:      if (ccor) call daxpy(ldim,vmtz,ccd(1,1),1,wk,1)
  156:
  157:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/hmltns.F' (mode='fix')..
  157:#if SGI_PARALLEL
  158:C$DOACROSS local(j,i)
  159:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   30:C ----------------------------------------------------------------
   31:C     implicit none
   32:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   31:C     implicit none
   32:#if MPI | MPIK
   33:      include "mpif.h" <== 'mpif.h' not found in 'subs:.'. The INCLUDE line will be turned to a comment.
   34:      integer procid, master, numprocs, ierr, status(MPI_STATUS_SIZE)
WARNING while processing 'subs/iopos.F' (mode='fix')..
   44:      logical mlog, cmdopt
   45:      character*120 strn
   46:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   68:      data rdarg /'#{}% c'/
   69:
   70:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
   77:      mlog = cmdopt('--mlog',6,0,strn)
   78:      if (procid .eq. master) then
   79:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
  172:      endif
  173:      call fclose(ifi)
  174:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iopos.F' (mode='fix')..
  185:        endif
  186:      endif
  187:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
    6:Cgetarg...info...           structure ['iors', 'spec', 'sspec']
    7:Cgetarg...info...           use_to_add ['iors', 'm_struc_def']
    8:#define FP 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  396:C   ... FP mesh density
  397:        elseif (mode .eq. 1 .or. mode .eq. -2) then
  398:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  462:        call mpibc1(w(osmrho),2*k1*k2*k3*nsp,4,mlog,'iors','smrho')
  463:  115   continue
  464:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  464:#else
  465:        call rx('smooth density not implemented')
  466:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  920:          if (isanrg(lmxl,  0,lmxa,  msg,'lmxl', .false.)) goto 999
  921:
  922:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
  923:          if (kmax0.ne.kmax.and.ipr.ge.10)
  924:     .      write(stdo,201) ib,spid,'kmax',kmax0,kmax
  925:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1061:        if (isanrg(ibaug, nat,nat,  msg,'nat', .false.)) goto 999
 1062:
 1063:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1076:          call pvsms2(ssite,sspec,wk,nbas,nsp,orhoat)
 1077:        endif
 1078:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1358:
 1359:C   --- Write smooth charge density ---
 1360:#if FP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iors.F' (mode='fix')..
 1366:        endif
 1367:        call dpdftr(n1,n2,n3,k1,k2,k3,nsp,w(osmrho),lbin,-jfi)
 1368:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  140:
  141:C ... Local parameters
  142:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  141:C ... Local parameters
  142:#if MPI | MPIK
  143:      include "mpif.h" <== 'mpif.h' not found in 'subs:.'. The INCLUDE line will be turned to a comment.
  144:      logical mlog,cmdopt
WARNING while processing 'subs/iosits.F' (mode='fix')..
  144:      logical mlog,cmdopt
  145:      integer ierr
  146:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  165:
  166:C ... Setup
  167:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  168:      call MPI_COMM_RANK( MPI_COMM_WORLD, procid, ierr )
  169:      mlog = cmdopt('--mlog',6,0,spid)
  170:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  592:      endif
  593:
  594:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iosits.F' (mode='fix')..
  602:        call mpibc1(ssite,i,4,mlog,'iosits','ssite')
  603:      endif
  604:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  131:      else
  132:C   ... Open file, and read header
  133:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  133:#if MASTERIO
  134:        if (procid .eq. 0) then
  135:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  156:        call isanrg(lmaxwr,lmaxw,lmaxw,'file: IOSTR:','lmaxw',.false.)
  157:
  158:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  167:        call mpibc1(nttab,1,2,.false.,'iostr','nttab')
  168:        call mpibc1(nitab,1,2,.false.,'iostr','nitab')
  169:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  200:        if (getdig(lio23,1,2) .eq. 0) then
  201:          call rxx(getdig(lio23,0,2).eq.1,'iostr not ready for complex')
  202:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  202:#if MASTERIO
  203:          if (procid .eq. 0) then
  204:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  207:          lerr = iostr2(ifi,nbas,nttab,nblk,lscoff,nds,nkap,
  208:     .                  w(onpr),w(oiax),kap2,w(oalpha),w(os))
  209:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  219:C         entime = MPI_WTIME()
  220:C         call info2(20,0,0,'  took %;1d sec',(entime-sttime),0)
  221:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  222:C   ... Read strux, vector format
  223:        else
  224:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  224:#if MASTERIO
  225:          if (procid .eq. 0) then
  226:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  228:     .                  w(onpr),w(oiax),kap2,w(os))
  229:        endif
  230:#if MASTERIO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/iostr.F' (mode='fix')..
  236:     .      's')
  237:        endif
  238:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  117:      double precision a0,q0,r0,tol,v0
  118:      double precision gq0,gq1,pi,q1,q2,r1,r2
  119:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  119:#if F90 | AUTO_ARRAY
  120:      double precision f(0:lmax),g(0:lmax)
  121:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/lattc.F' (mode='fix')..
  121:#else
  122:      double precision f(0:40),g(0:40)
  123:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1915:C  +2 is margin
 1916:C         n=n+2
 1917:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1917:#ifdef ALIGNMENT128
 1918:        if (mod(n,2).eq.1) n=n+1
 1919:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1926:C  +2 is margin
 1927:C         n=n+2
 1928:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1928:#ifdef ALIGNMENT128
 1929:        if (mod(n,2).eq.1) n=n+1
 1930:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1937:C  +2 is margin
 1938:C         n=n+2
 1939:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1939:#ifdef ALIGNMENT128
 1940:        if (mod(n,2).eq.1) n=n+1
 1941:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1948:C  +2 is margin
 1949:C         n=n+2
 1950:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1950:#ifdef ALIGNMENT128
 1951:        if (mod(n,2).eq.1) n=n+1
 1952:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1959:C  +2 is margin
 1960:C         n=n+2
 1961:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1961:#ifdef ALIGNMENT128
 1962:        if (mod(n,2).eq.1) n=n+1
 1963:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1970:C  +2 is margin
 1971:C         n=n+2
 1972:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1972:#ifdef ALIGNMENT128
 1973:        if (mod(n,2).eq.1) n=n+1
 1974:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1981:C  +2 is margin
 1982:C         n=n+2
 1983:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1983:#ifdef ALIGNMENT128
 1984:        if (mod(n,2).eq.1) n=n+1
 1985:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1992:C  +2 is margin
 1993:C         n=n+2
 1994:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 1994:#ifdef ALIGNMENT128
 1995:        if (mod(n,2).eq.1) n=n+1
 1996:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2003:C  +2 is margin
 2004:C         n=n+2
 2005:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2005:#ifdef ALIGNMENT128
 2006:        if (mod(n,2).eq.1) n=n+1
 2007:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2014:C  +2 is margin
 2015:C         n=n+2
 2016:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2016:#ifdef ALIGNMENT128
 2017:        if (mod(n,2).eq.1) n=n+1
 2018:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2025:C  +2 is margin
 2026:C         n=n+2
 2027:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2027:#ifdef ALIGNMENT128
 2028:        if (mod(n,2).eq.1) n=n+1
 2029:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2036:C  +2 is margin
 2037:C         n=n+2
 2038:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2038:#ifdef ALIGNMENT128
 2039:        if (mod(n,2).eq.1) n=n+1
 2040:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2047:C  +2 is margin
 2048:C         n=n+2
 2049:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2049:#ifdef ALIGNMENT128
 2050:        if (mod(n,2).eq.1) n=n+1
 2051:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2058:C  +2 is margin
 2059:C         n=n+2
 2060:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2060:#ifdef ALIGNMENT128
 2061:        if (mod(n,2).eq.1) n=n+1
 2062:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2069:C  +2 is margin
 2070:C         n=n+2
 2071:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_def.F' (mode='fix')..
 2071:#ifdef ALIGNMENT128
 2072:        if (mod(n,2).eq.1) n=n+1
 2073:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   15:C  +2 is margin
   16:C         n=n+2
   17:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   17:#ifdef ALIGNMENT128
   18:        if (mod(n,2).eq.1) n=n+1
   19:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   26:C  +2 is margin
   27:C         n=n+2
   28:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   28:#ifdef ALIGNMENT128
   29:        if (mod(n,2).eq.1) n=n+1
   30:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   37:C  +2 is margin
   38:C         n=n+2
   39:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   39:#ifdef ALIGNMENT128
   40:        if (mod(n,2).eq.1) n=n+1
   41:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   48:C  +2 is margin
   49:C         n=n+2
   50:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   50:#ifdef ALIGNMENT128
   51:        if (mod(n,2).eq.1) n=n+1
   52:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   59:C  +2 is margin
   60:C         n=n+2
   61:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   61:#ifdef ALIGNMENT128
   62:        if (mod(n,2).eq.1) n=n+1
   63:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   70:C  +2 is margin
   71:C         n=n+2
   72:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   72:#ifdef ALIGNMENT128
   73:        if (mod(n,2).eq.1) n=n+1
   74:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   81:C  +2 is margin
   82:C         n=n+2
   83:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   83:#ifdef ALIGNMENT128
   84:        if (mod(n,2).eq.1) n=n+1
   85:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   92:C  +2 is margin
   93:C         n=n+2
   94:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
   94:#ifdef ALIGNMENT128
   95:        if (mod(n,2).eq.1) n=n+1
   96:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  103:C  +2 is margin
  104:C         n=n+2
  105:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  105:#ifdef ALIGNMENT128
  106:        if (mod(n,2).eq.1) n=n+1
  107:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  114:C  +2 is margin
  115:C         n=n+2
  116:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  116:#ifdef ALIGNMENT128
  117:        if (mod(n,2).eq.1) n=n+1
  118:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  125:C  +2 is margin
  126:C         n=n+2
  127:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  127:#ifdef ALIGNMENT128
  128:        if (mod(n,2).eq.1) n=n+1
  129:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  136:C  +2 is margin
  137:C         n=n+2
  138:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  138:#ifdef ALIGNMENT128
  139:        if (mod(n,2).eq.1) n=n+1
  140:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  147:C  +2 is margin
  148:C         n=n+2
  149:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  149:#ifdef ALIGNMENT128
  150:        if (mod(n,2).eq.1) n=n+1
  151:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  158:C  +2 is margin
  159:C         n=n+2
  160:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  160:#ifdef ALIGNMENT128
  161:        if (mod(n,2).eq.1) n=n+1
  162:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  169:C  +2 is margin
  170:C         n=n+2
  171:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  171:#ifdef ALIGNMENT128
  172:        if (mod(n,2).eq.1) n=n+1
  173:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  227:
  228:      n=len_trim(str0)
  229:#if STRUC_DEBUG_WRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/m_struc_func.F' (mode='fix')..
  229:#if STRUC_DEBUG_WRITE
  230:      write(*,*)thisname,' <',str0(:n),'>'
  231:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   41:
   42:      if (opt1 .eq. 0) then
   43:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   43:#if SGI_PARALLEL
   44:C$DOACROSS local(i,j)
   45:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   51:        enddo
   52:      elseif (opt1 .eq. 1) then
   53:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   53:#if SGI_PARALLEL
   54:C$DOACROSS local(i,j)
   55:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   61:        enddo
   62:      elseif (opt1 .eq. 2) then
   63:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   63:#if SGI_PARALLEL
   64:C$DOACROSS local(i,j)
   65:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   71:        enddo
   72:      elseif (opt1 .eq. 3) then
   73:#if SGI_PARALLEL <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/makdsd.F' (mode='fix')..
   73:#if SGI_PARALLEL
   74:C$DOACROSS local(i,j)
   75:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
    1:#define VEC 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  126:        if (i .eq. npr) goto 34
  127:C   ... Setup for vectorized strux
  128:#if VEC <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  142:        call rstr0(1,w(lmxb+i+1),e,nlmp,npr-i,w(ox),w(oy),w(oz),
  143:     .    w(lmxb+i),mod(iop0,2),w(ohl),w(ohd))
  144:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  144:#else
  145:          call defi(ocf,1)
  146:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  160:          offj = w(offs+j)
  161:          nlmj = iax(9,j)
  162:#ifndef VEC <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  169:          if (iop0 .ne. 1) call dmscop(sd,ndimW,w(od),nlmi,1,nlmi,1,
  170:     .      nlmj,offi+1,offj+1,fd)
  171:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/maks0.F' (mode='fix')..
  198:     .        fd)
  199:          endif
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  362:        endif
  363:
  364:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  370:C     .  ' etot=%;4d de=%;4d undo=%l',' ',80,6,i1,ib,i2,jb,etot,de,lundo)
  371:C        call awrit2('  iprm=%n:1i',' ',80,6,nbas,iprm)
  372:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  436:      iprmi(ib1) = i2
  437:      iprmi(ib2) = i1
  438:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mcasim.F' (mode='fix')..
  441:      if (iprm(i1) .ne. ib1) stop 'bug in mcasw'
  442:      if (iprm(i2) .ne. ib2) stop 'bug in mcasw'
  443:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  157:        endif
  158:        call defdr(owtkp,-mxkp)
  159:#if TRSYMM <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  159:#if TRSYMM
  160:        call dvset(w(owtkp),1,1,dble(nsgrp))
  161:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  192:        call rlse(owtkp)
  193:        call defdr(owtkp,-nkp)
  194:#if TRSYMM <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/mkqp.F' (mode='fix')..
  194:#if TRSYMM
  195:        call dvset(w(owtkp),1,1,dble(nsgrp))
  196:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/plana.F' (mode='fix')..
  212:  432     format('   Class ',a4,' already named in class',i3)
  213:          print 336
  214:#if SVS <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/plana.F' (mode='fix')..
  214:#if SVS
  215:  336     format('   Confirm name, or type new name: '\)
  216:#elif APOLLO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/plana.F' (mode='fix')..
  216:#elif APOLLO
  217:  336     format('   Confirm name, or type new name: '$)
  218:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/plana.F' (mode='fix')..
  218:#else
  219:  336     format('   Confirm name, or type new name: ')
  220:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prjpos.F' (mode='fix')..
  169:      end
  170:
  171:#if TEST <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prjpos.F' (mode='fix')..
  307:
  308:      end
  309:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   32:      ifi = fopna('out',29,0)
   33:      rewind ifi
   34:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   34:#if NOAWRITE
   35:      write(ifi,'(''% rows'',i5,'' cols'',i5,a)') nr,nc
   36:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   36:#else
   37:      call awrit2('%% rows %i cols %i real',' ',80,ifi,nr,nc)
   38:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   44:      call fclose(ifi)
   45:
   46:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   47:      outs = ' prm: wrote '//strn//' continue?'
   48:      print *, outs
   49:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   50:      outs = ' prm: wrote '//strn
   51:      call awrit0('%a.  Continue?',outs,-80,-i1mach(2))
   52:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   53:      read(*,'(a80)') outs
   54:
   55:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   55:#if NOAWRITE
   56:      if (outs .eq. 'q') stop 'quit in prmx'
   57:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
   57:#else
   58:      if (outs .eq. 'q') call rx0('quit in prmx')
   59:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  128:      ifi = fopna('out',29,0)
  129:      rewind ifi
  130:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  130:#if NOAWRITE
  131:      write(ifi,'(''% rows'',i5,'' cols'',i5,a)') nr,nc,outs(1:10)
  132:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  132:#else
  133:      call awrit2('%% rows %i cols %i'//outs,' ',80,ifi,nr,nc)
  134:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  141:      endif
  142:      call fclose(ifi)
  143:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  144:      outs = ' prm: wrote '//strn//' continue?'
  145:      print *, outs
  146:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  147:      outs = ' zprm: wrote '//strn
  148:      call awrit0('%a.  Continue?',outs,-80,-i1mach(2))
  149:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  150:      read(*,'(a80)') outs
  151:
  152:#if NOAWRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  152:#if NOAWRITE
  153:      if (outs .eq. 'q') stop 'quit in zprm'
  154:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/prmx.F' (mode='fix')..
  154:#else
  155:      if (outs .eq. 'q') call rx0('quit in zprm')
  156:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  882:C ... Allocate and initialize sordn
  883:Cki delete sordn
  884:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  884:#if 1
  885:       v_sarry%osordn=osordn
  886:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  893:       v_sarry%osordn=osordn
  894:
  895:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  942:C --- Allocate and copy input to soptic ---
  943:Cki  delete soptc
  944:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  945:       osoptc=0
  946:       v_spot%osoptc=osoptc
  947:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  985:       call ii8copy(i_copy_size,optic_axes,1,w(osoptc)%axes,1)
  986:
  987:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  989:C --- Allocate and copy input to sgw ---
  990:Cki delete sgw
  991:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
  992:       osgw=0
  993:       v_spot%osgw=osgw
  994:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdctrl2.F' (mode='fix')..
 1063:       v_spot%osgw=osgw
 1064:
 1065:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  274:        call sigflg(dc,'rsig',out2,w,w,w,lfbzin,w,lonesp,qoffi,w)
  275:      endif
  276:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  280:      lfbzin = .false.
  281:      endif
  282:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
  282:#else
  283:      lfbzin = lfbzin .or. mod(lssym,2)
  284:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1278:      double precision qp(3),errmxx,errmx,err,qpr(3),xx
 1279:      double complex hwk(ndhrs,ndhrs)
 1280:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1281:      complex(8),allocatable:: sq(:,:),sq1(:,:),uz(:,:)
 1282:C     complex(8),allocatable:: h(:,:),s(:,:)
 1283:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1283:#else
 1284:      double complex sq(ndimh,ndimh),sq1(ndimh,ndimh),uz(ndimh,ndimh)
 1285:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1297:      nscnts = 0
 1298:
 1299:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1299:#if F90
 1300:      allocate(sq(ndimh,ndimh),sq1(ndimh,ndimh))
 1301:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1303:C --- Rotate hrs if switch set ---
 1304:      if (opt01 .ne. 0 .and. mod(lrot,2) .ne. 0) then
 1305:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1305:#if F90
 1306:        allocate(uz(ndimh,ndimh))
 1307:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1486:      enddo
 1487:
 1488:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1488:#if F90
 1489:      deallocate(sq,sq1)
 1490:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1490:#endif
 1491:      if (opt01 .ne. 0 .and. mod(lrot,2) .ne. 0) then
 1492:#if F90 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1492:#if F90
 1493:        deallocate(uz)
 1494:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1581:  306 format(' Failed to parse string ',a,' ... try again.')
 1582:  100 continue
 1583:#if PRTNOCR <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1583:#if PRTNOCR
 1584:      print '('' Option (enter ? for menu) : '',$)'
 1585:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm.F' (mode='fix')..
 1585:#else
 1586:      print '('' Option (enter ? for menu) : '')'
 1587:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  134:        call sigflg(dc,'rsig',out2,w,w,w,lfbzin,w,lonesp,qoffi,w)
  135:      endif
  136:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  140:      lfbzin = .false.
  141:      endif
  142:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rdsigm2.F' (mode='fix')..
  142:#else
  143:      lfbzin = lfbzin .or. mod(lssym,2)
  144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
    1:#define SP 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   19:        if (nlm1 .eq. 0) then
   20:          do  1  nlm2 = 0, nl2-1
   21:#if SP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   21:#if SP
   22:             nlm2x=3
   23:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   23:#else
   24:             nlm2x=0
   25:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   37:        elseif (nlm1 .lt. 4) then
   38:          do  2  nlm2 = 0, nl2-1
   39:#if SP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   39:#if SP
   40:            nlm2l=nlm2 .gt. 3
   41:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/remhyb.F' (mode='fix')..
   41:#else
   42:            nlm2l=(nlm2 .eq. 0 .or. nlm2 .gt. 3)
   43:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
    1:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   43:      integer l,isp,lp1,konfig,ir,iprint,stdo,nglob,ltop
   44:      double precision sum1(10,2),sum2(10,2),tol,r,fac,sum,rmax,rcw
   45:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   45:#if F90 | AUTO_ARRAY
   46:      double precision rh1(nr),rh2(nr),rwgt(nr),ddot
   47:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   49:      parameter (nrmax=1501)
   50:      double precision rh1(nrmax),rh2(nrmax),rwgt(nrmax)
   51:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   56:
   57:      if (rc(1) .eq. 0) return
   58:#if ! (F90 | AUTO_ARRAY) <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rnatm.F' (mode='fix')..
   58:#if ! (F90 | AUTO_ARRAY)
   59:      if (nr .gt. nrmax) call rx('RNATM: nr > nrmax')
   60:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropbes_alternative.F' (mode='fix')..
   31:      end subroutine ropbes
   32:c----------------------------------------------------
   33:#if 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropbes_alternative.F' (mode='fix')..
   45:      enddo
   46:      end subroutine bessel_yl
   47:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropyln.F' (mode='fix')..
  117:C    2 yl(i,lav-m) = sm(i)*q(i,kk)
  118:C      end
  119:#if TEST <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/ropyln.F' (mode='fix')..
  192:
  193:      end
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  600:     .  offli(n0*nkap0),offlj(n0*nkap0)
  601:      double precision twopi,sp,cosP,sinP,tbas(3),xx
  602:#if SGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  602:#if SGI
  603:      parameter (ncut=9)
  604:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  604:#else
  605:      parameter (ncut=9)
  606:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  820:     .  offlj(n0*nkap0)
  821:      double precision twopi,sp,cosP,sinP,tbas(3),xx
  822:#if SGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  822:#if SGI
  823:      parameter (ncut=9)
  824:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/roth.F' (mode='fix')..
  824:#else
  825:      parameter (ncut=9)
  826:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  108:      dx(ix,i) = pos(ix,iax(2,i)) - pos(ix,iax(1,i)) +
  109:     .  plat(ix,1)*iax(3,i) + plat(ix,2)*iax(4,i) + plat(ix,3)*iax(5,i)
  110:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  110:#if MPI | MPIK
  111:      integer, dimension(:),allocatable :: igproc
  112:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  171:
  172:C --- For each symmetry operation, do ---
  173:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  182:C      enddo
  183:C      call poppr
  184:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  184:#endif
  185:
  186:#if MPI | MPIK <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  188:      igini = max(igproc(procid),2)
  189:      igend = igproc(procid+1)-1
  190:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/rsmsym.F' (mode='fix')..
  192:      igini = 2
  193:      igend = ng
  194:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salph1.F' (mode='fix')..
   87:      double precision dsmx1,dsmx2,stol,stoll
   88:      parameter (stoll=1d-8,nito=1)
   89:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salph1.F' (mode='fix')..
   89:#if DEBUG
   90:      integer ndef,fopna
   91:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salph1.F' (mode='fix')..
  163:   15 balph(j,j) = 1
  164:
  165:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salph1.F' (mode='fix')..
  170:      call fclose(i)
  171:      pause
  172:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salphg.F' (mode='fix')..
  136:      call getpr(ipr)
  137:
  138:#if DEBUG <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salphg.F' (mode='fix')..
  139:C ncheck = 1 checks if the matrix inversion is OK
  140:       ncheck = 1
  141:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/salphg.F' (mode='fix')..
  141:#else
  142:       ncheck = 0
  143:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
    8:Cgetarg...info...           use_to_add ['secmt2', 'm_struc_def']
    9:Cgetarg...info...           use_to_add ['secmat', 'm_struc_def']
   10:#define BLAS3 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  354:      integer oa,oacopy,oadot,oalph,occd,odiawk,ogma,oh,oiax,ontab,oo,
  355:     .  os,osii,osil,osll,osod,osoph,owk,owk2,owk3,oxsidt,opprel,oohp1
  356:#if IREP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  356:#if IREP
  357:      integer oxsi,onewa
  358:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  529:
  530:C --- Change representation interactively ---
  531:#if IREP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  542:        call rlse(oo)
  543:      endif
  544:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  544:#else
  545:      if (bittst(lham,8)) call rx('uncomment IREP in secmat')
  546:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  687:
  688:C --- Change representation interactively ---
  689:#if IREP <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  703:        call dcopy(ldim,w(onewa),1,w(oalph),1)
  704:      endif
  705:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  758:        endif
  759:
  760:#if NC <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  781:
  782:        else
  783:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  795:     .      indxsh,w(oohp1),vorb,w(oh))
  796:          endif
  797:#if NC <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  797:#if NC
  798:        endif
  799:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  911:
  912:C --- Eigenvalues and eigenvectors of H ---
  913:#if BLAS3 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  913:#if BLAS3
  914:      lx = .true.
  915:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  915:#else
  916:      lx = .false.
  917:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  921:      lov = 1
  922:      if (bittst(lham,32)) lov = 2
  923:#if SIGMO <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  923:#if SIGMO
  924:      if (lrsig .ne. 0) lov = 3
  925:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  931:        j = min(9,ldimx)
  932:        if (iprint() .ge. 35) j = ldimx
  933:#if LINUX_PGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  933:#if LINUX_PGI
  934:        do  18  ii = 1, 1
  935:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmat.F' (mode='fix')..
  935:#else
  936:        do  18  ii = 1, 2
  937:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  182:
  183:C --- Diagonalize ---
  184:#if BLAS3 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  184:#if BLAS3
  185:      lx = .true.
  186:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  186:#else
  187:      lx = .false.
  188:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  202:        j = min(9,ldimx)
  203:        if (ipr .ge. 35) j = ldimx
  204:#if LINUX_PGI <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  204:#if LINUX_PGI
  205:        do  18  ii = 1, 1
  206:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/secmtn.F' (mode='fix')..
  206:#else
  207:        do  18  ii = 1, 2
  208:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  116:      end
  117:
  118:#if TEST <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  198:      call prmx('from shorbz',pos2,3,3,48)
  199:      end
  200:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  199:      end
  200:#endif
  201:#if TEST2 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/shorps.F' (mode='fix')..
  230:
  231:      end
  232:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   71:C  +2 is margin
   72:C         n=n+2
   73:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   73:#ifdef ALIGNMENT128
   74:        if (mod(n,2).eq.1) n=n+1
   75:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   82:C  +2 is margin
   83:C         n=n+2
   84:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   84:#ifdef ALIGNMENT128
   85:        if (mod(n,2).eq.1) n=n+1
   86:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   93:C  +2 is margin
   94:C         n=n+2
   95:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
   95:#ifdef ALIGNMENT128
   96:        if (mod(n,2).eq.1) n=n+1
   97:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  104:C  +2 is margin
  105:C         n=n+2
  106:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  106:#ifdef ALIGNMENT128
  107:        if (mod(n,2).eq.1) n=n+1
  108:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  115:C  +2 is margin
  116:C         n=n+2
  117:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  117:#ifdef ALIGNMENT128
  118:        if (mod(n,2).eq.1) n=n+1
  119:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  126:C  +2 is margin
  127:C         n=n+2
  128:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  128:#ifdef ALIGNMENT128
  129:        if (mod(n,2).eq.1) n=n+1
  130:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  137:C  +2 is margin
  138:C         n=n+2
  139:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  139:#ifdef ALIGNMENT128
  140:        if (mod(n,2).eq.1) n=n+1
  141:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  148:C  +2 is margin
  149:C         n=n+2
  150:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  150:#ifdef ALIGNMENT128
  151:        if (mod(n,2).eq.1) n=n+1
  152:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  159:C  +2 is margin
  160:C         n=n+2
  161:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  161:#ifdef ALIGNMENT128
  162:        if (mod(n,2).eq.1) n=n+1
  163:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  170:C  +2 is margin
  171:C         n=n+2
  172:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  172:#ifdef ALIGNMENT128
  173:        if (mod(n,2).eq.1) n=n+1
  174:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  181:C  +2 is margin
  182:C         n=n+2
  183:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  183:#ifdef ALIGNMENT128
  184:        if (mod(n,2).eq.1) n=n+1
  185:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  192:C  +2 is margin
  193:C         n=n+2
  194:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  194:#ifdef ALIGNMENT128
  195:        if (mod(n,2).eq.1) n=n+1
  196:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  203:C  +2 is margin
  204:C         n=n+2
  205:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  205:#ifdef ALIGNMENT128
  206:        if (mod(n,2).eq.1) n=n+1
  207:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  214:C  +2 is margin
  215:C         n=n+2
  216:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  216:#ifdef ALIGNMENT128
  217:        if (mod(n,2).eq.1) n=n+1
  218:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  225:C  +2 is margin
  226:C         n=n+2
  227:#ifdef ALIGNMENT128 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  227:#ifdef ALIGNMENT128
  228:        if (mod(n,2).eq.1) n=n+1
  229:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  283:
  284:      n=len_trim(str0)
  285:#if STRUC_DEBUG_WRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  285:#if STRUC_DEBUG_WRITE
  286:      write(*,*)thisname,' <',str0(:n),'>'
  287:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  456:      character(22):: thisname='pack5upack5_realbody'
  457:
  458:#if STRUC_DEBUG_WRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  458:#if STRUC_DEBUG_WRITE
  459:      write(*,*) thisname,': address=',%loc(struc),len(sname)
  460:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  479:      if (itype.eq.0) then
  480:
  481:#if STRUC_DEBUG_WRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  481:#if STRUC_DEBUG_WRITE
  482:         write(*,*) thisname,': pass x1,...,x5'
  483:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  511:      else
  512:
  513:#if STRUC_DEBUG_WRITE <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/sp2cls.F' (mode='fix')..
  514:         write(*,*) thisname,': x1 is id, x1=',x1
  515:         write(*,*) thisname,': pass x2,,,.x5'
  516:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/spackv_array_copy.F' (mode='fix')..
  123:      end subroutine lsets_bitop_i8
  124:
  125:#if 0 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/spackv_array_copy.F' (mode='fix')..
  142:
  143:
  144:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/subzi.F' (mode='fix')..
    1:#define MPI 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
    1:#define MULLIKEN 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  692:      allocate(evecc(ndimhx,ndimhx),work(ndimhx,ndimhx))
  693:
  694:#if MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  697:      if (j .ne. 0) call rx('mullmf: failed to generate overlap')
  698:      call zgetri(ndimhx,evecc,ndimhx,ipiv,work,ndimhx**2,j)
  699:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  706:     .        ' outside range (1:%i)',k,ndimhx)
  707:          endif
  708:#if MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  708:#if MULLIKEN
  709:         wk(i) = wk(i) + evecc(i,k)*evec(k,i)
  710:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  710:#else
  711:         wk(i) = wk(i) + dconjg(evec(k,i))*evec(k,i)
  712:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  713:        enddo
  714:
  715:#ifndef MULLIKEN <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/suqlst.F' (mode='fix')..
  718:          call rx('bug in suqlse')
  719:       endif
  720:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
    2:Cgetarg...info...           structure ['symdmu', 'spec', 'sspec']
    3:Cgetarg...info...           use_to_add ['symdmu', 'm_struc_def']
    4:#define F90 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   64:      logical cmdopt
   65:      double precision eula(3),ddet33,xx
   66:#if F90 | AUTO_ARRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   68:      double complex u(2,2,ng)
   69:C     double complex s11,s12,s21,s22,su(2,2),usu(2,2)
   70:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/symdmu.F' (mode='fix')..
   72:      parameter(ngmx=48)
   73:      double complex u(2,2,ngmx)
   74:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trs.F' (mode='fix')..
   56:      call daxpy(idim,-1d0,alpha(1+ldim),1,sii,idim+1)
   57:      call defask(i)
   58:#ifndef YQINV <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trs.F' (mode='fix')..
   58:#ifndef YQINV
   59:      i = 0
   60:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trs.F' (mode='fix')..
   91:
   92:C --- S_ll --> S_ll + S_il^dagger A_il ---
   93:#ifndef CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trs.F' (mode='fix')..
   93:#ifndef CRAY
   94:      call yyhmpy('c','n',ldim,idim,sil,a,.true.,sll)
   95:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trs.F' (mode='fix')..
   96:      call dscal(li,-1d0,sil(0,0,2),1)
   97:      call zhmpy(sil,1,idim,li,a,idim,1,li,sll,ldim,.true.,idim)
   98:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   36:C --- S^dot_ll --> S^dot_ll + A_li S^dot_il + S^dot_li A_il ---
   37:C     call tcn('call yyhmpy')
   38:#ifndef CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   39:      call yyhmpy('c','n',ldim,idim,a,sil,.false.,sll)
   40:      call yyhmpy('c','n',ldim,idim,sil,a,.false.,sll)
   41:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   45:c      call dscal(li,-1d0,sil(0,0,2),1)
   46:c      call zhmpy(sil,1,idim,li,a,idim,1,li,sll,ldim,.false.,idim)
   47:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   61:C --- S^dot_ll --> S^dot_ll - A_li (xsi^dot - S^dot)_ii A_il ---
   62:C     call tcn('call yyhmpy')
   63:#ifndef CRAY <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   63:#ifndef CRAY
   64:      call yyhmpy('c','n',ldim,idim,a,sil,.true.,sll)
   65:#else <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/trsdot.F' (mode='fix')..
   66:c      call dscal(li,-1d0,a(0,0,2),1)
   67:c      call zhmpy(a,1,idim,li,sil,idim,1,li,sll,ldim,.true.,idim)
   68:#endif <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
WARNING while processing 'subs/yyhmul.F' (mode='fix')..
    1:#define BLAS3 1 <== non-space/digit char '#' found in column 1 of fixed Fortran code, interpreting line as comment line
moddict= {'m_struc_func_sp2cls': '$(subs_obj_path)/sp2cls.o', 'm_struc_def': '$(subs_obj_path)/m_struc_def.o', 'm_toksw': '$(subs_obj_path)/m_toksw.o', 'm_susite_func': '$(subs_obj_path)/susite.o', 'm_rdctrl2_func': '$(subs_obj_path)/rdctrl2.o', 'm_psigd': '$(subs_obj_path)/m_psigd.o', 'm_struc_func': '$(subs_obj_path)/m_struc_func.o', 'm_hamindex': '$(subs_obj_path)/m_hamindex.o', 'm_sstrnsname': '$(subs_obj_path)/m_sstrnsname.o', 'm_rdctrl': '$(subs_obj_path)/m_rdctrl.o', 'm_gtv': '$(subs_obj_path)/m_gtv.o', 'm_rdctrlchk': '$(subs_obj_path)/m_rdctrlchk.o'}
pf= (\Wifindiv\s*\(|\Wifindiv2\s*\(|\Wfopb\s*\(|\Wpolinta\s*\(|\Wauxfun\s*\(|\Wauxfun6\s*\(|\Wauxfun6xn\s*\(|\Waiocor\s*\(|\Waiogen\s*\(|\Waiomom\s*\(|\Waiomp\s*\(|\Waiopar\s*\(|\Waiopot\s*\(|\Waiorme\s*\(|\Waiosop\s*\(|\Waiova\s*\(|\Wio4g\s*\(|\Wio3smm\s*\(|\Wio4mm\s*\(|\Wio4pp\s*\(|\Wio4pt\s*\(|\Wio4sg\s*\(|\Wio4smm\s*\(|\Wio4spp\s*\(|\Wio4spt\s*\(|\Wio47um\s*\(|\Wio47up\s*\(|\Wio5sg\s*\(|\Wio5smm\s*\(|\Wio5spp\s*\(|\Wio5spt\s*\(|\Wavwsr\s*\(|\Wmxxyz\s*\(|\Wiget\s*\(|\Wpvclst\s*\(|\Wcmplat\s*\(|\Wdrr2\s*\(|\Wefrng2\s*\(|\Wexcsan\s*\(|\Wf100\s*\(|\Wf102\s*\(|\Wlatrel\s*\(|\Wd3nrm2\s*\(|\Wgetef\s*\(|\Wgrpeql\s*\(|\Wiclbas\s*\(|\Wiclbsj\s*\(|\Wiofa\s*\(|\Wiomoms\s*\(|\Wioorbp\s*\(|\Wiors\s*\(|\Wiosg\s*\(|\Wiosg1\s*\(|\Wiosg2\s*\(|\Wiosite\s*\(|\Wiosits\s*\(|\Wiostr\s*\(|\Wiostr1\s*\(|\Wiostr2\s*\(|\Wiostr4\s*\(|\Wlatvec\s*\(|\Wll\s*\(|\Wgetikt\s*\(|\Wuarray_size\s*\(|\Wubz_size\s*\(|\Wuctrl_size\s*\(|\Wugw_size\s*\(|\Wuham_size\s*\(|\Wulat_size\s*\(|\Wumix_size\s*\(|\Wumove_size\s*\(|\Wuoptic_size\s*\(|\Wuordn_size\s*\(|\Wupot_size\s*\(|\Wusite_size\s*\(|\Wuspec_size\s*\(|\Wustr_size\s*\(|\Wutb_size\s*\(|\Wuarray_size\s*\(|\Wubz_size\s*\(|\Wuctrl_size\s*\(|\Wugw_size\s*\(|\Wuham_size\s*\(|\Wulat_size\s*\(|\Wumix_size\s*\(|\Wumove_size\s*\(|\Wuoptic_size\s*\(|\Wuordn_size\s*\(|\Wupot_size\s*\(|\Wusite_size\s*\(|\Wuspec_size\s*\(|\Wustr_size\s*\(|\Wutb_size\s*\(|\Wtksw\s*\(|\Widxpr\s*\(|\Wiosiga\s*\(|\Wddet33\s*\(|\Wcosvec\s*\(|\Waginv\s*\(|\Wnnrl\s*\(|\Wovcall\s*\(|\Wparmxp\s*\(|\Woalpha\s*\(|\Wchebev\s*\(|\Wdanrm2\s*\(|\Wroth\s*\(|\Wprotht\s*\(|\Wdistm\s*\(|\Wuarray_size\s*\(|\Wubz_size\s*\(|\Wuctrl_size\s*\(|\Wugw_size\s*\(|\Wuham_size\s*\(|\Wulat_size\s*\(|\Wumix_size\s*\(|\Wumove_size\s*\(|\Wuoptic_size\s*\(|\Wuordn_size\s*\(|\Wupot_size\s*\(|\Wusite_size\s*\(|\Wuspec_size\s*\(|\Wustr_size\s*\(|\Wutb_size\s*\(|\Wspgeql\s*\(|\Wstrdif\s*\(|\Wdcmp\s*\(|\Wiobzwt\s*\(|\Wigann\s*\(|\Wnewsigmasw\s*\(|\Wpmtsig\s*\(|\Wdebugmode\s*\(|\Wsigswitch\s*\(|\Wfullmesh\s*\(|\Wnoshorbz\s*\(|\Wmatmul_pwhovl\s*\(|\Wvolsph\s*\(|\Wsclp\s*\()
using cached lmv7.F
using cached lmfav7.F
using cached fp/addbkg.F
using cached fp/addrbl.F
using cached fp/atqval.F
using cached fp/augmat.F
using cached fp/augmbl.F
using cached fp/bndconn_v2.F
using cached fp/bndfp.F
using cached fp/bstrux.F
using cached fp/chimedit.F
using cached fp/corprm.F
using cached fp/dfaugm.F
using cached fp/dfqkkl.F
using cached fp/dfratm.F
using cached fp/dfrce.F
using cached fp/efldos.F
using cached fp/elocp.F
using cached fp/fklbl.F
using cached fp/flocbl.F
using cached fp/fpchk.F
using cached fp/fradhd.F
using cached fp/fradpk.F
using cached fp/fsmbl.F
using cached fp/fsmbpw.F
using cached fp/ftlxp.F
using cached fp/gaugm.F
using cached fp/genqbz.F
using cached fp/getcor.F
using cached fp/gfigbl.F
using cached fp/ggugbl.F
using cached fp/ghibl.F
using cached fp/ghigbl.F
using cached fp/ghios.F
using cached fp/gklbl.F
using cached fp/gklft.F
using cached fp/gklq.F
using cached fp/gtbsl2.F
using cached fp/gvsym.F
using cached fp/gwcphi.F
using cached fp/hambl.F
using cached fp/hambls.F
using cached fp/hgugbl.F
using cached fp/hhibl.F
using cached fp/hhigbl.F
using cached fp/hhugbl.F
using cached fp/hklbl.F
using cached fp/hklft.F
using cached fp/hklgbl.F
using cached fp/hklos.F
using cached fp/hsibl.F
using cached fp/hsmbl.F
using cached fp/hxpbl.F
using cached fp/hxpgbl.F
using cached fp/hxpos.F
using cached fp/ioden.F
using cached fp/jxpos.F
using cached fp/lgstar.F
using cached fp/lindsc.F
using cached fp/lmaux.F
using cached fp/lmfopb.F
using cached fp/lmfp.F
using cached fp/locpot.F
using cached fp/loctsh.F
using cached fp/makusp.F
using cached fp/makusq.F
using cached fp/mixrho.F
using cached fp/mkdmtu.F
using cached fp/mkehkf.F
using cached fp/mkekin.F
using cached fp/mkewgt.F
using cached fp/mkorbm.F
using cached fp/mkpdos.F
using cached fp/mkpot.F
using cached fp/mkrout.F
using cached fp/momusl.F
using cached fp/mshdot.F
using cached fp/mshint.F
using cached fp/mshn3p.F
using cached fp/mshvmt.F
using cached fp/mullmf.F
using cached fp/ncutcorrect.F
using cached fp/ovlocr.F
using cached fp/ovlpfa.F
using cached fp/paug1.F
using cached fp/pkl2ro.F
using cached fp/pnunew.F
using cached fp/poinsp.F
using cached fp/polinta.F
using cached fp/potpus.F
using cached fp/praugm.F
using cached fp/prrhat.F
using cached fp/prtev.F
using cached fp/pwmat.F
using cached fp/pzhev.F
using cached fp/rdovfa.F
using cached fp/rhgcmp.F
using cached fp/rhogkl.F
using cached fp/rhomom.F
using cached fp/rlocbl.F
using cached fp/rsedit.F
using cached fp/rsibl.F
using cached fp/setofl.F
using cached fp/sgvsym.F
using cached fp/smcorm.F
using cached fp/smhsbl.F
using cached fp/smshft.F
using cached fp/smves.F
using cached fp/smvxcm.F
using cached fp/sopert.F
using cached fp/splrho.F
using cached fp/stonerpb.F
using cached fp/stonerrsa.F
using cached fp/sugw.F
using cached fp/suphas.F
using cached fp/supot.F
using cached fp/suq0x.F
using cached fp/surho.F
using cached fp/suylg.F
using cached fp/symrho.F
using cached fp/tbhsi.F
using cached fp/totfrc.F
using cached fp/ugcomp.F
using cached fp/vcdmel.F
using cached fp/vesft.F
using cached fp/vesgcm.F
using cached fp/vlm2us.F
using cached fp/vxcnsp.F
using cached fp/vxtrap.F
using cached fp/wrhomt.F
using cached subs/addbas.F
using cached subs/addrwf.F
using cached subs/aiocls.F
using cached subs/aiocor.F
using cached subs/aiogen.F
using cached subs/aiomom.F
using cached subs/aiomp.F
using cached subs/aiopar.F
using cached subs/aiopot.F
using cached subs/aiorme.F
using cached subs/aiosop.F
using cached subs/aiova.F
using cached subs/aioxtn.F
using cached subs/amagnc.F
using cached subs/angtab.F
using cached subs/asadc.F
using cached subs/asados.F
using cached subs/asamad.F
using cached subs/asaqmp.F
using cached subs/asars.F
using cached subs/asavqm.F
using cached subs/asldau.F
using cached subs/asvsph.F
using cached subs/asymop.F
using cached subs/atfold.F
using cached subs/atomsr.F
using cached subs/atsev.F
using cached subs/atwf.F
using cached subs/avwsr.F
using cached subs/baslst.F
using cached subs/besslr.F
using cached subs/bloch.F
using cached subs/blochi.F
using cached subs/bzints.F
using cached subs/bzmesh.F
using cached subs/bzmio.F
using cached subs/bzwts.F
using cached subs/bzwtsf.F
using cached subs/ccutup.F
using cached subs/chgmsh.F
using cached subs/chkdmu.F
using cached subs/clabel.F
using cached subs/clist.F
using cached subs/clsprm.F
using cached subs/clsset.F
using cached subs/cmplat.F
using cached subs/config.F
using cached subs/contet.F
using cached subs/cshear.F
using cached subs/defpq.F
using cached subs/defspc.F
using cached subs/defwsr.F
using cached subs/delstd.F
using cached subs/delstp.F
using cached subs/dfphi.F
using cached subs/dlmn.F
using cached subs/dosio.F
using cached subs/dosspl.F
using cached subs/dostet.F
using cached subs/dpdbyl.F
using cached subs/dpdftr.F
using cached subs/drr2.F
using cached subs/dstrbp.F
using cached subs/dvdos.F
using cached subs/easypbe.F
using cached subs/efrng2.F
using cached subs/enutod.F
using cached subs/evxc.F
using cached subs/evxcp.F
using cached subs/evxcv.F
using cached subs/f100.F
using cached subs/f102.F
using cached subs/fermi.F
using cached subs/findes.F
using cached subs/fixef0.F
using cached subs/fixpos.F
using cached subs/fovlp.F
using cached subs/freeat.F
using cached subs/freeat.bk.F
using cached subs/fswgts.F
using cached subs/gengrp.F
using cached subs/gensym.F
using cached subs/getbzp.F
using cached subs/getef.F
using cached subs/getq.F
using cached subs/getqp.F
using cached subs/ggiml.F
using cached subs/gh1c.F
using cached subs/ghdiml.F
using cached subs/groupg.F
using cached subs/grpfnd.F
using cached subs/grpgen.F
using cached subs/grpop.F
using cached subs/gtbsl1.F
using cached subs/gtbvec.F
using cached subs/gtpcor.F
using cached subs/gvctof.F
using cached subs/gvlist.F
using cached subs/gvlst2.F
using cached subs/gvmtch.F
using cached subs/gxpml.F
using cached subs/hamfb3.F
using cached subs/hanr.F
using cached subs/hansmd.F
using cached subs/hansmr.F
using cached subs/hansr.F
using cached subs/hansr4.F
using cached subs/hansr5.F
using cached subs/hansrz.F
using cached subs/hanszd.F
using cached subs/hdxpml.F
using cached subs/hft2rs.F
using cached subs/hmladb.F
using cached subs/hmltnc.F
using cached subs/hmltns.F
using cached subs/hnsmft.F
using cached subs/hsmq.F
using cached subs/hstrux.F
using cached subs/i3cntr.F
using cached subs/iax2fd.F
using cached subs/ibloch.F
using cached subs/iclbas.F
using cached subs/intnos.F
using cached subs/invalp.F
using cached subs/invbl.F
using cached subs/iobsmv.F
using cached subs/ioeula.F
using cached subs/iofa.F
using cached subs/iomagf.F
using cached subs/iomomq.F
using cached subs/iomoms.F
using cached subs/iomomx.F
using cached subs/ioorbp.F
using cached subs/iopos.F
using cached subs/iorbtm.F
using cached subs/iors.F
using cached subs/iosave.F
using cached subs/iosg.F
using cached subs/iosite.F
using cached subs/iosits.F
using cached subs/iostr.F
using cached subs/ioxbs.F
using cached subs/kink2g.F
using cached subs/latlim.F
using cached subs/lattc.F
using cached subs/lattdf.F
using cached subs/lattic.F
using cached subs/latvec.F
using cached subs/ldau.F
using cached subs/ll.F
using cached subs/lx2vec.F
using cached subs/m_gtv.F
using cached subs/m_hamindex.F
using cached subs/m_psigd.F
using cached subs/m_rdctrl.F
using cached subs/m_rdctrlchk.F
using cached subs/m_sstrnsname.F
using cached subs/m_struc_def.F
using cached subs/m_struc_func.F
using cached subs/m_toksw.F
using cached subs/madmat.F
using cached subs/makbet.F
using cached subs/makdia.F
using cached subs/makdla.F
using cached subs/makdos.F
using cached subs/makdsd.F
using cached subs/makidx.F
using cached subs/makipt.F
using cached subs/maknos.F
using cached subs/maknrs.F
using cached subs/makpph.F
using cached subs/makptf.F
using cached subs/makrm0.F
using cached subs/makrot.F
using cached subs/makrwf.F
using cached subs/maks0.F
using cached subs/mcasim.F
using cached subs/mchan.F
using cached subs/mkbdot.F
using cached subs/mkbfld.F
using cached subs/mkcond.F
using cached subs/mkplat.F
using cached subs/mkppar.F
using cached subs/mkqp.F
using cached subs/mkrtab.F
using cached subs/mksbet.F
using cached subs/mksod.F
using cached subs/mksoph.F
using cached subs/mksym.F
using cached subs/mktra2.F
using cached subs/mpint.F
using cached subs/mshsiz.F
using cached subs/mstrx2.F
using cached subs/mstrx3.F
using cached subs/mtchae.F
using cached subs/mxmymz.F
using cached subs/newalp.F
using cached subs/nghbor.F
using cached subs/nmefac.F
using cached subs/nmham.F
using cached subs/nmpot.F
using cached subs/nnrl.F
using cached subs/norm2g.F
using cached subs/nosbzm.F
using cached subs/nwit.F
using cached subs/oraddp.F
using cached subs/orbl.F
using cached subs/ovlchk.F
using cached subs/ovmin.F
using cached subs/pairc.F
using cached subs/parmxp.F
using cached subs/pgbasp.F
using cached subs/pgfp.F
using cached subs/pgfset.F
using cached subs/phidx.F
using cached subs/phvsfp.F
using cached subs/pkli.F
using cached subs/plana.F
using cached subs/pp2enu.F
using cached subs/pptrns.F
using cached subs/pqmix.F
using cached subs/prdmts.F
using cached subs/prjpos.F
using cached subs/prmx.F
using cached subs/projql.F
using cached subs/prrmsh.F
using cached subs/prtbas.F
using cached subs/psymop.F
using cached subs/pvsms2.F
using cached subs/qdist.F
using cached subs/radgkl.F
using cached subs/radmsh.F
using cached subs/radpkl.F
using cached subs/rdctrl2.F
using cached subs/rdeq.F
using cached subs/rdsigm.F
using cached subs/rdsigm2.F
using cached subs/relax.F
using cached subs/remhyb.F
using cached subs/rgrme.F
using cached subs/rlxstp.F
using cached subs/rmesh.F
using cached subs/rnatm.F
using cached subs/ropbes.F
using cached subs/ropbes.old.F
using cached subs/ropbes_alternative.F
using cached subs/ropcsm.F
using cached subs/roplat.F
using cached subs/ropyln.F
using cached subs/ropyln1.F
using cached subs/rotevs.F
using cached subs/roth.F
using cached subs/rothrm.F
using cached subs/rotpnt.F
using cached subs/rotspn.F
using cached subs/rotspu.F
using cached subs/rotwv.F
using cached subs/rotycs.F
using cached subs/rseq.F
using cached subs/rsmsym.F
using cached subs/rsort.F
using cached subs/rstr0.F
using cached subs/s2oka.F
using cached subs/s2sph.F
using cached subs/saiwav.F
using cached subs/salias.F
using cached subs/salph1.F
using cached subs/salphg.F
using cached subs/savvxc.F
using cached subs/sblham.F
using cached subs/scalpv.F
using cached subs/scg.F
using cached subs/scglp1.F
using cached subs/sclwsr.F
using cached subs/secmat.F
using cached subs/secmtn.F
using cached subs/setcg.F
using cached subs/sfill.F
using cached subs/shear.F
using cached subs/shffle.F
using cached subs/shftpp.F
using cached subs/shoist.F
using cached subs/shopol.F
using cached subs/shorbz.F
using cached subs/shorps.F
using cached subs/shortn.F
using cached subs/shoshl.F
using cached subs/siteid.F
using cached subs/slinz.F
using cached subs/slist.F
using cached subs/soprm.F
using cached subs/sp2cls.F
using cached subs/spackv_array_copy.F
using cached subs/spcgrp.F
using cached subs/splcls.F
using cached subs/splwts.F
using cached subs/sstrxq.F
using cached subs/stoner.F
using cached subs/strdif.F
using cached subs/struc_strn.F
using cached subs/strx00.F
using cached subs/strxq.F
using cached subs/strxsu.F
using cached subs/subasi.F
using cached subs/subzi.F
using cached subs/suclst.F
using cached subs/suctrl.F
using cached subs/sudmtu.F
using cached subs/suemph.F
using cached subs/sugcut.F
using cached subs/suham.F
using cached subs/suham2.F
using cached subs/suidx.F
using cached subs/suldau.F
using cached subs/sumlst.F
using cached subs/sumsro.F
using cached subs/suqlst.F
using cached subs/susite.F
using cached subs/switch.F
using cached subs/sylm.F
using cached subs/sylmnc.F
using cached subs/symcry.F
using cached subs/symdmu.F
using cached subs/symfor.F
using cached subs/symiax.F
using cached subs/symlat.F
using cached subs/symprj.F
using cached subs/symq.F
using cached subs/symstr.F
using cached subs/symtbl.F
using cached subs/tailsm.F
using cached subs/tetirr.F
using cached subs/trs.F
using cached subs/trsdot.F
using cached subs/trysop.F
using cached subs/uspecb.F
using cached subs/v0intr.F
using cached subs/vecpkl.F
using cached subs/veecomp.F
using cached subs/vldau.F
using cached subs/volsph.F
using cached subs/vsl.F
using cached subs/vxc0sp.F
using cached subs/vxcgga.F
using cached subs/vxcgr2.F
using cached subs/vxnloc.F
using cached subs/writebasis.F
using cached subs/xlgen.F
using cached subs/xxxbnd.F
using cached subs/xxxdif.F
using cached subs/ylmrtg.F
using cached subs/yyhmul.F
using cached subs/zslabl.F
using cached lmv7.F
using cached lmfav7.F
using cached fp/addbkg.F
using cached fp/addrbl.F
using cached fp/atqval.F
using cached fp/augmat.F
using cached fp/augmbl.F
using cached fp/bndconn_v2.F
using cached fp/bndfp.F
using cached fp/bstrux.F
using cached fp/chimedit.F
using cached fp/corprm.F
using cached fp/dfaugm.F
using cached fp/dfqkkl.F
using cached fp/dfratm.F
using cached fp/dfrce.F
using cached fp/efldos.F
using cached fp/elocp.F
using cached fp/fklbl.F
using cached fp/flocbl.F
using cached fp/fpchk.F
using cached fp/fradhd.F
using cached fp/fradpk.F
using cached fp/fsmbl.F
using cached fp/fsmbpw.F
using cached fp/ftlxp.F
using cached fp/gaugm.F
using cached fp/genqbz.F
using cached fp/getcor.F
using cached fp/gfigbl.F
using cached fp/ggugbl.F
using cached fp/ghibl.F
using cached fp/ghigbl.F
using cached fp/ghios.F
using cached fp/gklbl.F
using cached fp/gklft.F
using cached fp/gklq.F
using cached fp/gtbsl2.F
using cached fp/gvsym.F
using cached fp/gwcphi.F
using cached fp/hambl.F
using cached fp/hambls.F
using cached fp/hgugbl.F
using cached fp/hhibl.F
using cached fp/hhigbl.F
using cached fp/hhugbl.F
using cached fp/hklbl.F
using cached fp/hklft.F
using cached fp/hklgbl.F
using cached fp/hklos.F
using cached fp/hsibl.F
using cached fp/hsmbl.F
using cached fp/hxpbl.F
using cached fp/hxpgbl.F
using cached fp/hxpos.F
using cached fp/ioden.F
using cached fp/jxpos.F
using cached fp/lgstar.F
using cached fp/lindsc.F
using cached fp/lmaux.F
using cached fp/lmfopb.F
using cached fp/lmfp.F
using cached fp/locpot.F
using cached fp/loctsh.F
using cached fp/makusp.F
using cached fp/makusq.F
using cached fp/mixrho.F
using cached fp/mkdmtu.F
using cached fp/mkehkf.F
using cached fp/mkekin.F
using cached fp/mkewgt.F
using cached fp/mkorbm.F
using cached fp/mkpdos.F
using cached fp/mkpot.F
using cached fp/mkrout.F
using cached fp/momusl.F
using cached fp/mshdot.F
using cached fp/mshint.F
using cached fp/mshn3p.F
using cached fp/mshvmt.F
using cached fp/mullmf.F
using cached fp/ncutcorrect.F
using cached fp/ovlocr.F
using cached fp/ovlpfa.F
using cached fp/paug1.F
using cached fp/pkl2ro.F
using cached fp/pnunew.F
using cached fp/poinsp.F
using cached fp/polinta.F
using cached fp/potpus.F
using cached fp/praugm.F
using cached fp/prrhat.F
using cached fp/prtev.F
using cached fp/pwmat.F
using cached fp/pzhev.F
using cached fp/rdovfa.F
using cached fp/rhgcmp.F
using cached fp/rhogkl.F
using cached fp/rhomom.F
using cached fp/rlocbl.F
using cached fp/rsedit.F
using cached fp/rsibl.F
using cached fp/setofl.F
using cached fp/sgvsym.F
using cached fp/smcorm.F
using cached fp/smhsbl.F
using cached fp/smshft.F
using cached fp/smves.F
using cached fp/smvxcm.F
using cached fp/sopert.F
using cached fp/splrho.F
using cached fp/stonerpb.F
using cached fp/stonerrsa.F
using cached fp/sugw.F
using cached fp/suphas.F
using cached fp/supot.F
using cached fp/suq0x.F
using cached fp/surho.F
using cached fp/suylg.F
using cached fp/symrho.F
using cached fp/tbhsi.F
using cached fp/totfrc.F
using cached fp/ugcomp.F
using cached fp/vcdmel.F
using cached fp/vesft.F
using cached fp/vesgcm.F
using cached fp/vlm2us.F
using cached fp/vxcnsp.F
using cached fp/vxtrap.F
using cached fp/wrhomt.F
using cached subs/addbas.F
using cached subs/addrwf.F
using cached subs/aiocls.F
using cached subs/aiocor.F
using cached subs/aiogen.F
using cached subs/aiomom.F
using cached subs/aiomp.F
using cached subs/aiopar.F
using cached subs/aiopot.F
using cached subs/aiorme.F
using cached subs/aiosop.F
using cached subs/aiova.F
using cached subs/aioxtn.F
using cached subs/amagnc.F
using cached subs/angtab.F
using cached subs/asadc.F
using cached subs/asados.F
using cached subs/asamad.F
using cached subs/asaqmp.F
using cached subs/asars.F
using cached subs/asavqm.F
using cached subs/asldau.F
using cached subs/asvsph.F
using cached subs/asymop.F
using cached subs/atfold.F
using cached subs/atomsr.F
using cached subs/atsev.F
using cached subs/atwf.F
using cached subs/avwsr.F
using cached subs/baslst.F
using cached subs/besslr.F
using cached subs/bloch.F
using cached subs/blochi.F
using cached subs/bzints.F
using cached subs/bzmesh.F
using cached subs/bzmio.F
using cached subs/bzwts.F
using cached subs/bzwtsf.F
using cached subs/ccutup.F
using cached subs/chgmsh.F
using cached subs/chkdmu.F
using cached subs/clabel.F
using cached subs/clist.F
using cached subs/clsprm.F
using cached subs/clsset.F
using cached subs/cmplat.F
using cached subs/config.F
using cached subs/contet.F
using cached subs/cshear.F
using cached subs/defpq.F
using cached subs/defspc.F
using cached subs/defwsr.F
using cached subs/delstd.F
using cached subs/delstp.F
using cached subs/dfphi.F
using cached subs/dlmn.F
using cached subs/dosio.F
using cached subs/dosspl.F
using cached subs/dostet.F
using cached subs/dpdbyl.F
using cached subs/dpdftr.F
using cached subs/drr2.F
using cached subs/dstrbp.F
using cached subs/dvdos.F
using cached subs/easypbe.F
using cached subs/efrng2.F
using cached subs/enutod.F
using cached subs/evxc.F
using cached subs/evxcp.F
using cached subs/evxcv.F
using cached subs/f100.F
using cached subs/f102.F
using cached subs/fermi.F
using cached subs/findes.F
using cached subs/fixef0.F
using cached subs/fixpos.F
using cached subs/fovlp.F
using cached subs/freeat.F
using cached subs/freeat.bk.F
using cached subs/fswgts.F
using cached subs/gengrp.F
using cached subs/gensym.F
using cached subs/getbzp.F
using cached subs/getef.F
using cached subs/getq.F
using cached subs/getqp.F
using cached subs/ggiml.F
using cached subs/gh1c.F
using cached subs/ghdiml.F
using cached subs/groupg.F
using cached subs/grpfnd.F
using cached subs/grpgen.F
using cached subs/grpop.F
using cached subs/gtbsl1.F
using cached subs/gtbvec.F
using cached subs/gtpcor.F
using cached subs/gvctof.F
using cached subs/gvlist.F
using cached subs/gvlst2.F
using cached subs/gvmtch.F
using cached subs/gxpml.F
using cached subs/hamfb3.F
using cached subs/hanr.F
using cached subs/hansmd.F
using cached subs/hansmr.F
using cached subs/hansr.F
using cached subs/hansr4.F
using cached subs/hansr5.F
using cached subs/hansrz.F
using cached subs/hanszd.F
using cached subs/hdxpml.F
using cached subs/hft2rs.F
using cached subs/hmladb.F
using cached subs/hmltnc.F
using cached subs/hmltns.F
using cached subs/hnsmft.F
using cached subs/hsmq.F
using cached subs/hstrux.F
using cached subs/i3cntr.F
using cached subs/iax2fd.F
using cached subs/ibloch.F
using cached subs/iclbas.F
using cached subs/intnos.F
using cached subs/invalp.F
using cached subs/invbl.F
using cached subs/iobsmv.F
using cached subs/ioeula.F
using cached subs/iofa.F
using cached subs/iomagf.F
using cached subs/iomomq.F
using cached subs/iomoms.F
using cached subs/iomomx.F
using cached subs/ioorbp.F
using cached subs/iopos.F
using cached subs/iorbtm.F
using cached subs/iors.F
using cached subs/iosave.F
using cached subs/iosg.F
using cached subs/iosite.F
using cached subs/iosits.F
using cached subs/iostr.F
using cached subs/ioxbs.F
using cached subs/kink2g.F
using cached subs/latlim.F
using cached subs/lattc.F
using cached subs/lattdf.F
using cached subs/lattic.F
using cached subs/latvec.F
using cached subs/ldau.F
using cached subs/ll.F
using cached subs/lx2vec.F
using cached subs/m_gtv.F
using cached subs/m_hamindex.F
using cached subs/m_psigd.F
using cached subs/m_rdctrl.F
using cached subs/m_rdctrlchk.F
using cached subs/m_sstrnsname.F
using cached subs/m_struc_def.F
using cached subs/m_struc_func.F
using cached subs/m_toksw.F
using cached subs/madmat.F
using cached subs/makbet.F
using cached subs/makdia.F
using cached subs/makdla.F
using cached subs/makdos.F
using cached subs/makdsd.F
using cached subs/makidx.F
using cached subs/makipt.F
using cached subs/maknos.F
using cached subs/maknrs.F
using cached subs/makpph.F
using cached subs/makptf.F
using cached subs/makrm0.F
using cached subs/makrot.F
using cached subs/makrwf.F
using cached subs/maks0.F
using cached subs/mcasim.F
using cached subs/mchan.F
using cached subs/mkbdot.F
using cached subs/mkbfld.F
using cached subs/mkcond.F
using cached subs/mkplat.F
using cached subs/mkppar.F
using cached subs/mkqp.F
using cached subs/mkrtab.F
using cached subs/mksbet.F
using cached subs/mksod.F
using cached subs/mksoph.F
using cached subs/mksym.F
using cached subs/mktra2.F
using cached subs/mpint.F
using cached subs/mshsiz.F
using cached subs/mstrx2.F
using cached subs/mstrx3.F
using cached subs/mtchae.F
using cached subs/mxmymz.F
using cached subs/newalp.F
using cached subs/nghbor.F
using cached subs/nmefac.F
using cached subs/nmham.F
using cached subs/nmpot.F
using cached subs/nnrl.F
using cached subs/norm2g.F
using cached subs/nosbzm.F
using cached subs/nwit.F
using cached subs/oraddp.F
using cached subs/orbl.F
using cached subs/ovlchk.F
using cached subs/ovmin.F
using cached subs/pairc.F
using cached subs/parmxp.F
using cached subs/pgbasp.F
using cached subs/pgfp.F
using cached subs/pgfset.F
using cached subs/phidx.F
using cached subs/phvsfp.F
using cached subs/pkli.F
using cached subs/plana.F
using cached subs/pp2enu.F
using cached subs/pptrns.F
using cached subs/pqmix.F
using cached subs/prdmts.F
using cached subs/prjpos.F
using cached subs/prmx.F
using cached subs/projql.F
using cached subs/prrmsh.F
using cached subs/prtbas.F
using cached subs/psymop.F
using cached subs/pvsms2.F
using cached subs/qdist.F
using cached subs/radgkl.F
using cached subs/radmsh.F
using cached subs/radpkl.F
using cached subs/rdctrl2.F
using cached subs/rdeq.F
using cached subs/rdsigm.F
using cached subs/rdsigm2.F
using cached subs/relax.F
using cached subs/remhyb.F
using cached subs/rgrme.F
using cached subs/rlxstp.F
using cached subs/rmesh.F
using cached subs/rnatm.F
using cached subs/ropbes.F
using cached subs/ropbes.old.F
using cached subs/ropbes_alternative.F
using cached subs/ropcsm.F
using cached subs/roplat.F
using cached subs/ropyln.F
using cached subs/ropyln1.F
using cached subs/rotevs.F
using cached subs/roth.F
using cached subs/rothrm.F
using cached subs/rotpnt.F
using cached subs/rotspn.F
using cached subs/rotspu.F
using cached subs/rotwv.F
using cached subs/rotycs.F
using cached subs/rseq.F
using cached subs/rsmsym.F
using cached subs/rsort.F
using cached subs/rstr0.F
using cached subs/s2oka.F
using cached subs/s2sph.F
using cached subs/saiwav.F
using cached subs/salias.F
using cached subs/salph1.F
using cached subs/salphg.F
using cached subs/savvxc.F
using cached subs/sblham.F
using cached subs/scalpv.F
using cached subs/scg.F
using cached subs/scglp1.F
using cached subs/sclwsr.F
using cached subs/secmat.F
using cached subs/secmtn.F
using cached subs/setcg.F
using cached subs/sfill.F
using cached subs/shear.F
using cached subs/shffle.F
using cached subs/shftpp.F
using cached subs/shoist.F
using cached subs/shopol.F
using cached subs/shorbz.F
using cached subs/shorps.F
using cached subs/shortn.F
using cached subs/shoshl.F
using cached subs/siteid.F
using cached subs/slinz.F
using cached subs/slist.F
using cached subs/soprm.F
using cached subs/sp2cls.F
using cached subs/spackv_array_copy.F
using cached subs/spcgrp.F
using cached subs/splcls.F
using cached subs/splwts.F
using cached subs/sstrxq.F
using cached subs/stoner.F
using cached subs/strdif.F
using cached subs/struc_strn.F
using cached subs/strx00.F
using cached subs/strxq.F
using cached subs/strxsu.F
using cached subs/subasi.F
using cached subs/subzi.F
using cached subs/suclst.F
using cached subs/suctrl.F
using cached subs/sudmtu.F
using cached subs/suemph.F
using cached subs/sugcut.F
using cached subs/suham.F
using cached subs/suham2.F
using cached subs/suidx.F
using cached subs/suldau.F
using cached subs/sumlst.F
using cached subs/sumsro.F
using cached subs/suqlst.F
using cached subs/susite.F
using cached subs/switch.F
using cached subs/sylm.F
using cached subs/sylmnc.F
using cached subs/symcry.F
using cached subs/symdmu.F
using cached subs/symfor.F
using cached subs/symiax.F
using cached subs/symlat.F
using cached subs/symprj.F
using cached subs/symq.F
using cached subs/symstr.F
using cached subs/symtbl.F
using cached subs/tailsm.F
using cached subs/tetirr.F
using cached subs/trs.F
using cached subs/trsdot.F
using cached subs/trysop.F
using cached subs/uspecb.F
using cached subs/v0intr.F
using cached subs/vecpkl.F
using cached subs/veecomp.F
using cached subs/vldau.F
using cached subs/volsph.F
using cached subs/vsl.F
using cached subs/vxc0sp.F
using cached subs/vxcgga.F
using cached subs/vxcgr2.F
using cached subs/vxnloc.F
using cached subs/writebasis.F
using cached subs/xlgen.F
using cached subs/xxxbnd.F
using cached subs/xxxdif.F
using cached subs/ylmrtg.F
using cached subs/yyhmul.F
using cached subs/zslabl.F
------------ dictionary ------------------
{'hansr4': 'subs/hansr4.F', 'hansr5': 'subs/hansr5.F', 'invbl': 'subs/invbl.F', 'interparam': 'subs/rotwv.F', 'ppi2z': 'fp/gaugm.F', 'hansr1': 'subs/hansr.F', 'hansr2': 'subs/hansr.F', 'spgprd': 'subs/spcgrp.F', 'gtv_i4': 'subs/m_gtv.F', 'imxmnx': 'subs/orbl.F', 'ddet33': 'subs/mkplat.F', 'rotdlmm': 'subs/suham.F', 'aiomp': 'subs/aiomp.F', 'getef': 'subs/getef.F', 'vecpkl': 'subs/vecpkl.F', 'gvlst2': 'subs/gvlst2.F', 'vxcnsp': 'fp/vxcnsp.F', 'clean0': 'subs/invbl.F', 'uoptic': 'subs/m_struc_def.F', 'popta4': 'subs/freeat.F subs/freeat.bk.F', 'clsset': 'subs/clsset.F', 'asadc': 'subs/asadc.F', 'getqvc': 'subs/getq.F', 'iclbsj': 'subs/iclbas.F', 'zslabl': 'subs/zslabl.F', 'rseq': 'subs/rseq.F', 'poiss0': 'subs/atomsr.F', 'gvsym': 'fp/gvsym.F', 'auxfun': 'fp/suq0x.F', 'ioqpp': 'subs/clsprm.F', 'rdistn': 'subs/qdist.F', 'norm2g': 'subs/norm2g.F', 'uham_init': 'subs/m_struc_def.F', 'lmfop2': 'fp/lmfopb.F', 'scg': 'subs/scg.F', 'salphg': 'subs/salphg.F', 'setcg': 'subs/setcg.F', 'eprod': 'subs/pairc.F', 'gvlstn': 'subs/gvlst2.F', 'lattic': 'subs/lattic.F', 'hansrz': 'subs/hansrz.F', 'fint': 'subs/hnsmft.F', 'mkewgt': 'fp/mkewgt.F', 'makdia': 'subs/makdia.F', 'gvlsts': 'subs/gvlst2.F', 'cshear': 'subs/cshear.F', 'prgrme': 'subs/rgrme.F', 'pblch1': 'subs/bloch.F', 'aiosop': 'subs/aiosop.F', 'ovmin': 'subs/ovmin.F', 'symtbl': 'subs/symtbl.F', 'rnatm': 'subs/rnatm.F', 'mkplat': 'subs/mkplat.F', 'tocast': 'subs/findes.F', 'iosg2': 'subs/iosg.F', 'iosg1': 'subs/iosg.F', 'corlsd': 'subs/easypbe.F subs/evxc.F', 'lmfopb': 'fp/lmfopb.F', 'hhibl': 'fp/hhibl.F', 'gwcphi': 'fp/gwcphi.F', 'prelx1': 'subs/relax.F', 'intnos': 'subs/intnos.F', 'mark1': 'subs/bzwts.F', 'io4mm': 'subs/aioxtn.F', 'gengrp': 'subs/gengrp.F', 'trs': 'subs/trs.F', 'xmpbnd': 'fp/bndfp.F', 'tailsm': 'subs/tailsm.F', 'ioorbp': 'subs/ioorbp.F', 'bessel': 'subs/ropbes_alternative.F', 'uspecb': 'subs/uspecb.F', 'sgroup': 'subs/spcgrp.F', 'prlcb1': 'fp/bstrux.F', 'ropbs1': 'subs/ropbes.old.F', 'prlcb3': 'fp/rlocbl.F', 'prlcb2': 'fp/rlocbl.F', 'suqlst': 'subs/suqlst.F', 'io3smm': 'subs/aioxtn.F', 'xxxadd': 'subs/shear.F', 'atfold': 'subs/atfold.F', 'ifindiv': 'fp/hsibl.F', 'suqlsm': 'subs/suqlst.F', 'ftlxp2': 'fp/ftlxp.F', 'stplat': 'subs/mkplat.F', 'newrho': 'subs/atomsr.F', 'rwftai': 'fp/vxtrap.F', 'upot_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'makrm0': 'subs/makrm0.F', 'pgvmat': 'subs/gvmtch.F', 'rhgcm3': 'fp/rhgcmp.F', 'rhgcm2': 'fp/rhgcmp.F', 'grdepl': 'fp/lmfp.F', 'm_struc_func': 'subs/m_struc_def.F subs/m_struc_func.F', 'io4smm': 'subs/aioxtn.F', 'symes': 'subs/findes.F', 'v0intr': 'subs/v0intr.F', 'sumtl1': 'subs/asavqm.F', 'mkbdot': 'subs/mkbdot.F', 'iblch1': 'subs/ibloch.F', 'igann': 'subs/suham.F', 'atomsc': 'subs/atomsr.F', 'ugw_init': 'subs/m_struc_def.F', 'nmham': 'subs/nmham.F', 'hxpbl': 'fp/hxpbl.F', 'groupg': 'subs/groupg.F', 'plana': 'subs/plana.F', 'ifindiv2': 'fp/hsibl.F', 'bzwtsm': 'subs/bzwtsf.F', 'dfphi': 'subs/dfphi.F', 'bzwtsf': 'subs/bzwtsf.F', 'shortn3_initialize': 'subs/shorbz.F', 'chebev': 'subs/ropbes.F', 'cpplat': 'subs/roplat.F', 'getgv2': 'subs/pairc.F', 'cvplat': 'subs/mkplat.F', 'iclbas': 'subs/iclbas.F', 'corpbe': 'subs/easypbe.F', 'writebasis': 'subs/writebasis.F', 'sugw': 'fp/sugw.F', 'bessel_yl': 'subs/ropbes_alternative.F', 'upot_init': 'subs/m_struc_def.F', 'gennlat': 'subs/pairc.F', 'chkes': 'subs/findes.F', 'sstrxq': 'subs/sstrxq.F', 'hansr': 'subs/hansr.F', 'gtv_setst': 'subs/m_gtv.F', 'rhgcmp': 'fp/rhgcmp.F', 'asars1': 'subs/asars.F', 'io5spt': 'subs/aioxtn.F', 'prlrho': 'fp/prrhat.F', 'io5spp': 'subs/aioxtn.F', 'upacks': 'subs/struc_strn.F', 's3pklx': 'subs/pkli.F', 'iosiga': 'subs/mcasim.F', 'pvgtkn': 'fp/mkekin.F', 'xyhmul': 'subs/yyhmul.F', 'fpchk': 'fp/fpchk.F', 'ropynx': 'subs/ropyln1.F', 'wrmap': 'subs/clsprm.F', 'mcasho': 'subs/mcasim.F', 'amagn2': 'subs/amagnc.F', 'ropbes': 'subs/ropbes.F subs/ropbes.old.F subs/ropbes_alternative.F', 'rlxstp': 'subs/rlxstp.F', 'getuk': 'subs/easypbe.F', 'hklos': 'fp/hklos.F', 'symsmr': 'fp/symrho.F', 'baslst': 'subs/baslst.F', 'pwmat': 'fp/pwmat.F', 'nmefac': 'subs/nmefac.F', 'initialize': 'subs/m_sstrnsname.F', 'bndfp': 'fp/bndfp.F', 'pqmixb': 'subs/pqmix.F', 'pvmix3': 'fp/mixrho.F', 'struc_checkclass': 'subs/sp2cls.F', 'paugnl': 'fp/paug1.F', 'asldau': 'subs/asldau.F', 'ghibl': 'fp/ghibl.F', 'mshdot': 'fp/mshdot.F', 'flocbl': 'fp/flocbl.F', 'pvmix6': 'fp/mixrho.F', 'aioxt3': 'subs/aioxtn.F', 'aioxt2': 'subs/aioxtn.F', 'bzmio': 'subs/bzmio.F', 'jxpos': 'fp/jxpos.F', 'xxxbfp': 'fp/bndfp.F', 'rotspu': 'subs/rotspu.F', 'utb_init': 'subs/m_struc_def.F', 'ovlchk': 'subs/ovlchk.F', 'atwf': 'subs/atwf.F', 'shoist': 'subs/shoist.F', 'lsets_bitop_i8': 'subs/spackv_array_copy.F', 'dcmp': 'subs/strdif.F', 'clabel': 'subs/clabel.F', 'aiocls': 'subs/aiocls.F', 'xlgen': 'subs/xlgen.F', 'prmx': 'subs/prmx.F', 'dvdos': 'subs/dvdos.F', 'fixcl': 'subs/plana.F', 'paug2': 'fp/paug1.F', 'paug3': 'fp/paug1.F', 'paug1': 'fp/paug1.F', 'paug4': 'fp/paug1.F', 'ylmrtg': 'subs/ylmrtg.F', 'amagnc': 'subs/amagnc.F', 'sigswitch': 'subs/switch.F', 'ustr_show': 'subs/m_struc_def.F', 'prodx2d': 'subs/rotwv.F', 'totfrc': 'fp/totfrc.F', 'freeat': 'subs/freeat.F subs/freeat.bk.F', 'fullmesh': 'subs/switch.F', 'sblham': 'subs/sblham.F', 'shortn': 'subs/shortn.F', 'gtbsl2': 'fp/gtbsl2.F', 'defpq': 'subs/defpq.F', 'addbas': 'subs/addbas.F', 'smhsbl': 'fp/smhsbl.F', 'supot': 'fp/supot.F', 'readctrl67': 'subs/m_rdctrlchk.F', 'splwts': 'subs/splwts.F', 'pvang2': 'subs/shoshl.F', 'mpint': 'subs/mpint.F', 'pysmr1': 'subs/symq.F', 'setuk': 'subs/easypbe.F', 'ppair1': 'subs/pairc.F', 'evcflg': 'subs/rotevs.F', 'flocb2': 'fp/flocbl.F', 'aioxtn': 'subs/aioxtn.F', 'mtchae': 'subs/mtchae.F', 'lx2vec': 'subs/lx2vec.F', 'ioeula': 'subs/ioeula.F', 'grpgen': 'subs/grpgen.F', 'umix': 'subs/m_struc_def.F', 'parsop': 'subs/psymop.F', 'prothr': 'subs/roth.F', 'addes2': 'subs/findes.F', 'makusq': 'fp/makusq.F', 'shoshl': 'subs/shoshl.F', 'grdep2': 'subs/relax.F', 'makusp': 'fp/makusp.F', 'pvang1': 'subs/shoshl.F', 'u2pph': 'subs/asldau.F', 'paioc2': 'subs/aiocls.F', 'perdew': 'subs/evxc.F', 'struc_eval_io_i8v': 'subs/m_struc_func.F subs/sp2cls.F', 'rdist': 'subs/qdist.F', 'addrwf': 'subs/addrwf.F', 'gtv_setio': 'subs/m_gtv.F', 'struc_packupack_val1': 'subs/sp2cls.F', 'lmfp': 'fp/lmfp.F', 'm_susite_func': 'subs/susite.F', 'shorbz': 'subs/shorbz.F', 'pairc': 'subs/pairc.F', 'pchms2': 'subs/chgmsh.F', 'aginv': 'subs/mksym.F', 'prpos': 'subs/findes.F', 'mapq': 'subs/clsprm.F', 'surho': 'fp/surho.F', 'uarray': 'subs/m_struc_def.F', 'struc_ubz_io': 'subs/sp2cls.F', 'mkekin': 'fp/mkekin.F', 'config': 'subs/config.F', 'praugm': 'fp/praugm.F', 'dosio': 'subs/dosio.F', 'yprm': 'subs/prmx.F', 'gvgvcomp': 'fp/rsibl.F', 'trysop': 'subs/trysop.F', 'augq3z': 'fp/augmbl.F', 'mkcond': 'subs/mkcond.F', 'lattc': 'subs/lattc.F', 'deflmx': 'subs/findes.F', 'zclabl': 'subs/findes.F', 'rotwv': 'subs/rotwv.F', 'splrho': 'fp/splrho.F', 'pioxbs': 'subs/ioxbs.F', 'fradhd': 'fp/fradhd.F', 'hgugbl': 'fp/hgugbl.F', 'sumsro': 'subs/sumsro.F', 'uspec_show': 'subs/m_struc_def.F', 'gtv_lg': 'subs/m_gtv.F', 'iax2fd': 'subs/iax2fd.F', 'siged': 'subs/rdsigm.F', 'io4sg': 'subs/aioxtn.F', 'ugw_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'rsedit': 'fp/rsedit.F', 'sylm': 'subs/sylm.F', 'bloch': 'subs/bloch.F', 'pdstlb': 'subs/dstrbp.F', 'pmtsig': 'subs/switch.F', 'pchmsh': 'subs/chgmsh.F', 'avwsr': 'subs/avwsr.F', 'struc_eval_io_i8_realbody': 'subs/m_struc_func.F subs/sp2cls.F', 'spkli': 'subs/pkli.F', 'rsibl': 'fp/rsibl.F', 'dfratm': 'fp/dfratm.F', 'popta5': 'subs/freeat.F subs/freeat.bk.F', 'popta2': 'subs/freeat.F subs/freeat.bk.F', 'popta3': 'subs/freeat.F subs/freeat.bk.F', 'popta1': 'subs/freeat.F subs/freeat.bk.F', 'delstd': 'subs/delstd.F', 'getqp': 'subs/getqp.F', 'mkrout': 'fp/mkrout.F', 'struc_uctrl_io': 'subs/sp2cls.F', 'symstr': 'subs/symstr.F', 'ghios': 'fp/ghios.F', 'secmtn': 'subs/secmtn.F', 'vxcgr2': 'subs/vxcgr2.F', 'pvsec1': 'subs/secmat.F', 'struc_umix_io': 'subs/sp2cls.F', 'mkbfld': 'subs/mkbfld.F', 'angtab': 'subs/angtab.F', 'delstp': 'subs/delstp.F', 'genqbz': 'fp/genqbz.F', 'bzmsh0': 'subs/bzmesh.F', 'sfill': 'subs/sfill.F', 'ulat': 'subs/m_struc_def.F', 'rsmsym': 'subs/rsmsym.F', 'bstrux': 'fp/bstrux.F', 'pz2idx': 'subs/suidx.F', 'lmhelp': 'lmv7.F lmfav7.F', 'tbhsi': 'fp/tbhsi.F', 'soprm': 'subs/soprm.F', 'ftfalo': 'subs/freeat.F subs/freeat.bk.F', 'hanszd': 'subs/hanszd.F', 'll': 'subs/ll.F', 'suham2': 'subs/suham2.F', 'freats': 'subs/freeat.F subs/freeat.bk.F', 'gcor': 'subs/easypbe.F subs/evxc.F', 'nnrl': 'subs/nnrl.F', 'makrwf': 'subs/makrwf.F', 'pnunew': 'fp/pnunew.F', 'chkxpn': 'fp/fpchk.F', 'poinsp': 'fp/poinsp.F', 'usite_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'adbkql': 'fp/addbkg.F', 'iostr': 'subs/iostr.F', 'shear': 'subs/shear.F', 'rmesh': 'subs/rmesh.F', 'mkrou1': 'fp/mkrout.F', 'mkrou2': 'fp/mkrout.F', 'mkrou3': 'fp/mkrout.F', 'mkrou4': 'fp/mkrout.F', 'mkrou5': 'fp/mkrout.F', 'mkrou6': 'fp/mkrout.F', 'io4spt': 'subs/aioxtn.F', 'zprm3': 'subs/prmx.F', 'gvgetf': 'subs/gvlist.F', 'clsprp': 'subs/clsprm.F', 'augqs3': 'fp/augmbl.F', 'secmt2': 'subs/secmat.F', 'clsprm': 'subs/clsprm.F', 'shorps': 'subs/shorps.F', 'hklgbl': 'fp/hklgbl.F', 'getq': 'subs/getq.F', 'tkadd': 'subs/m_toksw.F', 'sortea': 'subs/pairc.F', 'lcrho': 'fp/splrho.F', 'bigges': 'subs/findes.F', 'rhomom': 'fp/rhomom.F', 'gtv_r8v': 'subs/m_gtv.F', 'qpp2mp': 'subs/asaqmp.F', 'asavqm': 'subs/asavqm.F', 'spgcop': 'subs/spcgrp.F', 'pp2enu': 'subs/pp2enu.F', 'xxint0': 'subs/mpint.F', 'cppos': 'fp/lmfp.F', 'zevl': 'fp/stonerrsa.F', 'pvioeu': 'subs/ioeula.F', 'mcasan': 'subs/mcasim.F', 'tksw': 'subs/m_toksw.F', 'susite': 'subs/susite.F', 'pvsub2': 'subs/susite.F', 'prmx0': 'subs/prmx.F', 'gtpmin': 'subs/findes.F', 'suqlse': 'subs/suqlst.F', 'hansz1': 'subs/hansrz.F', 'hansz2': 'subs/hansrz.F', 'divctakao': 'subs/rdsigm.F', 'suphas': 'fp/suphas.F', 'gtbvec': 'subs/gtbvec.F', 'subzi': 'subs/subzi.F', 'blochi': 'subs/blochi.F', 'hstrux': 'subs/hstrux.F', 'pvrhm2': 'fp/rhomom.F', 'projql': 'subs/projql.F', 'latrel': 'subs/findes.F', 'gensym': 'subs/gensym.F', 'ovcall': 'subs/ovmin.F', 'getinput_i4v': 'subs/m_gtv.F', 'hstrud': 'subs/hstrux.F', 'chkdmu': 'subs/chkdmu.F', 'lgstar': 'fp/lgstar.F', 'prodln': 'subs/roplat.F', 'rstr0': 'subs/rstr0.F', 'paugq1': 'fp/bstrux.F', 'paugq2': 'fp/bstrux.F', 'f100': 'subs/f100.F', 'optfab': 'subs/freeat.F subs/freeat.bk.F', 'uoptic_show': 'subs/m_struc_def.F', 'struc_uordn_io': 'subs/sp2cls.F', 'hnsmft': 'subs/hnsmft.F', 'hsibl1': 'fp/hsibl.F', 'wripp': 'subs/invbl.F', 'makpph': 'subs/makpph.F', 'spec2c': 'fp/lmaux.F', 'makus2': 'fp/makusp.F', 'sugcut': 'subs/sugcut.F', 'pqmixa': 'subs/pqmix.F', 'pqmixc': 'subs/pqmix.F', 'asaqmp': 'subs/asaqmp.F', 'pvaioc': 'subs/aiocls.F', 'vxc0sp': 'subs/vxc0sp.F', 'fswgts': 'subs/fswgts.F', 'matm': 'fp/bndconn_v2.F', 'struc_upot_io': 'subs/sp2cls.F', 'nosbzm': 'subs/nosbzm.F', 'uordn_show': 'subs/m_struc_def.F', 'aioxt1': 'subs/aioxtn.F', 'ortrwf': 'subs/addrwf.F', 'ubz_init': 'subs/m_struc_def.F', 'rotspn': 'subs/rotspn.F', 'io4pt': 'subs/aioxtn.F', 'struc_eval_io_r8': 'subs/m_struc_func.F subs/sp2cls.F', 'remhyb': 'subs/remhyb.F', 'io4pp': 'subs/aioxtn.F', 'q0irre': 'fp/suq0x.F', 'asaddu': 'subs/asldau.F', 'pvmix9': 'fp/mixrho.F', 'uordn_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'pvsub1': 'subs/susite.F', 'gtvchk': 'subs/m_rdctrlchk.F', 'pusq2': 'fp/makusq.F', 'hambl': 'fp/hambl.F', 'polinta': 'fp/polinta.F', 'pusq1': 'fp/makusq.F', 'paugqp': 'fp/bstrux.F', 'pvmix7': 'fp/mixrho.F', 'pvmix4': 'fp/mixrho.F', 'pvmix5': 'fp/mixrho.F', 'trsdot': 'subs/trsdot.F', 'sumlst': 'subs/sumlst.F', 'pairs': 'subs/pairc.F', 'pviomx': 'subs/iomomx.F', 'sttmpd': 'lmv7.F lmfav7.F', 'vxcns4': 'fp/vxcnsp.F', 'vxcns5': 'fp/vxcnsp.F', 'vxcns2': 'fp/vxcnsp.F', 'vxcns3': 'fp/vxcnsp.F', 'lindsc': 'fp/lindsc.F', 'corpw91': 'subs/easypbe.F', 'rdsigm': 'subs/rdsigm.F', 'makrot': 'subs/makrot.F', 'nwitsv': 'subs/nwit.F', 'io4g': 'subs/aioxtn.F', 'radpkl': 'subs/radpkl.F', 'product2': 'subs/rdeq.F', 'fradpk': 'fp/fradpk.F', 'rhogkl': 'fp/rhogkl.F', 'struc_eval_io_r8_realbody': 'subs/m_struc_func.F subs/sp2cls.F', 'bessl2': 'subs/besslr.F', 'uham_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'suham': 'subs/suham.F', 'phidx': 'subs/phidx.F', 'mchan': 'subs/mchan.F', 'getinput_char': 'subs/m_gtv.F', 'hamfb3k': 'subs/hamfb3.F', 'sstrq3': 'subs/sstrxq.F', 'psymrf': 'fp/symrho.F', 'm_hamindex': 'subs/m_hamindex.F', 'mkcfus': 'fp/mkrout.F', 'easypbe': 'subs/easypbe.F', 'prmr': 'subs/prmx.F', 'psymrq': 'fp/symrho.F', 'uoptic_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'wrirsh': 'subs/invbl.F', 'dosspl': 'subs/dosspl.F', 'mkpdos': 'fp/mkpdos.F', 'radmsh': 'subs/radmsh.F', 'addzbk': 'subs/atomsr.F', 'naleph': 'subs/nmham.F', 'dlmn': 'subs/dlmn.F', 'atscpp': 'subs/atomsr.F', 'rhopos': 'fp/symrho.F', 'pxsmr1': 'subs/symq.F', 'strx00': 'subs/strx00.F', 'm_gtv': 'subs/m_gtv.F', 'suqlsr': 'subs/suqlst.F', 'radgkl': 'subs/radgkl.F', 'io47um': 'subs/aioxtn.F', 'struc_ustr_io': 'subs/sp2cls.F', 'besslr': 'subs/besslr.F', 'phvsfp': 'subs/phvsfp.F', 'aiorme': 'subs/aiorme.F', 'xperdew': 'subs/evxc.F', 'uspec': 'subs/m_struc_def.F', 'iosg': 'subs/iosg.F', 'clear_swtok': 'subs/m_toksw.F', 'mcasw': 'subs/mcasim.F', 'prm3': 'subs/prmx.F', 'chimedit': 'fp/chimedit.F', 'psymr1': 'fp/symrho.F', 'psymr0': 'subs/symq.F', 'besslm': 'subs/besslr.F', 'suqlsw': 'subs/suqlst.F', 'io47up': 'subs/aioxtn.F', 'sgvsym': 'fp/sgvsym.F', 'fctp': 'subs/atomsr.F', 'xyrhsr': 'subs/atomsr.F', 'optimise': 'subs/dstrbp.F', 'm_toksw': 'subs/m_toksw.F', 'gtv_r8': 'subs/m_gtv.F', 'struc_eval_io_r8v': 'subs/m_struc_func.F subs/sp2cls.F', 'pptrns': 'subs/pptrns.F', 'aiopar': 'subs/aiopar.F', 'nghbor': 'subs/nghbor.F', 'radgra': 'subs/evxc.F', 'gvaddf': 'subs/gvlist.F', 'uspec_init': 'subs/m_struc_def.F', 'newalp': 'subs/newalp.F', 'atqval': 'fp/atqval.F', 'hdxpml': 'subs/hdxpml.F', 'suphs0': 'fp/suphas.F', 'mkrtab': 'subs/mkrtab.F', 'pvvqm2': 'subs/asavqm.F', 'parmx0': 'subs/parmxp.F', 'mcasms': 'subs/mcasim.F', 'sblhm1': 'subs/sblham.F', 'prm': 'subs/prmx.F', 'ropqln': 'subs/ropyln1.F', 'tpkli': 'subs/pkli.F', 'mcasme': 'subs/mcasim.F', 'symia0': 'subs/symiax.F', 'bndconn_v2': 'fp/bndconn_v2.F', 'ropyln': 'subs/ropyln.F', 'suqlsw2': 'subs/suqlst.F', 'conv2int': 'subs/rotwv.F', 'matgg2': 'fp/pwmat.F', 'ebcpl': 'subs/bzwts.F', 'radmwt': 'subs/radmsh.F', 'rotmat': 'subs/mkplat.F', 'struc_ulat_io': 'subs/sp2cls.F', 'exchpw91': 'subs/easypbe.F', 'gvmtch': 'subs/gvmtch.F', 'struc_usite_io': 'subs/sp2cls.F', 'nwit': 'subs/nwit.F', 'rdsigm2': 'subs/rdsigm2.F', 'mxxyz': 'subs/bzmesh.F', 'iors': 'subs/iors.F', 'scglp1': 'subs/scglp1.F', 'distes': 'subs/findes.F', 'pvstr0': 'subs/rstr0.F', 'hansmd': 'subs/hansmd.F', 'fmain': 'lmv7.F subs/prjpos.F subs/ropyln.F subs/shorps.F subs/shorps.F', 'struc_eval_io_i8': 'subs/m_struc_func.F subs/sp2cls.F', 'fixpos': 'subs/fixpos.F', 'iprmsb': 'subs/orbl.F', 'ioplan': 'subs/plana.F', 'multiple': 'subs/dstrbp.F', 'dpdftr': 'subs/dpdftr.F', 'pvmadp': 'subs/asamad.F', 'mcasm2': 'subs/mcasim.F', 'prsed1': 'fp/rsedit.F', 'prsed2': 'fp/rsedit.F', 'prsed3': 'fp/rsedit.F', 'prsed4': 'fp/rsedit.F', 'prsed5': 'fp/rsedit.F', 'sigflg': 'subs/rdsigm.F', 'noshorbz': 'subs/switch.F', 'gvlist': 'subs/gvlist.F', 'iosits': 'subs/iosits.F', 'fopb': 'fp/lmfopb.F', 'utb_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'struc_umove_io': 'subs/sp2cls.F', 'makdsd': 'subs/makdsd.F', 'pratfs': 'subs/freeat.F subs/freeat.bk.F', 'pairtakao': 'subs/pairc.F', 'find_region': 'subs/m_toksw.F', 'renam': 'subs/findes.F', 'symvvl': 'fp/mshvmt.F', 'mkpot': 'fp/mkpot.F', 'potpus': 'fp/potpus.F', 'getinput_r8': 'subs/m_gtv.F', 'grpfnd': 'subs/grpfnd.F', 'pgfset': 'subs/pgfset.F', 'tetirr': 'subs/tetirr.F', 'danrm2': 'subs/roplat.F', 'makidx': 'subs/makidx.F', 'sp2cls': 'subs/sp2cls.F', 'toksw_init': 'subs/m_rdctrl.F', 'hklft': 'fp/hklft.F', 'stoner': 'subs/stoner.F', 'packs': 'subs/struc_strn.F', 'mkqp': 'subs/mkqp.F', 'symia1': 'subs/symiax.F', 'spacks_copy': 'subs/spackv_array_copy.F', 'symprj': 'subs/symprj.F', 'dplmom': 'subs/asamad.F', 'uctrl_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'hsmblq': 'fp/hsmbl.F', 'getcor': 'fp/getcor.F', 'makdos': 'subs/makdos.F', 'mdeses': 'subs/findes.F', 'locpt2': 'fp/locpot.F', 'salph1': 'subs/salph1.F', 'hsmbld': 'fp/hsmbl.F', 'madpot': 'subs/asamad.F', 'mkorbm': 'fp/mkorbm.F', 'iosigh': 'subs/rdsigm.F', 'gaugm': 'fp/gaugm.F', 'umix_show': 'subs/m_struc_def.F', 'struc_spackv_r8v': 'subs/sp2cls.F', 'makipt': 'subs/makipt.F', 'hhugbl': 'fp/hhugbl.F', 'sphbes': 'subs/ropbes.F', 'cosvec': 'subs/mkplat.F', 'suldau': 'subs/suldau.F', 'nrmliz': 'subs/mkplat.F', 'struc_uoptic_io': 'subs/sp2cls.F', 'ldau': 'subs/ldau.F', 'pqmix': 'subs/pqmix.F', 'nstru0': 'subs/strxsu.F', 'madmat': 'subs/madmat.F', 'getinput_i4': 'subs/m_gtv.F', 'intnb': 'subs/stoner.F', 'pqmxio': 'subs/pqmix.F', 'hansmr': 'subs/hansmr.F', 'pvsym2': 'subs/mksym.F', 'pvsym1': 'subs/mksym.F', 'maknos': 'subs/maknos.F', 'fixef0': 'subs/fixef0.F', 'struc_uham_io': 'subs/sp2cls.F', 'prothl': 'subs/roth.F', 'gtv_entrance': 'subs/m_gtv.F', 'loctsh': 'fp/loctsh.F', 'nmpot2': 'subs/nmpot.F', 'pvrotd': 'subs/roth.F', 'ioden2': 'fp/ioden.F', 'gxpml': 'subs/gxpml.F', 'suidx': 'subs/suidx.F', 'm_rdctrl': 'subs/m_rdctrl.F', 'dfaugm': 'fp/dfaugm.F', 'pkl2r': 'subs/pkli.F', 'pvrott': 'subs/roth.F', 'spackv_array_copy_i8_i': 'subs/spackv_array_copy.F', 'ubz_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'protht': 'subs/roth.F', 'pvrots': 'subs/roth.F', 'dfqkkl': 'fp/dfqkkl.F', 'mksbet': 'subs/mksbet.F', 's3pkl0': 'subs/pkli.F', 'p2ovlc': 'fp/ovlocr.F', 'io4spp': 'subs/aioxtn.F', 'chksgr': 'subs/rdsigm.F', 'volsph': 'subs/volsph.F', 'dpdbyl': 'subs/dpdbyl.F', 'm_rdctrl2_func': 'subs/rdctrl2.F', 'uordn': 'subs/m_struc_def.F', 'd3nrm2': 'subs/findes.F', 'efldos': 'fp/efldos.F', 'hsibl2': 'fp/hsibl.F', 'hsibl3': 'fp/hsibl.F', 'hsibl4': 'fp/hsibl.F', 'hsibl5': 'fp/hsibl.F', 'hsibl6': 'fp/hsibl.F', 'fsmbpw': 'fp/fsmbpw.F', 'mtchr2': 'subs/mtchae.F', 'getinput_none': 'subs/m_gtv.F', 'evxc': 'subs/evxc.F subs/evxc.F', 'gh1c': 'subs/gh1c.F', 'rsiblp': 'fp/rsibl.F', 'struc_strtok': 'subs/m_struc_func.F subs/sp2cls.F', 'elocp': 'fp/elocp.F', 's2oka': 'subs/s2oka.F', 'nlocxc': 'subs/evxc.F subs/evxc.F', 'auxfun6': 'fp/suq0x.F', 'augqp3': 'fp/augmbl.F', 'prjpos': 'subs/prjpos.F', 'wrhomt': 'fp/wrhomt.F', 'drr2': 'subs/drr2.F', 'pgbasp': 'subs/pgbasp.F', 'phkl2r': 'subs/pkli.F', 'ggugbl': 'fp/ggugbl.F', 'iomagf': 'subs/iomagf.F', 'mcasim': 'subs/mcasim.F', 'iopos': 'subs/iopos.F', 'ulat_init': 'subs/m_struc_def.F', 'rtoint': 'subs/rotwv.F', 'rhocor': 'subs/atomsr.F', 'mullmf': 'fp/mullmf.F', 'mkppar': 'subs/mkppar.F', 'smcorm': 'fp/smcorm.F', 'ibloch': 'subs/ibloch.F', 'rdctrl2': 'subs/rdctrl2.F', 'rsibl5': 'fp/rsibl.F', 'momusl': 'fp/momusl.F', 'invalp': 'subs/invalp.F', 'clist': 'subs/clist.F', 'ubz_show': 'subs/m_struc_def.F', 'fctail': 'subs/freeat.F subs/freeat.bk.F', 'iobzwt': 'subs/subzi.F', 'lmplio': 'subs/plana.F', 'usite': 'subs/m_struc_def.F', 'hft2rs': 'subs/hft2rs.F', 'm_rdctrlchk': 'subs/m_rdctrlchk.F', 'sint': 'subs/hnsmft.F', 'rsibl2': 'fp/rsibl.F', 'usite_show': 'subs/m_struc_def.F', 'rsibl1': 'fp/rsibl.F', 'rsibl6': 'fp/rsibl.F', 'rsibl7': 'fp/rsibl.F', 'rsibl4': 'fp/rsibl.F', 'pvaglc': 'fp/gaugm.F', 'prtev': 'fp/prtev.F', 'uctrl': 'subs/m_struc_def.F', 'gklq': 'fp/gklq.F', 'fovlp': 'subs/fovlp.F', 'pwmat2': 'fp/pwmat.F', 'pvsms3': 'subs/pvsms2.F', 'dstrbp': 'subs/dstrbp.F', 'mxmymz': 'subs/mxmymz.F', 'strxsu': 'subs/strxsu.F', 'fctor1': 'subs/veecomp.F', 'bzmesh': 'subs/bzmesh.F', 'vxtrap': 'fp/vxtrap.F', 'idxpr': 'subs/makidx.F', 'setofl': 'fp/setofl.F', 'corprm': 'fp/corprm.F', 'splcls': 'subs/splcls.F', 'symrat': 'fp/symrho.F', 'sclp': 'subs/xxxbnd.F', 'nstru1': 'subs/strxsu.F', 'rangedq': 'subs/rotwv.F', 'pqmxup': 'subs/pqmix.F', 't3j_all': 'subs/veecomp.F', 'ggiml': 'subs/ggiml.F', 'hft2r2': 'subs/hft2rs.F', 'hft2r3': 'subs/hft2rs.F', 'makrvl': 'subs/rnatm.F', 'hxpgbl': 'fp/hxpgbl.F', 'symiax': 'subs/symiax.F', 'strxq': 'subs/strxq.F', 'aiogen': 'subs/aiogen.F', 'praldm': 'subs/prdmts.F', 'vldau': 'subs/vldau.F', 'asvsph': 'subs/asvsph.F', 'i3cntr': 'subs/i3cntr.F', 'asymop': 'subs/asymop.F', 'p2pkl': 'subs/pkli.F', 'grpcop': 'subs/grpgen.F', 'offshp': 'subs/orbl.F', 'mshn3p': 'fp/mshn3p.F', 'pvsms1': 'fp/smshft.F', 'cv': 'fp/genqbz.F', 'mdesat': 'subs/findes.F', 'pvsms2': 'subs/pvsms2.F', 'm_struc_func_sp2cls': 'subs/sp2cls.F', 'iget': 'subs/bzwts.F', 'mksoph': 'subs/mksoph.F', 'rdm3': 'subs/prmx.F', 'latlim': 'subs/latlim.F', 'ugw': 'subs/m_struc_def.F', 'vxcgga': 'subs/vxcgga.F', 'umix_init': 'subs/m_struc_def.F', 'getfmt': 'subs/findes.F', 'vlm2us': 'fp/vlm2us.F', 'umove_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'uarray_show': 'subs/m_struc_def.F', 'spackv_array_copy_r8_r8': 'subs/spackv_array_copy.F', 'gintsr': 'subs/atomsr.F', 'ropcsm': 'subs/ropcsm.F', 'hsibl': 'fp/hsibl.F', 'struc_ugw_io': 'subs/sp2cls.F', 'spgeql': 'subs/spcgrp.F', 'struc_utb_io': 'subs/sp2cls.F', 'xxxdif': 'subs/xxxdif.F', 'm_sstrnsname': 'subs/m_sstrnsname.F', 'pvclst': 'subs/clsset.F', 'mtchre': 'subs/mtchae.F', 'mul22': 'subs/rdeq.F', 'psfil2': 'subs/sfill.F', 'iomomx': 'subs/iomomx.F', 'mshn31': 'fp/mshn3p.F', 'fctp0': 'subs/atomsr.F', 'mshn32': 'fp/mshn3p.F', 'iomomq': 'subs/iomomq.F', 'gintsl': 'subs/atomsr.F', 'iomoms': 'subs/iomoms.F', 'gfigbl': 'fp/gfigbl.F', 'ulat_show': 'subs/m_struc_def.F', 'prtbas': 'subs/prtbas.F', 'enutod': 'subs/enutod.F', 'ustr_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'smshft': 'fp/smshft.F', 'uordn_init': 'subs/m_struc_def.F', 'ioden': 'fp/ioden.F', 'subasi': 'subs/subasi.F', 'gvctof': 'subs/gvctof.F', 'gtv_setrcd': 'subs/m_gtv.F', 'gtpcor': 'subs/gtpcor.F', 'symqmp': 'subs/symq.F', 's3pkl': 'subs/pkli.F', 'psho1': 'subs/shoshl.F', 'ncutcorrect': 'fp/ncutcorrect.F', 'psymq0': 'subs/symq.F', 'uctrl_init': 'subs/m_struc_def.F', 'lctoff': 'subs/lattc.F', 'pvpus1': 'fp/potpus.F', 'rgrme': 'subs/rgrme.F', 'ustr_init': 'subs/m_struc_def.F', 'istbpm': 'subs/symtbl.F', 'ppair2': 'subs/pairc.F', 'ppair3': 'subs/pairc.F', 'toksw_init_chk': 'subs/m_rdctrlchk.F', 'upot_show': 'subs/m_struc_def.F', 'io5smm': 'subs/aioxtn.F', 'uspec_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'ppair4': 'subs/pairc.F', 'ppair5': 'subs/pairc.F', 'uctrl_show': 'subs/m_struc_def.F', 'makdla': 'subs/makdla.F', 'contet': 'subs/contet.F', 'radsum': 'subs/radmsh.F', 'utb_show': 'subs/m_struc_def.F', 'xxxse': 'subs/shear.F', 'pqsclb': 'subs/pqmix.F', 'pzhev': 'fp/pzhev.F', 'atsev': 'subs/atsev.F', 'clsctr': 'subs/clsset.F', 'gtv_char': 'subs/m_gtv.F', 'pvsec2': 'subs/secmat.F', 'rsq2': 'subs/rseq.F', 'rsq1': 'subs/rseq.F', 'corgga': 'subs/evxc.F', 'iobsmv': 'subs/iobsmv.F', 'ppratf': 'subs/freeat.F subs/freeat.bk.F', 'qparam': 'subs/rotwv.F', 'rothph': 'subs/rothrm.F', 'pvsug1': 'fp/sugw.F', 'pvvqm1': 'subs/asavqm.F', 'stonerrsa': 'fp/stonerrsa.F', 'rsmesh': 'subs/findes.F', 'getikt': 'subs/m_hamindex.F', 'vesgcm': 'fp/vesgcm.F', 'nsitsh': 'subs/siteid.F', 'getkin': 'subs/stoner.F', 'iosite': 'subs/iosite.F', 'psymqp': 'subs/asaqmp.F', 'qmpkl': 'subs/pkli.F', 'savvxc': 'subs/savvxc.F', 'wlattc': 'fp/sugw.F', 'vesft': 'fp/vesft.F', 'bravsy': 'subs/mkplat.F', 'ellipsoidxmax': 'subs/shorbz.F', 'defspc': 'subs/defspc.F', 'sopert': 'fp/sopert.F', 'upot': 'subs/m_struc_def.F', 'hft2r1': 'subs/hft2rs.F', 'symdmu': 'subs/symdmu.F', 'hanr': 'subs/hanr.F', 'clebsh': 'subs/rdeq.F', 'uoptic_init': 'subs/m_struc_def.F', 'mshint': 'fp/mshint.F', 'umix_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'spcgrp': 'subs/spcgrp.F', 'prrhat': 'fp/prrhat.F', 'gklbld': 'fp/gklbl.F', 'rsort': 'subs/rsort.F', 'gcor2': 'subs/easypbe.F', 'prdmts': 'subs/prdmts.F', 'gtcsym': 'subs/gengrp.F', 'rdeq': 'subs/rdeq.F', 'hmltns': 'subs/hmltns.F', 'pvsal0': 'subs/salph1.F', 'gklblq': 'fp/gklbl.F', 'iobsm0': 'subs/iobsmv.F', 'shffle': 'subs/shffle.F', 'umove': 'subs/m_struc_def.F', 'yyhmul': 'subs/yyhmul.F', 'addsds': 'fp/addrbl.F', 'auxfun6xn': 'fp/suq0x.F', 'ordbas': 'subs/findes.F', 'wf2lo': 'subs/addrwf.F', 'hmltnc': 'subs/hmltnc.F', 'xxxes': 'subs/shear.F', 'bzints': 'subs/bzints.F', 'atmoms': 'subs/defpq.F', 'getxyz': 'subs/plana.F', 'potpar': 'subs/atomsr.F', 'dfrce': 'fp/dfrce.F', 'radwgt': 'subs/radmsh.F', 'grpprd': 'subs/grpgen.F', 'mksym': 'subs/mksym.F', 'psymop': 'subs/psymop.F', 'smvxc4': 'fp/smvxcm.F', 'maknrs': 'subs/maknrs.F', 'getirr': 'subs/findes.F', 'uarray_init': 'subs/m_struc_def.F', 'smvxc3': 'fp/smvxcm.F', 'smvxc2': 'fp/smvxcm.F', 'sstrq1': 'subs/sstrxq.F', 'gklbl': 'fp/gklbl.F', 'exchpbe': 'subs/easypbe.F', 'sstrq2': 'subs/sstrxq.F', 'fklbl': 'fp/fklbl.F', 'defwsr': 'subs/defwsr.F', 'permhk': 'fp/hambls.F', 'phmbl3': 'fp/hambls.F', 'orbl': 'subs/orbl.F', 'ioaindx': 'fp/sugw.F', 'oraddp': 'subs/oraddp.F', 'efrng2': 'subs/efrng2.F', 'umove_init': 'subs/m_struc_def.F', 'pkl2ro': 'fp/pkl2ro.F', 'findes': 'subs/findes.F', 'lattdf': 'subs/lattdf.F', 'ioposs': 'subs/iopos.F', 'tri_rule': 'subs/veecomp.F', 'stonerpb': 'fp/stonerpb.F', 'addbkgl': 'fp/addbkg.F', 'hxpos': 'fp/hxpos.F', 'gpfndx': 'subs/spcgrp.F', 'asamad': 'subs/asamad.F', 'iosave': 'subs/iosave.F', 'dlmtor': 'subs/lattc.F', 'secmat': 'subs/secmat.F', 'pvdf1': 'fp/dfrce.F', 'makr': 'subs/ropyln.F', 'pvdf3': 'fp/dfrce.F', 'pvdf2': 'fp/dfrce.F', 'gtv_i4v': 'subs/m_gtv.F', 'pvdf4': 'fp/dfrce.F', 'ovlpfa': 'fp/ovlpfa.F', 'sclwsr': 'subs/sclwsr.F', 'debugmode': 'subs/switch.F', 'struc_spackv_iv': 'subs/sp2cls.F', 'shftpp': 'subs/shftpp.F', 'zprm': 'subs/prmx.F', 'readctrlpq': 'subs/m_rdctrl.F', 'iofa': 'subs/iofa.F', 'rothrm': 'subs/rothrm.F', 'parms0': 'subs/parmxp.F', 'suq0x': 'fp/suq0x.F', 'roth': 'subs/roth.F', 'suylg': 'fp/suylg.F', 'phmbls': 'fp/hambls.F', 'ghigbl': 'fp/ghigbl.F', 'smvxcm': 'fp/smvxcm.F', 'yprm0': 'subs/prmx.F', 'ii8copy': 'subs/spackv_array_copy.F', 'qdistn': 'subs/qdist.F', 'ioxbs': 'subs/ioxbs.F', 'struc_uspec_io': 'subs/sp2cls.F', 'parmxp': 'subs/parmxp.F', 'shopol': 'subs/shopol.F', 'fill3in': 'subs/m_rdctrl.F', 'setcc': 'subs/rseq.F', 'rotpnt': 'subs/rotpnt.F', 'mkdmtu': 'fp/mkdmtu.F', 'asados': 'subs/asados.F', 'pvcdm2': 'fp/vcdmel.F', 'pvcdm1': 'fp/vcdmel.F', 'latvec': 'subs/latvec.F', 'pvhmb1': 'fp/hambl.F', 'hhigbl': 'fp/hhigbl.F', 'vxnloc': 'subs/vxnloc.F', 'veecomp': 'subs/veecomp.F', 'vsl': 'subs/vsl.F', 'suemph': 'subs/suemph.F', 'mktra2': 'subs/mktra2.F', 'fdpp': 'subs/rdeq.F', 'getbzp': 'subs/getbzp.F', 'suctrl': 'subs/suctrl.F', 'scalpv': 'subs/scalpv.F', 'p1ovlc': 'fp/ovlocr.F', 'rlocbl': 'fp/rlocbl.F', 'ghdiml': 'subs/ghdiml.F', 'pvrgkl': 'fp/rhogkl.F', 'bessjy': 'subs/ropbes.F', 'latpar': 'subs/mkplat.F', 'dostet': 'subs/dostet.F', 'grpop': 'subs/grpop.F', 'sp2cls_notusednow': 'subs/sp2cls.F', 'mksod': 'subs/mksod.F', 'struc_uarray_io': 'subs/sp2cls.F', 'distm': 'subs/salphg.F', 'nswadd': 'subs/m_toksw.F', 'hklbl': 'fp/hklbl.F', 'augq12': 'fp/augmbl.F', 'shortn3': 'subs/shorbz.F', 'salias': 'subs/salias.F', 'augmat': 'fp/augmat.F', 'rotsig': 'subs/rotwv.F', 'cmplat': 'subs/cmplat.F', 'ulat_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'mshvmt': 'fp/mshvmt.F', 'pvagm3': 'fp/gaugm.F', 'pvagm2': 'fp/gaugm.F', 'pvagm1': 'fp/gaugm.F', 'matmul_pwhovl': 'subs/switch.F', 'ubz': 'subs/m_struc_def.F', 'readctrl': 'subs/m_rdctrl.F', 'rotycs': 'subs/rotycs.F', 'iostr4': 'subs/iostr.F', 'gen_hamindex': 'subs/suham.F', 'iostr1': 'subs/iostr.F', 'sclws2': 'subs/sclwsr.F', 'iostr2': 'subs/iostr.F', 'aiopot': 'subs/aiopot.F', 'pair3c': 'subs/pairc.F', 'bzwts': 'subs/bzwts.F', 'makptf': 'subs/makptf.F', 'iorbtm': 'subs/iorbtm.F', 'strdif': 'subs/strdif.F', 'gvputf': 'subs/gvlist.F', 'grpeql': 'subs/grpgen.F', 'pvglst': 'subs/gvlist.F', 'gtplan': 'subs/plana.F', 'phhigb': 'fp/hhigbl.F', 'rlocb1': 'fp/rlocbl.F', 'uarray_size': 'subs/m_struc_def.F subs/m_struc_func.F subs/sp2cls.F', 'dstmt': 'fp/pzhev.F', 'siteid': 'subs/siteid.F', 'asars': 'subs/asars.F', 'hsmqe0': 'subs/hsmq.F', 'swrho': 'fp/splrho.F', 'chgmsh': 'subs/chgmsh.F', 'addbkgsm': 'fp/addbkg.F', 'findctrlstart': 'lmv7.F lmfav7.F', 'augq2z': 'fp/augmbl.F', 'mstrx2': 'subs/mstrx2.F', 'mstrx3': 'subs/mstrx3.F', 'sudmtu': 'subs/sudmtu.F', 'spinav': 'subs/clsprm.F', 'slist': 'subs/slist.F', 'fsmbl': 'fp/fsmbl.F', 'shoang': 'subs/shoshl.F', 'mptauof': 'subs/suham.F', 'aiomom': 'subs/aiomom.F', 'prrmsh': 'subs/prrmsh.F', 'maks0': 'subs/maks0.F', 'pgfpp': 'subs/pgfp.F', 'xxxbnd': 'subs/xxxbnd.F', 'radgrx': 'subs/vxcgr2.F', 'mixrho': 'fp/mixrho.F', 'mkidx2': 'subs/makidx.F', 'symrho': 'fp/symrho.F', 'pvrhom': 'fp/rhomom.F', 'hamfb3': 'subs/hamfb3.F', 'uham_show': 'subs/m_struc_def.F', 'xxsho': 'subs/shoshl.F', 'i8icopy': 'subs/spackv_array_copy.F', 'pvhsmq': 'subs/hsmq.F', 'gklft': 'fp/gklft.F', 'mkehkf': 'fp/mkehkf.F', 's2sph': 'subs/s2sph.F', 'udstmt': 'fp/pzhev.F', 'mcmet': 'subs/mcasim.F', 'hambls': 'fp/hambls.F', 'getinput_entrance': 'subs/m_gtv.F', 'lmaux': 'fp/lmaux.F', 'pplan1': 'subs/plana.F', 'm_psigd': 'subs/m_psigd.F', 'suclst': 'subs/suclst.F', 'utb': 'subs/m_struc_def.F', 'ugw_show': 'subs/m_struc_def.F', 'seneinterp': 'subs/rdsigm2.F', 'smves': 'fp/smves.F', 'blsig': 'fp/hambls.F', 'addrbl': 'fp/addrbl.F', 'vcdmel': 'fp/vcdmel.F', 'roplat': 'subs/roplat.F', 'makbet': 'subs/makbet.F', 'fermi': 'subs/fermi.F', 'saiwav': 'subs/saiwav.F', 'wsymops': 'fp/sugw.F', 'kink2g': 'subs/kink2g.F', 'rotevs': 'subs/rotevs.F', 'bessl': 'subs/besslr.F', 'getinput_r8v': 'subs/m_gtv.F', 'rhoqm': 'fp/symrho.F', 'augmbl': 'fp/augmbl.F', 'aiocor': 'subs/aiocor.F', 'aiova': 'subs/aiova.F', 'm_struc_def': 'subs/m_struc_def.F', 'getde': 'subs/stoner.F', 'single': 'subs/dstrbp.F', 'iomomn': 'subs/iomoms.F', 'elfigr': 'fp/locpot.F', 'io5sg': 'subs/aioxtn.F', 'evxcp': 'subs/evxcp.F', 'evxcv': 'subs/evxcv.F', 'pqsclf': 'subs/pqmix.F', 'hmladb': 'subs/hmladb.F', 'phhibl': 'fp/hhibl.F', 'fillat': 'subs/findes.F', 'regioncheck': 'subs/rotwv.F', 'uham': 'subs/m_struc_def.F', 'xxpl': 'subs/plana.F', 'pvsal1': 'subs/salph1.F', 'relax': 'subs/relax.F', 'f102': 'subs/f102.F', 'symfor': 'subs/symfor.F', 'symlat': 'subs/symlat.F', 'ftlxp': 'fp/ftlxp.F', 'rdovfa': 'fp/rdovfa.F', 'locpot': 'fp/locpot.F', 'oalpha': 'subs/pptrns.F', 'ipwovl': 'fp/pwmat.F', 'sylmnc': 'subs/sylmnc.F', 'reducv': 'subs/findes.F', 'pgfp': 'subs/pgfp.F', 'umove_show': 'subs/m_struc_def.F', 'beschb': 'subs/ropbes.F', 'hsmbl': 'fp/hsmbl.F', 'ccutup': 'subs/ccutup.F', 'pbevxc': 'subs/vxnloc.F', 'excsan': 'subs/evxcv.F', 'sstr2k': 'subs/secmtn.F', 'mshsiz': 'subs/mshsiz.F', 'nmpot': 'subs/nmpot.F', 'csymop': 'subs/asymop.F', 'psigd': 'subs/m_psigd.F', 'ovlocr': 'fp/ovlocr.F', 'pack5upack5_realbody': 'subs/sp2cls.F', 'pqsclc': 'subs/pqmix.F', 'slinz': 'subs/slinz.F', 'prtrkl': 'fp/rhogkl.F', 'mkppovl2': 'fp/sugw.F', 'ugcomp': 'fp/ugcomp.F', 'ustr': 'subs/m_struc_def.F', 'newsigmasw': 'subs/switch.F', 'gtbsl1': 'subs/gtbsl1.F', 'radext': 'subs/radmsh.F', 'gtv_none': 'subs/m_gtv.F', 'spackv': 'subs/sp2cls.F', 'qdist': 'subs/qdist.F', 'symcry': 'subs/symcry.F', 'asprjq': 'subs/atomsr.F', 'hsmq': 'subs/hsmq.F', 'usite_init': 'subs/m_struc_def.F'}
------------ Used sub/fun ----------------
set(['hansr4', 'hansr5', 'rotdlmm', 'interparam', 'ppi2z', 'hansr1', 'hansr2', 'scg', 'setcg', 'ddet33', 'setcc', 'tailsm', 'gvlst2', 'vxcnsp', 'clean0', 'fctp0', 'clsset', 'vxcns3', 'getqvc', 'iclbsj', 'zslabl', 'rseq', 'poiss0', 'gvsym', 'auxfun', 'ioqpp', 'rdistn', 'norm2g', 'uham_init', 'lmfop2', 'imxmnx', 'eprod', 'hdxpml', 'pqmixb', 'hansrz', 'hsmblq', 'rdsigm2', 'sclwsr', 'gvlsts', 'cshear', 'prgrme', 'pblch1', 'aiomp', 'ovmin', 'popta2', 'fctail', 'symtbl', 'rnatm', 'xxint0', 'aioxt3', 'bessel', 'oraddp', 'gtbvec', 'lmfopb', 'hhibl', 'gwcphi', 'prelx1', 'intnos', 'mark1', 'gvlstn', 'io4mm', 'gtvchk', 'trs', 'xmpbnd', 'ioorbp', 'sgroup', 'prlcb1', 'ropbs1', 'prlcb3', 'prlcb2', 'suqlst', 'io3smm', 'xxxadd', 'savvxc', 'nghbor', 'freeat', 'suqlsm', 'ftlxp2', 'madpot', 'stplat', 'suqlse', 'rwftai', 'upot_size', 'makrm0', 'pgvmat', 'rhgcm3', 'rhgcm2', 'grdepl', 'm_struc_func', 'iosigh', 'symes', 'gvctof', 'sumtl1', 'product2', 'cmplat', 'igann', 'atomsc', 'ugw_init', 'nmham', 'hxpbl', 'mkcond', 'iostr1', 'ifindiv2', 'bzwtsm', 'sint', 'bzwtsf', 'shortn3_initialize', 'chebev', 'cpplat', 'getgv2', 'cvplat', 'asadc', 'iclbas', 'corpbe', 'writebasis', 'sugw', 'upot_init', 'gennlat', 'chkes', 'hansr', 'gtv_setst', 'rhgcmp', 'asars1', 'io4pt', 'addbas', 'prlrho', 'uspec_size', 'upacks', 'iosiga', 'pvgtkn', 'xyhmul', 'fpchk', 'ropynx', 'ropbes', 'rlxstp', 'getuk', 'hklos', 'symsmr', 'beschb', 'pwmat', 'ffnam', 'zprm', 'ncutcorrect', 'pvmix3', 'struc_checkclass', 'paugnl', 'shortn3', 'ghibl', 'mshdot', 'flocbl', 'pvmix6', 'swrho', 'findctrlstart', 'bzmio', 'jxpos', 'prrmsh', 'rotspu', 'utb_init', 'ovlchk', 'atwf', 'shoist', 'lsets_bitop_i8', 'clabel', 'aiocls', 'dvdos', 'relax', 'paug2', 'paug3', 'paug1', 'paug4', 'ylmrtg', 'amagnc', 'sigswitch', 'rothph', 'prodx2d', 'totfrc', 'nwitsv', 'fullmesh', 'gtbsl2', 'defpq', 'mkewgt', 'smhsbl', 'supot', 'pvang2', 'mpint', 'pysmr1', 'setuk', 'v0intr', 'flocb2', 'aioxtn', 'mtchae', 'lx2vec', 'uarray', 'grpgen', 'umix', 'addes2', 'vxcns2', 'grdep2', 'seneinterp', 'pvang1', 'u2pph', 'paioc2', 'perdew', 'rdist', 'addrwf', 'gtv_setio', 'uctrl', 'struc_packupack_val1', 'lmfp', 'regioncheck', 'm_susite_func', 'shorbz', 'pairc', 'pchms2', 'aginv', 'prpos', 'surho', 'pz2idx', 'struc_ubz_io', 'mkekin', 'config', 'aiopot', 'praugm', 'dosio', 'yprm', 'gvgvcomp', 'trysop', 'augq3z', 'lattc', 'deflmx', 'zclabl', 'rotwv', 'splrho', 'pioxbs', 'fradhd', 'plana', 'avwsr', 'iax2fd', 'siged', 'io4g', 'ugw_size', 'rsedit', 'bloch', 'mxxyz', 'pdstlb', 'pmtsig', 'pchmsh', 'pp2enu', 'struc_eval_io_i8_realbody', 'rsibl', 'dfratm', 'popta5', 'nrmliz', 'popta3', 'popta1', 'delstd', 'getqp', 'mkrout', 'hamfb3k', 'struc_uctrl_io', 'symstr', 'ghios', 'secmtn', 'vxcgr2', 'pvsec1', 'struc_umix_io', 'mkbfld', 'angtab', 'delstp', 'gh1c', 'bzmsh0', 'pvrott', 'ulat', 'rsmsym', 'bstrux', 'rsq1', 'lmhelp', 'tbhsi', 'soprm', 'gtv_setrcd', 'hanszd', 'll', 'iobsmv', 'freats', 'gcor', 'vxcgga', 'tksw', 'makrwf', 'pnunew', 'chkxpn', 'poinsp', 'usite_size', 'adbkql', 'mksym', 'shear', 'rmesh', 'mkrou1', 'mkrou2', 'mkrou3', 'mkrou4', 'mkrou5', 'mkrou6', 'xlgen', 'zprm3', 'gvgetf', 'clsprp', 'augqs3', 'secmt2', 'clsprm', 'fint', 'shorps', 'hklgbl', 'pvvqm1', 'tkadd', 'sortea', 'lcrho', 'bigges', 'rhomom', 'qpp2mp', 'hsmq', 'spgcop', 'cppos', 'zevl', 'pvioeu', 'tocast', 'mptauof', 'pvsub2', 'gtpmin', 'hansz1', 'hansz2', 'suphas', 'iofa', 'mkidx2', 'hstrux', 'pvrhm2', 'projql', 'm_psigd', 'gensym', 'ovcall', 'hstrud', 'chkdmu', 'lgstar', 'prodln', 'rstr0', 'paugq1', 'paugq2', 'reducv', 'optfab', 'hnsmft', 'hsibl1', 'wripp', 'makpph', 'spec2c', 'makus2', 'sugcut', 'pqmixa', 'pqmixc', 'lattic', 'pvaioc', 'vxc0sp', 'fswgts', 'matm', 'fovlp', 'aioxt1', 'ortrwf', 'ubz_init', 'rotspn', 'iblch1', 'spacks_copy', 'remhyb', 'io4pp', 'asaddu', 'pvmix9', 'mcasho', 'pvsub1', 'gengrp', 'pusq2', 'hambl', 'polinta', 'pusq1', 'paugqp', 'pvmix7', 'pvmix4', 'pvmix5', 'ellipsoidxmax', 'pairs', 'pviomx', 'vxcns4', 'vxcns5', 'makusq', 'makusp', 'lindsc', 'corpw91', 'hsmbl', 'radpkl', 'auxfun6xn', 'fradpk', 'rhogkl', 'struc_eval_io_r8_realbody', 'bessl2', 'uham_size', 'suham', 'phidx', 'mchan', 'hgugbl', 'sstrq3', 'psymrf', 'm_hamindex', 'mkcfus', 'easypbe', 'psymrq', 'uoptic_size', 'prmx', 'fixpos', 'mkpdos', 'addzbk', 'dlmn', 'atscpp', 'pxsmr1', 'strx00', 'radgkl', 'uspec_init', 'radmwt', 'phvsfp', 'hansmd', 'xperdew', 'uspec', 'clear_swtok', 'io4sg', 'drr2', 'symia1', 'chimedit', 'psymr1', 'psymr0', 'shortn', 'nstru0', 'hansmr', 'loctsh', 'xyrhsr', 'initialize', 'optimise', 'vldau', 'aiopar', 'ifindiv', 'gklft', 'gvaddf', 'iomagf', 'spackv', 'newalp', 'atqval', 'pptrns', 'suphs0', 'mkrtab', 'pvvqm2', 'parmx0', 'mkbdot', 'mcasms', 'sblhm1', 'prm', 'ropqln', 'mcasme', 'symia0', 'udstmt', 'ropyln', 'hmltns', 'conv2int', 'matgg2', 'ebcpl', 'besslr', 'rotmat', 'struc_ulat_io', 'nosbzm', 'struc_usite_io', 'ulat_init', 'nwit', 'struc_spackv_r8v', 'newrho', 'iors', 'distes', 'pvstr0', 'iprmsb', 'uspecb', 'parms0', 'parmxp', 'ioplan', 'multiple', 'dpdftr', 'pvmadp', 'mcasm2', 'prsed1', 'prsed2', 'prsed3', 'prsed4', 'prsed5', 'sigflg', 'noshorbz', 'gvlist', 'gtplan', 'utb_size', 'struc_umove_io', 'makdsd', 'popta4', 'find_region', 'renam', 'symvvl', 'mkpot', 'potpus', 'makipt', 'ugw', 'grpfnd', 'pgfset', 'hmltnc', 'atfold', 'makidx', 'sp2cls', 'toksw_init', 'hklft', 'getef', 'upot', 'symprj', 'dplmom', 'uctrl_size', 'sylm', 'getcor', 'makdos', 'mdeses', 'locpt2', 'sumsro', 'hsmbld', 'radsum', 'mkorbm', 'io4smm', 'gaugm', 'shoshl', 'mkplat', 'hhugbl', 'exchpw91', 'sphbes', 'readctrlpq', 'suldau', 'struc_uoptic_io', 'ldau', 'dcmp', 'io47up', 'madmat', 'intnb', 'pqmxio', 'sgvsym', 'pvsym2', 'pvsym1', 'maknos', 'fixef0', 'struc_uham_io', 'prothl', 'fctp', 'nmpot2', 'pvrotd', 'ioden2', 'gxpml', 'suidx', 'm_rdctrl', 'dfaugm', 'usite', 'pkl2r', 'sfill', 'spackv_array_copy_i8_i', 'prothr', 'protht', 'pvrots', 'dfqkkl', 'mksbet', 'struc_upot_io', 'p2ovlc', 'ioeula', 'chksgr', 'volsph', 'dpdbyl', 'm_rdctrl2_func', 'uordn', 'd3nrm2', 'efldos', 'hsibl2', 'hsibl3', 'hsibl4', 'hsibl5', 'hsibl6', 'fsmbpw', 'mtchr2', 'makrot', 'f102', 'rsiblp', 'struc_strtok', 'elocp', 's2oka', 'grpeql', 'auxfun6', 'augqp3', 'prjpos', 'wrhomt', 'mcasw', 'pgbasp', 'phkl2r', 'ggugbl', 'mcmet', 'iopos', 'asavqm', 'rtoint', 'mullmf', 'smcorm', 'ibloch', 'rdctrl2', 'mkqp', 'momusl', 'invalp', 'cosvec', 'clist', 'm_toksw', 'spackv_array_copy_r8_r8', 'iobzwt', 'lmplio', 'fermi', 'hft2rs', 'dfphi', 'rsibl2', 'iostr', 'rsibl1', 'rsibl6', 'rhocor', 'rsibl4', 'pvaglc', 'prtev', 'ppair1', 'getirr', 'gklq', 'm_gtv', 'yyhmul', 'dstrbp', 'mxmymz', 'strxsu', 'fctor1', 'ubz_size', 'bzmesh', 'vxtrap', 'idxpr', 'setofl', 'corprm', 'splcls', 'symrat', 'sclp', 'nstru1', 'rangedq', 'pqmxup', 't3j_all', 'ggiml', 'hft2r2', 'hft2r3', 'makrvl', 'hxpgbl', 'symiax', 'strxq', 'aiogen', 'praldm', 'asvsph', 'i3cntr', 'asymop', 'aiosop', 'grpcop', 'offshp', 'mshn3p', 'pvsms1', 'cv', 'mdesat', 'pvsms2', 'm_struc_func_sp2cls', 'iget', 'mksoph', 'latlim', 'baslst', 'nnrl', 'umix_init', 'vlm2us', 'aiocor', 'trsdot', 'io4spp', 'iomomn', 'ropcsm', 'hsibl', 'struc_utb_io', 'ioaindx', 'm_sstrnsname', 'ftfalo', 'mul22', 'psfil2', 'iomomx', 'mshn31', 'uoptic', 'mshn32', 'iomomq', 'gintsl', 'iomoms', 'gfigbl', 'prtbas', 'enutod', 'ustr_size', 'smshft', 'uordn_init', 'ioden', 'subasi', 'bndconn_v2', 'gtpcor', 'symqmp', 'io5spt', 'psho1', 'bndfp', 'psymq0', 'uctrl_init', 'lctoff', 'pvpus1', 'rgrme', 'asaqmp', 'ustr_init', 'istbpm', 'ppair2', 'ppair3', 'toksw_init_chk', 'splwts', 'io5smm', 'ppair4', 'ppair5', 'makdla', 'contet', 'radmsh', 'xxxse', 'evxcp', 'm_struc_def', 'atsev', 'clsctr', 'pvsec2', 'rsq2', 'dosspl', 'corgga', 'suham2', 'ppratf', 'iosg1', 'qparam', 'pvsug1', 'getq', 'stonerrsa', 'makr', 'getikt', 'vesgcm', 'iosite', 'psymqp', 'wlattc', 'vesft', 'bravsy', 'sumlst', 'defspc', 'sopert', 'rsibl5', 'struc_ugw_io', 'hft2r1', 'symdmu', 'hanr', 'clebsh', 'uoptic_init', 'mshint', 'umix_size', 'prrhat', 'gklbld', 'rsort', 'gcor2', 'prdmts', 'gtcsym', 'rdeq', 'suqlsw2', 'pvsal0', 'gklblq', 'iobsm0', 'shffle', 'umove', 'addsds', 'pratfs', 'ordbas', 'wf2lo', 'tetirr', 'xxxes', 'bzints', 'atmoms', 'getxyz', 'potpar', 'dfrce', 'gvmtch', 'pvsms3', 'psymop', 'smvxc4', 'maknrs', 'mkppar', 'uarray_init', 'smvxc3', 'smvxc2', 'sstrq1', 'gklbl', 'exchpbe', 'sstrq2', 'fklbl', 'defwsr', 'iosits', 'umove_size', 'orbl', 'xxxdif', 'spgprd', 'efrng2', 'umove_init', 'pkl2ro', 'findes', 'lattdf', 'mtchre', 'tri_rule', 'stonerpb', 'pzhev', 'hxpos', 'asamad', 'iosave', 'dlmtor', 'pvdf1', 'pvdf3', 'pvdf2', 'pvdf4', 'ovlpfa', 'debugmode', 'groupg', 'shftpp', 'fmain', 'rothrm', 'roth', 'suylg', 'phmbls', 'augq12', 'smvxcm', 'suctrl', 'ii8copy', 'qdistn', 'ioxbs', 'struc_uspec_io', 'shopol', 'fill3in', 'uordn_size', 'rotpnt', 'mkdmtu', 'asados', 'pvcdm2', 'pvcdm1', 'latvec', 'sstrxq', 'hhigbl', 'vxnloc', 'veecomp', 'vsl', 'suemph', 'mktra2', 'fdpp', 'getbzp', 'scalpv', 'p1ovlc', 'rlocbl', 'iorbtm', 'pvrgkl', 'ccutup', 'latpar', 'dostet', 'grpop', 'io4spt', 'mksod', 'struc_uarray_io', 'distm', 'io47um', 'nswadd', 'hklbl', 'ghigbl', 'asldau', 'salias', 'augmat', 'rotsig', 'nmefac', 'ulat_size', 'mshvmt', 'aiova', 'pvagm3', 'pvagm2', 'pvagm1', 'matmul_pwhovl', 'excsan', 'readctrl', 'rotycs', 'iostr4', 'sstr2k', 'struc_ustr_io', 'sclws2', 'iostr2', 'rsmesh', 'fixcl', 'bzwts', 'makptf', 'gvputf', 'parsop', 'pvglst', 'phhigb', 'rlocb1', 'uarray_size', 'dstmt', 'siteid', 'asars', 'hsmqe0', 'vecpkl', 'chgmsh', 'addbkgsm', 'aioxt2', 'augq2z', 'mstrx2', 'mstrx3', 'sudmtu', 'slist', 'io5sg', 'fsmbl', 'shoang', 'susite', 'aiomom', 'struc_uordn_io', 'aiorme', 'info5', 'maks0', 'pgfpp', 'radgrx', 'mixrho', 'blochi', 'symrho', 'pvrhom', 'hamfb3', 'xxsho', 'i8icopy', 'pvhsmq', 'radgra', 'mkehkf', 's2sph', 'radwgt', 'mkppovl2', 'scglp1', 'lmaux', 'pplan1', 'latrel', 'suclst', 'utb', 'ugw_show', 'makdia', 'smves', 'blsig', 'addrbl', 'vcdmel', 'roplat', 'makbet', 'subzi', 'saiwav', 'wsymops', 'kink2g', 'rotevs', 'bessl', 'mcasan', 'rhoqm', 'augmbl', 'radext', 'getfmt', 'spgeql', 'getde', 'single', 'gintsr', 'ghdiml', 'elfigr', 'pqsclc', 'pqsclb', 'evxcv', 'pqsclf', 'hmladb', 'phhibl', 'fillat', 'corlsd', 'uham', 'xxpl', 'pvsal1', 'packs', 'grpprd', 'symfor', 'symlat', 'ftlxp', 'rdovfa', 'locpot', 'oalpha', 'ipwovl', 'sylmnc', 'f100', 'pgfp', 'danrm2', 'struc_spackv_iv', 'bessjy', 'ubz', 'gen_hamindex', 'mshsiz', 'csymop', 'psigd', 'ovlocr', 'slinz', 'prtrkl', 'hambls', 'ugcomp', 'ustr', 'newsigmasw', 'gtbsl1', 'addbkgl', 'gtv_none', 'qdist', 'symcry', 'asprjq', 'iosg2', 'usite_init'])
------------ Used files ------------------
['subs/hansr4.F']
['subs/hansr5.F']
['subs/suham.F']
['subs/rotwv.F']
['fp/gaugm.F']
['subs/hansr.F']
['subs/hansr.F']
['subs/scg.F']
['subs/setcg.F']
['subs/mkplat.F']
['subs/rseq.F']
['subs/tailsm.F']
['subs/gvlst2.F']
['fp/vxcnsp.F']
['subs/invbl.F']
['subs/atomsr.F']
['subs/clsset.F']
['fp/vxcnsp.F']
['subs/getq.F']
['subs/iclbas.F']
['subs/zslabl.F']
['subs/rseq.F']
['subs/atomsr.F']
['fp/gvsym.F']
['fp/suq0x.F']
['subs/clsprm.F']
['subs/qdist.F']
['subs/norm2g.F']
['subs/m_struc_def.F']
['fp/lmfopb.F']
['subs/orbl.F']
['subs/pairc.F']
['subs/hdxpml.F']
['subs/pqmix.F']
['subs/hansrz.F']
['fp/hsmbl.F']
['subs/rdsigm2.F']
['subs/sclwsr.F']
['subs/gvlst2.F']
['subs/cshear.F']
['subs/rgrme.F']
['subs/bloch.F']
['subs/aiomp.F']
['subs/ovmin.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/symtbl.F']
['subs/rnatm.F']
['subs/mpint.F']
['subs/aioxtn.F']
['subs/ropbes_alternative.F']
['subs/oraddp.F']
['subs/gtbvec.F']
['fp/lmfopb.F']
['fp/hhibl.F']
['fp/gwcphi.F']
['subs/relax.F']
['subs/intnos.F']
['subs/bzwts.F']
['subs/gvlst2.F']
['subs/aioxtn.F']
['subs/m_rdctrlchk.F']
['subs/trs.F']
['fp/bndfp.F']
['subs/ioorbp.F']
['subs/spcgrp.F']
['fp/bstrux.F']
['subs/ropbes.old.F']
['fp/rlocbl.F']
['fp/rlocbl.F']
['subs/suqlst.F']
['subs/aioxtn.F']
['subs/shear.F']
['subs/savvxc.F']
['subs/nghbor.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/suqlst.F']
['fp/ftlxp.F']
['subs/asamad.F']
['subs/mkplat.F']
['subs/suqlst.F']
['fp/vxtrap.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/makrm0.F']
['subs/gvmtch.F']
['fp/rhgcmp.F']
['fp/rhgcmp.F']
['fp/lmfp.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F']
['subs/rdsigm.F']
['subs/findes.F']
['subs/gvctof.F']
['subs/asavqm.F']
['subs/rdeq.F']
['subs/cmplat.F']
['subs/suham.F']
['subs/atomsr.F']
['subs/m_struc_def.F']
['subs/nmham.F']
['fp/hxpbl.F']
['subs/mkcond.F']
['subs/iostr.F']
['fp/hsibl.F']
['subs/bzwtsf.F']
['subs/hnsmft.F']
['subs/bzwtsf.F']
['subs/shorbz.F']
['subs/ropbes.F']
['subs/roplat.F']
['subs/pairc.F']
['subs/mkplat.F']
['subs/asadc.F']
['subs/iclbas.F']
['subs/easypbe.F']
['subs/writebasis.F']
['fp/sugw.F']
['subs/m_struc_def.F']
['subs/pairc.F']
['subs/findes.F']
['subs/hansr.F']
['subs/m_gtv.F']
['fp/rhgcmp.F']
['subs/asars.F']
['subs/aioxtn.F']
['subs/addbas.F']
['fp/prrhat.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/struc_strn.F']
['subs/mcasim.F']
['fp/mkekin.F']
['subs/yyhmul.F']
['fp/fpchk.F']
['subs/ropyln1.F']
['subs/ropbes.F', 'subs/ropbes.old.F', 'subs/ropbes_alternative.F']
['subs/rlxstp.F']
['subs/easypbe.F']
['fp/hklos.F']
['fp/symrho.F']
['subs/ropbes.F']
['fp/pwmat.F']
['subs/prmx.F']
['fp/ncutcorrect.F']
['fp/mixrho.F']
['subs/sp2cls.F']
['fp/paug1.F']
['subs/shorbz.F']
['fp/ghibl.F']
['fp/mshdot.F']
['fp/flocbl.F']
['fp/mixrho.F']
['fp/splrho.F']
['lmv7.F', 'lmfav7.F']
['subs/bzmio.F']
['fp/jxpos.F']
['subs/prrmsh.F']
['subs/rotspu.F']
['subs/m_struc_def.F']
['subs/ovlchk.F']
['subs/atwf.F']
['subs/shoist.F']
['subs/spackv_array_copy.F']
['subs/clabel.F']
['subs/aiocls.F']
['subs/dvdos.F']
['subs/relax.F']
['fp/paug1.F']
['fp/paug1.F']
['fp/paug1.F']
['fp/paug1.F']
['subs/ylmrtg.F']
['subs/amagnc.F']
['subs/switch.F']
['subs/rothrm.F']
['subs/rotwv.F']
['fp/totfrc.F']
['subs/nwit.F']
['subs/switch.F']
['fp/gtbsl2.F']
['subs/defpq.F']
['fp/mkewgt.F']
['fp/smhsbl.F']
['fp/supot.F']
['subs/shoshl.F']
['subs/mpint.F']
['subs/symq.F']
['subs/easypbe.F']
['subs/v0intr.F']
['fp/flocbl.F']
['subs/aioxtn.F']
['subs/mtchae.F']
['subs/lx2vec.F']
['subs/m_struc_def.F']
['subs/grpgen.F']
['subs/m_struc_def.F']
['subs/findes.F']
['fp/vxcnsp.F']
['subs/relax.F']
['subs/rdsigm2.F']
['subs/shoshl.F']
['subs/asldau.F']
['subs/aiocls.F']
['subs/evxc.F']
['subs/qdist.F']
['subs/addrwf.F']
['subs/m_gtv.F']
['subs/m_struc_def.F']
['subs/sp2cls.F']
['fp/lmfp.F']
['subs/rotwv.F']
['subs/susite.F']
['subs/shorbz.F']
['subs/pairc.F']
['subs/chgmsh.F']
['subs/mksym.F']
['subs/findes.F']
['fp/surho.F']
['subs/suidx.F']
['subs/sp2cls.F']
['fp/mkekin.F']
['subs/config.F']
['subs/aiopot.F']
['fp/praugm.F']
['subs/dosio.F']
['subs/prmx.F']
['fp/rsibl.F']
['subs/trysop.F']
['fp/augmbl.F']
['subs/lattc.F']
['subs/findes.F']
['subs/findes.F']
['subs/rotwv.F']
['fp/splrho.F']
['subs/ioxbs.F']
['fp/fradhd.F']
['subs/plana.F']
['subs/avwsr.F']
['subs/iax2fd.F']
['subs/rdsigm.F']
['subs/aioxtn.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/rsedit.F']
['subs/bloch.F']
['subs/bzmesh.F']
['subs/dstrbp.F']
['subs/switch.F']
['subs/chgmsh.F']
['subs/pp2enu.F']
['subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/rsibl.F']
['fp/dfratm.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/mkplat.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/delstd.F']
['subs/getqp.F']
['fp/mkrout.F']
['subs/hamfb3.F']
['subs/sp2cls.F']
['subs/symstr.F']
['fp/ghios.F']
['subs/secmtn.F']
['subs/vxcgr2.F']
['subs/secmat.F']
['subs/sp2cls.F']
['subs/mkbfld.F']
['subs/angtab.F']
['subs/delstp.F']
['subs/gh1c.F']
['subs/bzmesh.F']
['subs/roth.F']
['subs/m_struc_def.F']
['subs/rsmsym.F']
['fp/bstrux.F']
['subs/rseq.F']
['lmv7.F', 'lmfav7.F']
['fp/tbhsi.F']
['subs/soprm.F']
['subs/m_gtv.F']
['subs/hanszd.F']
['subs/ll.F']
['subs/iobsmv.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/easypbe.F', 'subs/evxc.F']
['subs/vxcgga.F']
['subs/m_toksw.F']
['subs/makrwf.F']
['fp/pnunew.F']
['fp/fpchk.F']
['fp/poinsp.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/addbkg.F']
['subs/mksym.F']
['subs/shear.F']
['subs/rmesh.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['fp/mkrout.F']
['subs/xlgen.F']
['subs/prmx.F']
['subs/gvlist.F']
['subs/clsprm.F']
['fp/augmbl.F']
['subs/secmat.F']
['subs/clsprm.F']
['subs/hnsmft.F']
['subs/shorps.F']
['fp/hklgbl.F']
['subs/asavqm.F']
['subs/m_toksw.F']
['subs/pairc.F']
['fp/splrho.F']
['subs/findes.F']
['fp/rhomom.F']
['subs/asaqmp.F']
['subs/hsmq.F']
['subs/spcgrp.F']
['fp/lmfp.F']
['fp/stonerrsa.F']
['subs/ioeula.F']
['subs/findes.F']
['subs/suham.F']
['subs/susite.F']
['subs/findes.F']
['subs/hansrz.F']
['subs/hansrz.F']
['fp/suphas.F']
['subs/iofa.F']
['subs/makidx.F']
['subs/hstrux.F']
['fp/rhomom.F']
['subs/projql.F']
['subs/m_psigd.F']
['subs/gensym.F']
['subs/ovmin.F']
['subs/hstrux.F']
['subs/chkdmu.F']
['fp/lgstar.F']
['subs/roplat.F']
['subs/rstr0.F']
['fp/bstrux.F']
['fp/bstrux.F']
['subs/findes.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/hnsmft.F']
['fp/hsibl.F']
['subs/invbl.F']
['subs/makpph.F']
['fp/lmaux.F']
['fp/makusp.F']
['subs/sugcut.F']
['subs/pqmix.F']
['subs/pqmix.F']
['subs/lattic.F']
['subs/aiocls.F']
['subs/vxc0sp.F']
['subs/fswgts.F']
['fp/bndconn_v2.F']
['subs/fovlp.F']
['subs/aioxtn.F']
['subs/addrwf.F']
['subs/m_struc_def.F']
['subs/rotspn.F']
['subs/ibloch.F']
['subs/spackv_array_copy.F']
['subs/remhyb.F']
['subs/aioxtn.F']
['subs/asldau.F']
['fp/mixrho.F']
['subs/mcasim.F']
['subs/susite.F']
['subs/gengrp.F']
['fp/makusq.F']
['fp/hambl.F']
['fp/polinta.F']
['fp/makusq.F']
['fp/bstrux.F']
['fp/mixrho.F']
['fp/mixrho.F']
['fp/mixrho.F']
['subs/shorbz.F']
['subs/pairc.F']
['subs/iomomx.F']
['fp/vxcnsp.F']
['fp/vxcnsp.F']
['fp/makusq.F']
['fp/makusp.F']
['fp/lindsc.F']
['subs/easypbe.F']
['fp/hsmbl.F']
['subs/radpkl.F']
['fp/suq0x.F']
['fp/fradpk.F']
['fp/rhogkl.F']
['subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/besslr.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/suham.F']
['subs/phidx.F']
['subs/mchan.F']
['fp/hgugbl.F']
['subs/sstrxq.F']
['fp/symrho.F']
['subs/m_hamindex.F']
['fp/mkrout.F']
['subs/easypbe.F']
['fp/symrho.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/prmx.F']
['subs/fixpos.F']
['fp/mkpdos.F']
['subs/atomsr.F']
['subs/dlmn.F']
['subs/atomsr.F']
['subs/symq.F']
['subs/strx00.F']
['subs/radgkl.F']
['subs/m_struc_def.F']
['subs/radmsh.F']
['subs/phvsfp.F']
['subs/hansmd.F']
['subs/evxc.F']
['subs/m_struc_def.F']
['subs/m_toksw.F']
['subs/aioxtn.F']
['subs/drr2.F']
['subs/symiax.F']
['fp/chimedit.F']
['fp/symrho.F']
['subs/symq.F']
['subs/shortn.F']
['subs/strxsu.F']
['subs/hansmr.F']
['fp/loctsh.F']
['subs/atomsr.F']
['subs/m_sstrnsname.F']
['subs/dstrbp.F']
['subs/vldau.F']
['subs/aiopar.F']
['fp/hsibl.F']
['fp/gklft.F']
['subs/gvlist.F']
['subs/iomagf.F']
['subs/sp2cls.F']
['subs/newalp.F']
['fp/atqval.F']
['subs/pptrns.F']
['fp/suphas.F']
['subs/mkrtab.F']
['subs/asavqm.F']
['subs/parmxp.F']
['subs/mkbdot.F']
['subs/mcasim.F']
['subs/sblham.F']
['subs/prmx.F']
['subs/ropyln1.F']
['subs/mcasim.F']
['subs/symiax.F']
['fp/pzhev.F']
['subs/ropyln.F']
['subs/hmltns.F']
['subs/rotwv.F']
['fp/pwmat.F']
['subs/bzwts.F']
['subs/besslr.F']
['subs/mkplat.F']
['subs/sp2cls.F']
['subs/nosbzm.F']
['subs/sp2cls.F']
['subs/m_struc_def.F']
['subs/nwit.F']
['subs/sp2cls.F']
['subs/atomsr.F']
['subs/iors.F']
['subs/findes.F']
['subs/rstr0.F']
['subs/orbl.F']
['subs/uspecb.F']
['subs/parmxp.F']
['subs/parmxp.F']
['subs/plana.F']
['subs/dstrbp.F']
['subs/dpdftr.F']
['subs/asamad.F']
['subs/mcasim.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['fp/rsedit.F']
['subs/rdsigm.F']
['subs/switch.F']
['subs/gvlist.F']
['subs/plana.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/sp2cls.F']
['subs/makdsd.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/m_toksw.F']
['subs/findes.F']
['fp/mshvmt.F']
['fp/mkpot.F']
['fp/potpus.F']
['subs/makipt.F']
['subs/m_struc_def.F']
['subs/grpfnd.F']
['subs/pgfset.F']
['subs/hmltnc.F']
['subs/atfold.F']
['subs/makidx.F']
['subs/sp2cls.F']
['subs/m_rdctrl.F']
['fp/hklft.F']
['subs/getef.F']
['subs/m_struc_def.F']
['subs/symprj.F']
['subs/asamad.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/sylm.F']
['fp/getcor.F']
['subs/makdos.F']
['subs/findes.F']
['fp/locpot.F']
['subs/sumsro.F']
['fp/hsmbl.F']
['subs/radmsh.F']
['fp/mkorbm.F']
['subs/aioxtn.F']
['fp/gaugm.F']
['subs/shoshl.F']
['subs/mkplat.F']
['fp/hhugbl.F']
['subs/easypbe.F']
['subs/ropbes.F']
['subs/m_rdctrl.F']
['subs/suldau.F']
['subs/sp2cls.F']
['subs/ldau.F']
['subs/strdif.F']
['subs/aioxtn.F']
['subs/madmat.F']
['subs/stoner.F']
['subs/pqmix.F']
['fp/sgvsym.F']
['subs/mksym.F']
['subs/mksym.F']
['subs/maknos.F']
['subs/fixef0.F']
['subs/sp2cls.F']
['subs/roth.F']
['subs/atomsr.F']
['subs/nmpot.F']
['subs/roth.F']
['fp/ioden.F']
['subs/gxpml.F']
['subs/suidx.F']
['subs/m_rdctrl.F']
['fp/dfaugm.F']
['subs/m_struc_def.F']
['subs/pkli.F']
['subs/sfill.F']
['subs/spackv_array_copy.F']
['subs/roth.F']
['subs/roth.F']
['subs/roth.F']
['fp/dfqkkl.F']
['subs/mksbet.F']
['subs/sp2cls.F']
['fp/ovlocr.F']
['subs/ioeula.F']
['subs/rdsigm.F']
['subs/volsph.F']
['subs/dpdbyl.F']
['subs/rdctrl2.F']
['subs/m_struc_def.F']
['subs/findes.F']
['fp/efldos.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/hsibl.F']
['fp/fsmbpw.F']
['subs/mtchae.F']
['subs/makrot.F']
['subs/f102.F']
['fp/rsibl.F']
['subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/elocp.F']
['subs/s2oka.F']
['subs/grpgen.F']
['fp/suq0x.F']
['fp/augmbl.F']
['subs/prjpos.F']
['fp/wrhomt.F']
['subs/mcasim.F']
['subs/pgbasp.F']
['subs/pkli.F']
['fp/ggugbl.F']
['subs/mcasim.F']
['subs/iopos.F']
['subs/asavqm.F']
['subs/rotwv.F']
['fp/mullmf.F']
['fp/smcorm.F']
['subs/ibloch.F']
['subs/rdctrl2.F']
['subs/mkqp.F']
['fp/momusl.F']
['subs/invalp.F']
['subs/mkplat.F']
['subs/clist.F']
['subs/m_toksw.F']
['subs/spackv_array_copy.F']
['subs/subzi.F']
['subs/plana.F']
['subs/fermi.F']
['subs/hft2rs.F']
['subs/dfphi.F']
['fp/rsibl.F']
['subs/iostr.F']
['fp/rsibl.F']
['fp/rsibl.F']
['subs/atomsr.F']
['fp/rsibl.F']
['fp/gaugm.F']
['fp/prtev.F']
['subs/pairc.F']
['subs/findes.F']
['fp/gklq.F']
['subs/m_gtv.F']
['subs/yyhmul.F']
['subs/dstrbp.F']
['subs/mxmymz.F']
['subs/strxsu.F']
['subs/veecomp.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/bzmesh.F']
['fp/vxtrap.F']
['subs/makidx.F']
['fp/setofl.F']
['fp/corprm.F']
['subs/splcls.F']
['fp/symrho.F']
['subs/xxxbnd.F']
['subs/strxsu.F']
['subs/rotwv.F']
['subs/pqmix.F']
['subs/veecomp.F']
['subs/ggiml.F']
['subs/hft2rs.F']
['subs/hft2rs.F']
['subs/rnatm.F']
['fp/hxpgbl.F']
['subs/symiax.F']
['subs/strxq.F']
['subs/aiogen.F']
['subs/prdmts.F']
['subs/asvsph.F']
['subs/i3cntr.F']
['subs/asymop.F']
['subs/aiosop.F']
['subs/grpgen.F']
['subs/orbl.F']
['fp/mshn3p.F']
['fp/smshft.F']
['fp/genqbz.F']
['subs/findes.F']
['subs/pvsms2.F']
['subs/sp2cls.F']
['subs/bzwts.F']
['subs/mksoph.F']
['subs/latlim.F']
['subs/baslst.F']
['subs/nnrl.F']
['subs/m_struc_def.F']
['fp/vlm2us.F']
['subs/aiocor.F']
['subs/trsdot.F']
['subs/aioxtn.F']
['subs/iomoms.F']
['subs/ropcsm.F']
['fp/hsibl.F']
['subs/sp2cls.F']
['fp/sugw.F']
['subs/m_sstrnsname.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/rdeq.F']
['subs/sfill.F']
['subs/iomomx.F']
['fp/mshn3p.F']
['subs/m_struc_def.F']
['fp/mshn3p.F']
['subs/iomomq.F']
['subs/atomsr.F']
['subs/iomoms.F']
['fp/gfigbl.F']
['subs/prtbas.F']
['subs/enutod.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/smshft.F']
['subs/m_struc_def.F']
['fp/ioden.F']
['subs/subasi.F']
['fp/bndconn_v2.F']
['subs/gtpcor.F']
['subs/symq.F']
['subs/aioxtn.F']
['subs/shoshl.F']
['fp/bndfp.F']
['subs/symq.F']
['subs/m_struc_def.F']
['subs/lattc.F']
['fp/potpus.F']
['subs/rgrme.F']
['subs/asaqmp.F']
['subs/m_struc_def.F']
['subs/symtbl.F']
['subs/pairc.F']
['subs/pairc.F']
['subs/m_rdctrlchk.F']
['subs/splwts.F']
['subs/aioxtn.F']
['subs/pairc.F']
['subs/pairc.F']
['subs/makdla.F']
['subs/contet.F']
['subs/radmsh.F']
['subs/shear.F']
['subs/evxcp.F']
['subs/m_struc_def.F']
['subs/atsev.F']
['subs/clsset.F']
['subs/secmat.F']
['subs/rseq.F']
['subs/dosspl.F']
['subs/evxc.F']
['subs/suham2.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/iosg.F']
['subs/rotwv.F']
['fp/sugw.F']
['subs/getq.F']
['fp/stonerrsa.F']
['subs/ropyln.F']
['subs/m_hamindex.F']
['fp/vesgcm.F']
['subs/iosite.F']
['subs/asaqmp.F']
['fp/sugw.F']
['fp/vesft.F']
['subs/mkplat.F']
['subs/sumlst.F']
['subs/defspc.F']
['fp/sopert.F']
['fp/rsibl.F']
['subs/sp2cls.F']
['subs/hft2rs.F']
['subs/symdmu.F']
['subs/hanr.F']
['subs/rdeq.F']
['subs/m_struc_def.F']
['fp/mshint.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/prrhat.F']
['fp/gklbl.F']
['subs/rsort.F']
['subs/easypbe.F']
['subs/prdmts.F']
['subs/gengrp.F']
['subs/rdeq.F']
['subs/suqlst.F']
['subs/salph1.F']
['fp/gklbl.F']
['subs/iobsmv.F']
['subs/shffle.F']
['subs/m_struc_def.F']
['fp/addrbl.F']
['subs/freeat.F', 'subs/freeat.bk.F']
['subs/findes.F']
['subs/addrwf.F']
['subs/tetirr.F']
['subs/shear.F']
['subs/bzints.F']
['subs/defpq.F']
['subs/plana.F']
['subs/atomsr.F']
['fp/dfrce.F']
['subs/gvmtch.F']
['subs/pvsms2.F']
['subs/psymop.F']
['fp/smvxcm.F']
['subs/maknrs.F']
['subs/mkppar.F']
['subs/m_struc_def.F']
['fp/smvxcm.F']
['fp/smvxcm.F']
['subs/sstrxq.F']
['fp/gklbl.F']
['subs/easypbe.F']
['subs/sstrxq.F']
['fp/fklbl.F']
['subs/defwsr.F']
['subs/iosits.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/orbl.F']
['subs/xxxdif.F']
['subs/spcgrp.F']
['subs/efrng2.F']
['subs/m_struc_def.F']
['fp/pkl2ro.F']
['subs/findes.F']
['subs/lattdf.F']
['subs/mtchae.F']
['subs/veecomp.F']
['fp/stonerpb.F']
['fp/pzhev.F']
['fp/hxpos.F']
['subs/asamad.F']
['subs/iosave.F']
['subs/lattc.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/dfrce.F']
['fp/ovlpfa.F']
['subs/switch.F']
['subs/groupg.F']
['subs/shftpp.F']
['lmv7.F', 'subs/prjpos.F', 'subs/ropyln.F', 'subs/shorps.F', 'subs/shorps.F']
['subs/rothrm.F']
['subs/roth.F']
['fp/suylg.F']
['fp/hambls.F']
['fp/augmbl.F']
['fp/smvxcm.F']
['subs/suctrl.F']
['subs/spackv_array_copy.F']
['subs/qdist.F']
['subs/ioxbs.F']
['subs/sp2cls.F']
['subs/shopol.F']
['subs/m_rdctrl.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['subs/rotpnt.F']
['fp/mkdmtu.F']
['subs/asados.F']
['fp/vcdmel.F']
['fp/vcdmel.F']
['subs/latvec.F']
['subs/sstrxq.F']
['fp/hhigbl.F']
['subs/vxnloc.F']
['subs/veecomp.F']
['subs/vsl.F']
['subs/suemph.F']
['subs/mktra2.F']
['subs/rdeq.F']
['subs/getbzp.F']
['subs/scalpv.F']
['fp/ovlocr.F']
['fp/rlocbl.F']
['subs/iorbtm.F']
['fp/rhogkl.F']
['subs/ccutup.F']
['subs/mkplat.F']
['subs/dostet.F']
['subs/grpop.F']
['subs/aioxtn.F']
['subs/mksod.F']
['subs/sp2cls.F']
['subs/salphg.F']
['subs/aioxtn.F']
['subs/m_toksw.F']
['fp/hklbl.F']
['fp/ghigbl.F']
['subs/asldau.F']
['subs/salias.F']
['fp/augmat.F']
['subs/rotwv.F']
['subs/nmefac.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/mshvmt.F']
['subs/aiova.F']
['fp/gaugm.F']
['fp/gaugm.F']
['fp/gaugm.F']
['subs/switch.F']
['subs/evxcv.F']
['subs/m_rdctrl.F']
['subs/rotycs.F']
['subs/iostr.F']
['subs/secmtn.F']
['subs/sp2cls.F']
['subs/sclwsr.F']
['subs/iostr.F']
['subs/findes.F']
['subs/plana.F']
['subs/bzwts.F']
['subs/makptf.F']
['subs/gvlist.F']
['subs/psymop.F']
['subs/gvlist.F']
['fp/hhigbl.F']
['fp/rlocbl.F']
['subs/m_struc_def.F', 'subs/m_struc_func.F', 'subs/sp2cls.F']
['fp/pzhev.F']
['subs/siteid.F']
['subs/asars.F']
['subs/hsmq.F']
['subs/vecpkl.F']
['subs/chgmsh.F']
['fp/addbkg.F']
['subs/aioxtn.F']
['fp/augmbl.F']
['subs/mstrx2.F']
['subs/mstrx3.F']
['subs/sudmtu.F']
['subs/slist.F']
['subs/aioxtn.F']
['fp/fsmbl.F']
['subs/shoshl.F']
['subs/susite.F']
['subs/aiomom.F']
['subs/sp2cls.F']
['subs/aiorme.F']
['subs/maks0.F']
['subs/pgfp.F']
['subs/vxcgr2.F']
['fp/mixrho.F']
['subs/blochi.F']
['fp/symrho.F']
['fp/rhomom.F']
['subs/hamfb3.F']
['subs/shoshl.F']
['subs/spackv_array_copy.F']
['subs/hsmq.F']
['subs/evxc.F']
['fp/mkehkf.F']
['subs/s2sph.F']
['subs/radmsh.F']
['fp/sugw.F']
['subs/scglp1.F']
['fp/lmaux.F']
['subs/plana.F']
['subs/findes.F']
['subs/suclst.F']
['subs/m_struc_def.F']
['subs/m_struc_def.F']
['subs/makdia.F']
['fp/smves.F']
['fp/hambls.F']
['fp/addrbl.F']
['fp/vcdmel.F']
['subs/roplat.F']
['subs/makbet.F']
['subs/subzi.F']
['subs/saiwav.F']
['fp/sugw.F']
['subs/kink2g.F']
['subs/rotevs.F']
['subs/besslr.F']
['subs/mcasim.F']
['fp/symrho.F']
['fp/augmbl.F']
['subs/radmsh.F']
['subs/findes.F']
['subs/spcgrp.F']
['subs/stoner.F']
['subs/dstrbp.F']
['subs/atomsr.F']
['subs/ghdiml.F']
['fp/locpot.F']
['subs/pqmix.F']
['subs/pqmix.F']
['subs/evxcv.F']
['subs/pqmix.F']
['subs/hmladb.F']
['fp/hhibl.F']
['subs/findes.F']
['subs/easypbe.F', 'subs/evxc.F']
['subs/m_struc_def.F']
['subs/plana.F']
['subs/salph1.F']
['subs/struc_strn.F']
['subs/grpgen.F']
['subs/symfor.F']
['subs/symlat.F']
['fp/ftlxp.F']
['fp/rdovfa.F']
['fp/locpot.F']
['subs/pptrns.F']
['fp/pwmat.F']
['subs/sylmnc.F']
['subs/f100.F']
['subs/pgfp.F']
['subs/roplat.F']
['subs/sp2cls.F']
['subs/ropbes.F']
['subs/m_struc_def.F']
['subs/suham.F']
['subs/mshsiz.F']
['subs/asymop.F']
['subs/m_psigd.F']
['fp/ovlocr.F']
['subs/slinz.F']
['fp/rhogkl.F']
['fp/hambls.F']
['fp/ugcomp.F']
['subs/m_struc_def.F']
['subs/switch.F']
['subs/gtbsl1.F']
['fp/addbkg.F']
['subs/m_gtv.F']
['subs/qdist.F']
['subs/symcry.F']
['subs/atomsr.F']
['subs/iosg.F']
['subs/m_struc_def.F']
set(['subs/shoshl.F', 'subs/intnos.F', 'subs/dosspl.F', 'subs/enutod.F', 'subs/fixpos.F', 'subs/invalp.F', 'subs/salphg.F', 'subs/sumlst.F', 'subs/pkli.F', 'subs/vldau.F', 'subs/hanszd.F', 'subs/savvxc.F', 'subs/tetirr.F', 'fp/supot.F', 'subs/gensym.F', 'subs/ropbes.F', 'subs/freeat.bk.F', 'fp/sopert.F', 'fp/stonerpb.F', 'fp/ghigbl.F', 'subs/lattic.F', 'fp/mkorbm.F', 'subs/iomomq.F', 'subs/mksoph.F', 'subs/vxnloc.F', 'subs/nnrl.F', 'subs/asvsph.F', 'subs/sstrxq.F', 'subs/pairc.F', 'subs/symfor.F', 'subs/pqmix.F', 'subs/radmsh.F', 'fp/ioden.F', 'fp/hhibl.F', 'fp/bndfp.F', 'subs/radgkl.F', 'subs/mtchae.F', 'fp/hklft.F', 'fp/rsibl.F', 'subs/s2oka.F', 'fp/gaugm.F', 'fp/pkl2ro.F', 'subs/rseq.F', 'fp/stonerrsa.F', 'subs/getqp.F', 'subs/mkbdot.F', 'fp/augmat.F', 'subs/mstrx3.F', 'subs/amagnc.F', 'subs/gvlst2.F', 'fp/mkpdos.F', 'subs/mpint.F', 'subs/hansr.F', 'subs/kink2g.F', 'fp/hxpos.F', 'subs/aiogen.F', 'subs/ropbes_alternative.F', 'subs/rdctrl2.F', 'subs/dpdbyl.F', 'subs/hstrux.F', 'subs/hmltns.F', 'subs/splwts.F', 'subs/lx2vec.F', 'subs/grpfnd.F', 'subs/secmtn.F', 'subs/m_hamindex.F', 'subs/gtbvec.F', 'subs/s2sph.F', 'subs/vxcgga.F', 'subs/dstrbp.F', 'fp/getcor.F', 'subs/latvec.F', 'subs/rnatm.F', 'subs/prrmsh.F', 'subs/aiomom.F', 'subs/drr2.F', 'subs/gvctof.F', 'subs/blochi.F', 'subs/asadc.F', 'subs/ioorbp.F', 'fp/atqval.F', 'subs/nwit.F', 'subs/delstd.F', 'subs/latlim.F', 'fp/vxcnsp.F', 'subs/mkqp.F', 'fp/polinta.F', 'subs/symq.F', 'subs/hmltnc.F', 'subs/iorbtm.F', 'subs/iors.F', 'subs/i3cntr.F', 'fp/addbkg.F', 'subs/asymop.F', 'subs/radpkl.F', 'subs/sclwsr.F', 'subs/asldau.F', 'subs/remhyb.F', 'subs/delstp.F', 'subs/iomagf.F', 'fp/fsmbl.F', 'fp/ovlpfa.F', 'subs/spackv_array_copy.F', 'subs/rotycs.F', 'fp/flocbl.F', 'fp/momusl.F', 'fp/pwmat.F', 'subs/aiocls.F', 'subs/ovmin.F', 'fp/sgvsym.F', 'subs/iopos.F', 'fp/bndconn_v2.F', 'fp/addrbl.F', 'subs/aiosop.F', 'subs/hnsmft.F', 'fp/ghibl.F', 'fp/mshdot.F', 'subs/clabel.F', 'subs/aiomp.F', 'subs/ghdiml.F', 'fp/fpchk.F', 'subs/norm2g.F', 'subs/salph1.F', 'fp/rdovfa.F', 'subs/iosite.F', 'fp/ugcomp.F', 'subs/gengrp.F', 'fp/setofl.F', 'fp/mkehkf.F', 'subs/makdos.F', 'subs/makrot.F', 'fp/hxpbl.F', 'subs/pp2enu.F', 'subs/suham2.F', 'subs/mcasim.F', 'subs/rotevs.F', 'subs/nghbor.F', 'fp/mkewgt.F', 'subs/trs.F', 'subs/makipt.F', 'fp/potpus.F', 'fp/mkekin.F', 'subs/aioxtn.F', 'subs/rotspn.F', 'subs/chkdmu.F', 'subs/switch.F', 'subs/soprm.F', 'subs/ropyln1.F', 'fp/hhugbl.F', 'fp/ghios.F', 'subs/vecpkl.F', 'subs/baslst.F', 'fp/mshint.F', 'fp/elocp.F', 'subs/m_psigd.F', 'subs/makdia.F', 'subs/sylmnc.F', 'subs/suemph.F', 'subs/makdla.F', 'subs/ccutup.F', 'subs/m_toksw.F', 'subs/avwsr.F', 'subs/struc_strn.F', 'subs/maknrs.F', 'subs/rdsigm2.F', 'fp/paug1.F', 'subs/aiocor.F', 'subs/defwsr.F', 'subs/strxsu.F', 'fp/suylg.F', 'subs/rmesh.F', 'subs/mshsiz.F', 'fp/ovlocr.F', 'subs/rsort.F', 'subs/tailsm.F', 'fp/lmfopb.F', 'subs/subasi.F', 'subs/iosits.F', 'subs/atsev.F', 'subs/v0intr.F', 'fp/mixrho.F', 'subs/hanr.F', 'subs/rdeq.F', 'fp/ftlxp.F', 'subs/hansr4.F', 'fp/gwcphi.F', 'subs/fermi.F', 'subs/symlat.F', 'subs/getq.F', 'subs/hamfb3.F', 'subs/scglp1.F', 'subs/iclbas.F', 'subs/f100.F', 'subs/ropcsm.F', 'subs/contet.F', 'subs/f102.F', 'fp/gklq.F', 'subs/ioxbs.F', 'subs/symprj.F', 'subs/mksym.F', 'subs/defspc.F', 'subs/hmladb.F', 'subs/mksod.F', 'fp/ncutcorrect.F', 'fp/hhigbl.F', 'fp/hgugbl.F', 'subs/besslr.F', 'subs/strx00.F', 'subs/shortn.F', 'subs/lattdf.F', 'subs/iosg.F', 'subs/spcgrp.F', 'subs/rdsigm.F', 'subs/gxpml.F', 'subs/nosbzm.F', 'fp/makusp.F', 'subs/pgbasp.F', 'fp/corprm.F', 'subs/suham.F', 'subs/iofa.F', 'subs/trysop.F', 'subs/dosio.F', 'subs/cshear.F', 'subs/gvlist.F', 'fp/pnunew.F', 'subs/ropbes.old.F', 'fp/hklbl.F', 'subs/m_struc_func.F', 'subs/aiorme.F', 'fp/gtbsl2.F', 'subs/bzmio.F', 'subs/phidx.F', 'subs/addrwf.F', 'fp/wrhomt.F', 'fp/lgstar.F', 'subs/efrng2.F', 'subs/sfill.F', 'subs/sblham.F', 'subs/evxcp.F', 'subs/bzints.F', 'subs/plana.F', 'subs/aiova.F', 'subs/asavqm.F', 'subs/prmx.F', 'fp/loctsh.F', 'subs/gh1c.F', 'subs/rotwv.F', 'subs/rotpnt.F', 'fp/augmbl.F', 'subs/trsdot.F', 'subs/sugcut.F', 'subs/hsmq.F', 'subs/secmat.F', 'subs/yyhmul.F', 'subs/grpgen.F', 'subs/vsl.F', 'subs/invbl.F', 'subs/symstr.F', 'subs/mstrx2.F', 'subs/asamad.F', 'subs/iostr.F', 'subs/scalpv.F', 'subs/suidx.F', 'subs/symtbl.F', 'subs/susite.F', 'fp/efldos.F', 'subs/prtbas.F', 'subs/phvsfp.F', 'subs/asaqmp.F', 'subs/mkplat.F', 'subs/mksbet.F', 'subs/atwf.F', 'subs/evxcv.F', 'fp/dfaugm.F', 'subs/writebasis.F', 'subs/m_struc_def.F', 'fp/fradpk.F', 'subs/veecomp.F', 'subs/lattc.F', 'fp/mkdmtu.F', 'subs/suctrl.F', 'subs/getef.F', 'fp/dfrce.F', 'subs/cmplat.F', 'subs/uspecb.F', 'fp/prtev.F', 'subs/ylmrtg.F', 'subs/symcry.F', 'subs/vxcgr2.F', 'fp/gfigbl.F', 'subs/atomsr.F', 'fp/vesgcm.F', 'fp/poinsp.F', 'subs/angtab.F', 'subs/pgfset.F', 'subs/asados.F', 'subs/ibloch.F', 'subs/ll.F', 'subs/shear.F', 'fp/lmfp.F', 'fp/smcorm.F', 'subs/clsset.F', 'fp/rsedit.F', 'subs/xxxdif.F', 'subs/subzi.F', 'subs/symdmu.F', 'subs/mktra2.F', 'fp/pzhev.F', 'subs/makbet.F', 'subs/evxc.F', 'fp/splrho.F', 'fp/gvsym.F', 'subs/slist.F', 'subs/shoist.F', 'subs/clsprm.F', 'subs/getbzp.F', 'subs/addbas.F', 'subs/stoner.F', 'fp/mshn3p.F', 'subs/defpq.F', 'fp/dfratm.F', 'subs/makrm0.F', 'subs/iobsmv.F', 'subs/roth.F', 'subs/suldau.F', 'fp/hsmbl.F', 'subs/gvmtch.F', 'subs/bzwtsf.F', 'subs/sylm.F', 'subs/m_rdctrlchk.F', 'subs/ioeula.F', 'subs/nmham.F', 'subs/nmefac.F', 'fp/rhomom.F', 'subs/dostet.F', 'subs/psymop.F', 'subs/suclst.F', 'fp/gklbl.F', 'subs/freeat.F', 'fp/smshft.F', 'fp/hambl.F', 'subs/pptrns.F', 'subs/prjpos.F', 'subs/oraddp.F', 'fp/rhgcmp.F', 'subs/ldau.F', 'subs/makrwf.F', 'subs/xxxbnd.F', 'fp/hxpgbl.F', 'subs/xlgen.F', 'subs/gtbsl1.F', 'fp/vcdmel.F', 'subs/sumsro.F', 'fp/gklft.F', 'subs/atfold.F', 'subs/aiopar.F', 'subs/setcg.F', 'subs/makidx.F', 'fp/smvxcm.F', 'subs/groupg.F', 'subs/iax2fd.F', 'fp/lmaux.F', 'subs/shffle.F', 'subs/m_sstrnsname.F', 'subs/bzwts.F', 'fp/fklbl.F', 'fp/dfqkkl.F', 'subs/rsmsym.F', 'subs/rgrme.F', 'subs/rlxstp.F', 'subs/m_rdctrl.F', 'subs/config.F', 'subs/gtpcor.F', 'fp/mkrout.F', 'subs/zslabl.F', 'subs/makptf.F', 'subs/sudmtu.F', 'subs/aiopot.F', 'subs/shopol.F', 'subs/strxq.F', 'fp/genqbz.F', 'subs/vxc0sp.F', 'fp/suq0x.F', 'fp/fsmbpw.F', 'subs/makdsd.F', 'fp/hambls.F', 'subs/ovlchk.F', 'fp/jxpos.F', 'subs/mkcond.F', 'subs/bloch.F', 'subs/dpdftr.F', 'subs/shorbz.F', 'subs/rothrm.F', 'subs/iosave.F', 'subs/grpop.F', 'subs/fovlp.F', 'fp/hsibl.F', 'subs/iomoms.F', 'subs/chgmsh.F', 'subs/sp2cls.F', 'subs/projql.F', 'subs/saiwav.F', 'subs/mkbfld.F', 'fp/hklos.F', 'fp/hklgbl.F', 'lmv7.F', 'subs/scg.F', 'subs/salias.F', 'subs/mxmymz.F', 'subs/strdif.F', 'subs/volsph.F', 'subs/fixef0.F', 'fp/prrhat.F', 'subs/bzmesh.F', 'subs/dlmn.F', 'fp/bstrux.F', 'subs/ggiml.F', 'subs/madmat.F', 'subs/iomomx.F', 'fp/sugw.F', 'subs/symiax.F', 'fp/vxtrap.F', 'subs/makpph.F', 'fp/mshvmt.F', 'subs/hansrz.F', 'fp/praugm.F', 'subs/clist.F', 'subs/rstr0.F', 'fp/totfrc.F', 'subs/splcls.F', 'subs/mkrtab.F', 'fp/vesft.F', 'fp/symrho.F', 'subs/nmpot.F', 'subs/fswgts.F', 'subs/slinz.F', 'subs/hdxpml.F', 'fp/smhsbl.F', 'subs/hft2rs.F', 'subs/asars.F', 'fp/vlm2us.F', 'lmfav7.F', 'subs/orbl.F', 'subs/maknos.F', 'subs/mkppar.F', 'fp/mullmf.F', 'subs/rotspu.F', 'fp/smves.F', 'subs/dfphi.F', 'subs/shftpp.F', 'subs/suqlst.F', 'subs/dvdos.F', 'subs/hansmd.F', 'subs/pgfp.F', 'fp/ggugbl.F', 'subs/hansmr.F', 'subs/prdmts.F', 'subs/newalp.F', 'fp/rhogkl.F', 'subs/roplat.F', 'fp/locpot.F', 'subs/hansr5.F', 'fp/mkpot.F', 'subs/m_gtv.F', 'subs/easypbe.F', 'subs/pvsms2.F', 'subs/ropyln.F', 'fp/fradhd.F', 'subs/mchan.F', 'subs/qdist.F', 'fp/suphas.F', 'fp/rlocbl.F', 'fp/surho.F', 'fp/makusq.F', 'subs/maks0.F', 'subs/relax.F', 'subs/siteid.F', 'fp/lindsc.F', 'subs/shorps.F', 'fp/tbhsi.F', 'fp/chimedit.F', 'subs/findes.F', 'subs/parmxp.F'])
------------ UnUsed files ------------

set([])
