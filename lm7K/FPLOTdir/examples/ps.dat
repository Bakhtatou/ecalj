%!PS-Adobe-2.0 generated by plsub.f ...
/inch{72 mul}def /cm{72 mul 2.54 div}def 0 0 translate  1 1 scale
/tails 0.4 def % set to 0 for blanking chars without tails
/lto{lineto}def % shorthand for lineto
/blank-on{/b 1 def}def /blank-off{/b 0 def}def blank-on
/smaller 0.67 def % sub/superscripts are this much smaller
/shift   0.33 def % and are shifted by this much of the char height
% push size then font onto stack to select font
/choosefont {findfont exch scalefont setfont} def
% paint object on top of stack at current position
/debug {dup /str 30 string def str cvs show} def
% finding width of longest ordinate label (current width on stack) ...
/max 0 def /mxw{/w exch def w max gt {/max w def} if}def
% string centring, justification in the four quadrants
% and absicca and ordinate label centring ...
/showru{gwrite}def
/showcu{dup stringwidth pop 2 div neg 0 rmoveto gwrite}def
/showlu{dup stringwidth pop neg 0 rmoveto gwrite}def
/showrc{0 h 2 div neg rmoveto gwrite}def
/showcc{dup stringwidth pop 2 div neg h 2 div neg rmoveto gwrite}def
/showlc{dup stringwidth pop neg h 2 div neg rmoveto gwrite}def
/showrd{0 h neg rmoveto gwrite}def
/showld{dup stringwidth pop neg h neg rmoveto gwrite}def
/showcd{dup stringwidth pop 2 div neg h neg rmoveto gwrite}def
/showa{gsave fontsize /Symbol choosefont
       dup stringwidth pop 2 div neg h 1.5 mul neg rmoveto show grestore}def
/showA{gsave fontsize /Symbol choosefont
       dup stringwidth pop 2 div neg h 0.5 mul rmoveto show grestore}def
/showo{gsave fontsize /Symbol choosefont
       dup stringwidth pop dup mxw h 2 div add neg h 2 div neg rmoveto show grestore}def
/showO{gsave fontsize /Symbol choosefont
       dup h 2 div h 2 div neg rmoveto show grestore}def
% aliases for pslabl ...
/show0{showcc}def /show1{gwrite}def /show2{showrd}def /show3{showld}def
/show4{showlu}def
% newline macros for horizontal and vertical labelling ...
/newlinehf{currentpoint fontsize sub moveto}def
/newlinevf{currentpoint exch fontsize add exch moveto}def
/newlinehr{currentpoint fontsize add moveto}def
/newlinevr{currentpoint exch fontsize sub exch moveto}def
% generalised write, string on stack ...
/gwrite {gsave savecurrentpoint blank {wproc} exch kshow grestore} def
/savecurrentpoint {currentpoint /ybak exch def /xbak exch def} def
% blank out area to be written on (string on stack) ...
/blank {b 1 eq{gsave dup stringwidth pop /x exch def
       newpath xbak ybak h tails mul sub moveto
       x 0 rlineto 0 h 1.1 mul h tails mul add rlineto x neg 0 rlineto
       closepath 1 setgray fill grestore}if }def
/wproc {
/sw0h 0 def /sw0u 0 def /sw0o 0 def /sw0c 0 def /sw0t 0 def
/sw1o 0 def /sw1c 0 def /sw1t 0 def /sw0s 0 def /sw1s 0 def
% next char top of stack, test if ^ _ { } ~
  dup  94 eq {/sw0h 1 def} if
  dup  95 eq {/sw0u 1 def} if
  dup 123 eq {/sw0o 1 def} if
  dup 125 eq {/sw0c 1 def} if
  dup 126 eq {/sw0s 1 def} if
  pop 
% prev char top of stack, test if ^ _ { } ~
  dup 123 eq {/sw1o 1 def} if
  dup 125 eq {/sw1c 1 def} if
  dup 126 eq {/sw1s 1 def} if
  pop
% if prev char was { } reset colour and backspace
  sw1o 1 eq sw1c 1 eq or {0 setgray xbak ybak moveto} if
% if prev char was } end sub/superscripts: restore font and shift
  sw1c 1 eq {
             fontsize font choosefont
             0 h shift mul updown mul rmoveto
            } if
% if next char is _ subscript
  sw0u 1 eq {
             /updown 1 def
             /fontsizenow fontsize smaller mul def
             fontsizenow font choosefont
             0 h shift mul neg rmoveto
             1 setgray
            } if
% if next char is ^ superscript
  sw0h 1 eq {
             /updown -1 def
             /fontsizenow fontsize smaller mul def
             fontsizenow font choosefont
             0 h shift mul rmoveto
             1 setgray
            } if
% if next char is ~ symbol font
  sw0s 1 eq {
             /updown 0 def
             fontsize /Symbol choosefont
             1 setgray 
            } if
% if next char is } paint white
  sw0c 1 eq {1 setgray} if
% if next char is { backspace
  sw0o 1 eq {xbak ybak moveto} if
  savecurrentpoint
       } def
% end preamble ...

 % FONT: set font and fontsize ..
/font /Times-Roman def /fontsize  24 def
/h fontsize 0.6 mul def % h is about char height
fontsize font choosefont
